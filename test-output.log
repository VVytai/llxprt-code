
> @vybestack/llxprt-code@0.2.2 test
> npm run test --workspaces --if-present --reporter=verbose --no-coverage

npm warn Unknown cli config "--reporter". This will stop working in the next major version of npm.
npm warn Unknown cli config "--coverage". This will stop working in the next major version of npm.

> @vybestack/llxprt-code-a2a-server@0.2.2 test
> vitest run


 RUN  v3.2.4 /Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/packages/a2a-server

 ✓ src/gcs.test.ts (10 tests) 15ms
 ✓ src/endpoints.test.ts (5 tests) 120ms
 ✓ src/agent.test.ts (5 tests) 48ms

 Test Files  3 passed (3)
      Tests  20 passed (20)
   Start at  15:28:03
   Duration  1.25s (transform 475ms, setup 0ms, collect 2.86s, tests 182ms, environment 0ms, prepare 129ms)

JUNIT report written to /Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/packages/a2a-server/junit.xml

> @vybestack/llxprt-code@0.2.2 test
> vitest run


 RUN  v3.2.4 /Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/packages/cli
      Coverage enabled with v8

 ❯ src/ui/components/messages/ToolGroupMessage.test.tsx (14 tests | 1 failed) 74ms
   ✓ <ToolGroupMessage /> > Golden Snapshots > renders single successful tool call 16ms
   ✓ <ToolGroupMessage /> > Golden Snapshots > renders multiple tool calls with different statuses 4ms
   ✓ <ToolGroupMessage /> > Golden Snapshots > renders tool call awaiting confirmation 3ms
   ✓ <ToolGroupMessage /> > Golden Snapshots > renders shell command with yellow border 2ms
   ✓ <ToolGroupMessage /> > Golden Snapshots > renders mixed tool calls including shell command 3ms
   ✓ <ToolGroupMessage /> > Golden Snapshots > renders with limited terminal height 3ms
   ✓ <ToolGroupMessage /> > Golden Snapshots > renders when not focused 2ms
   ✓ <ToolGroupMessage /> > Golden Snapshots > renders with narrow terminal width 5ms
   × <ToolGroupMessage /> > Golden Snapshots > renders empty tool calls array 6ms
     → Snapshot `<ToolGroupMessage /> > Golden Snapshots > renders empty tool calls array 1` mismatched
   ✓ <ToolGroupMessage /> > Border Color Logic > uses yellow border when tools are pending 3ms
   ✓ <ToolGroupMessage /> > Border Color Logic > uses yellow border for shell commands even when successful 3ms
   ✓ <ToolGroupMessage /> > Border Color Logic > uses gray border when all tools are successful and no shell commands 15ms
   ✓ <ToolGroupMessage /> > Height Calculation > calculates available height correctly with multiple tools with results 4ms
   ✓ <ToolGroupMessage /> > Confirmation Handling > shows confirmation dialog for first confirming tool only 3ms
 ❯ src/ui/hooks/shellCommandProcessor.test.ts (12 tests | 1 failed) 38ms
   ✓ useShellCommandProcessor > should initiate command execution and set pending state 12ms
   ✓ useShellCommandProcessor > should handle successful execution and update history correctly 2ms
   ✓ useShellCommandProcessor > should handle command failure and display error status 1ms
   ✓ useShellCommandProcessor > UI Streaming and Throttling > should throttle pending UI updates for text streams 2ms
   ✓ useShellCommandProcessor > UI Streaming and Throttling > should show binary progress messages correctly 1ms
   × useShellCommandProcessor > should not wrap the command on Windows 10ms
     → expected "spy" to be called with arguments: [ 'dir', '/test/dir', …(3) ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[32m-   "dir",[90m
[31m+   "{ dir; }; __code=$?; pwd > \"/var/folders/9v/l7wpbxmx1lz338tpwz3lh0nh0000gn/T/shell_pwd_abcdef.tmp\"; exit $__code",[90m
[2m    "/test/dir",[22m
[32m-   Any<Function>,[90m
[32m-   Any<Object>,[90m
[31m+   [Function anonymous],[90m
[31m+   AbortSignal {},[90m
[2m    false,[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
   ✓ useShellCommandProcessor > should handle command abort and display cancelled status 2ms
   ✓ useShellCommandProcessor > should handle binary output result correctly 1ms
   ✓ useShellCommandProcessor > should handle promise rejection and show an error 1ms
   ✓ useShellCommandProcessor > should handle synchronous errors during execution and clean up resources 2ms
   ✓ useShellCommandProcessor > Directory Change Warning > should show a warning if the working directory changes 1ms
   ✓ useShellCommandProcessor > Directory Change Warning > should NOT show a warning if the directory does not change 1ms
 ❯ src/ui/hooks/useFolderTrust.test.ts (10 tests | 3 failed) 25ms
   ✓ useFolderTrust > should not open dialog when folder is already trusted 11ms
   ✓ useFolderTrust > should not open dialog when folder is already untrusted 1ms
   ✓ useFolderTrust > should open dialog when folder trust is undefined 1ms
   × useFolderTrust > should handle TRUST_FOLDER choice 6ms
     → expected "spy" to be called with arguments: [ true ][90m

Number of calls: [1m0[22m
[39m
   × useFolderTrust > should handle TRUST_PARENT choice 1ms
     → expected "spy" to be called with arguments: [ true ][90m

Number of calls: [1m0[22m
[39m
   × useFolderTrust > should handle DO_NOT_TRUST choice and trigger restart 1ms
     → expected "spy" to be called with arguments: [ false ][90m

Number of calls: [1m0[22m
[39m
   ✓ useFolderTrust > should do nothing for default choice 1ms
   ✓ useFolderTrust > should set isRestarting to true when trust status changes from false to true 1ms
   ✓ useFolderTrust > should set isRestarting to true when trust status changes from true to false 1ms
   ✓ useFolderTrust > should not set isRestarting when trust status remains the same 1ms
 ❯ src/ui/components/StatsDisplay.test.tsx (12 tests | 12 failed) 176ms
   × <StatsDisplay /> > renders only the Performance section in its zero state 39ms
     → expected '╭────────────────────────────────────…' not to contain 'Interaction Summary'
   × <StatsDisplay /> > renders a table with two models correctly 20ms
     → Snapshot `<StatsDisplay /> > renders a table with two models correctly 1` mismatched
   × <StatsDisplay /> > renders all sections when all data is present 15ms
     → Snapshot `<StatsDisplay /> > renders all sections when all data is present 1` mismatched
   × <StatsDisplay /> > Conditional Rendering Tests > hides User Agreement when no decisions are made 15ms
     → Snapshot `<StatsDisplay /> > Conditional Rendering Tests > hides User Agreement when no decisions are made 1` mismatched
   × <StatsDisplay /> > Conditional Rendering Tests > hides Efficiency section when cache is not used 24ms
     → Snapshot `<StatsDisplay /> > Conditional Rendering Tests > hides Efficiency section when cache is not used 1` mismatched
   × <StatsDisplay /> > Conditional Color Tests > renders success rate in green for high values 6ms
     → Snapshot `<StatsDisplay /> > Conditional Color Tests > renders success rate in green for high values 1` mismatched
   × <StatsDisplay /> > Conditional Color Tests > renders success rate in yellow for medium values 7ms
     → Snapshot `<StatsDisplay /> > Conditional Color Tests > renders success rate in yellow for medium values 1` mismatched
   × <StatsDisplay /> > Conditional Color Tests > renders success rate in red for low values 10ms
     → Snapshot `<StatsDisplay /> > Conditional Color Tests > renders success rate in red for low values 1` mismatched
   × <StatsDisplay /> > Code Changes Display > displays Code Changes when line counts are present 6ms
     → Snapshot `<StatsDisplay /> > Code Changes Display > displays Code Changes when line counts are present 1` mismatched
   × <StatsDisplay /> > Code Changes Display > hides Code Changes when no lines are added or removed 6ms
     → Snapshot `<StatsDisplay /> > Code Changes Display > hides Code Changes when no lines are added or removed 1` mismatched
   × <StatsDisplay /> > Title Rendering > renders the default title when no title prop is provided 6ms
     → Snapshot `<StatsDisplay /> > Title Rendering > renders the default title when no title prop is provided 1` mismatched
   × <StatsDisplay /> > Title Rendering > renders the custom title when a title prop is provided 21ms
     → Snapshot `<StatsDisplay /> > Title Rendering > renders the custom title when a title prop is provided 1` mismatched
 ❯ src/ui/components/InputPrompt.paste.test.tsx (3 tests | 1 failed | 1 skipped) 281ms
   ✓ InputPrompt paste functionality > should handle multi-line paste as a single message 140ms
   ↓ InputPrompt paste functionality > should show paste indicator for multi-line paste
   × InputPrompt paste functionality > should handle single-line paste without special indicator 139ms
     → expected "spy" to be called with arguments: [ ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h ✓ src/integration-tests/test-utils.test.ts (14 tests) 855ms
   ✓ Test Utilities > waitForFile > should wait for file to be created  303ms
   ✓ Test Utilities > waitForFile > should timeout if file is not created  506ms
[?2004l[?2004h[?2004l[?2004h[?2004l ✓ src/ui/hooks/useShellHistory.test.ts (7 tests) 540ms
[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l ✓ src/ui/components/MemoryUsageDisplay.semantic.test.tsx (5 tests) 624ms
[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l[?2004h[?2004l ❯ src/ui/App.test.tsx (49 tests | 15 failed) 998ms
   ✓ App UI > handleAutoUpdate > should not start the update process when running from git 40ms
   × App UI > handleAutoUpdate > should show a success message when update succeeds 21ms
     → expected '\n The first rule of Fight Club is: y…' to contain 'Update successful! The new version wi…'
   × App UI > handleAutoUpdate > should show an error message when update fails 12ms
     → expected '\n The first rule of Fight Club is: y…' to contain 'Automatic update failed. Please try u…'
   × App UI > handleAutoUpdate > should show an error message when spawn fails 11ms
     → expected '\n The first rule of Fight Club is: y…' to contain 'Automatic update failed. Please try u…'
   ✓ App UI > handleAutoUpdate > should not auto-update if GEMINI_CLI_DISABLE_AUTOUPDATER is true 10ms
   ✓ App UI > should display active file when available 10ms
   ✓ App UI > should not display any files when not available 10ms
   ✓ App UI > should display active file and other open files 11ms
   × App UI > should display active file and other context 12ms
     → expected '\n The first rule of Fight Club is: y…' to contain 'Using: 1 open file (ctrl+g to view) |…'
   × App UI > should display default "GEMINI.md" in footer when contextFileName is not set and count is 1 17ms
     → expected '\n The first rule of Fight Club is: y…' to contain 'Using: 1 GEMINI.md file'
   × App UI > should display default "GEMINI.md" with plural when contextFileName is not set and count is > 1 10ms
     → expected '\n The first rule of Fight Club is: y…' to contain 'Using: 2 GEMINI.md files'
   × App UI > should display custom contextFileName in footer when set and count is 1 11ms
     → expected '\n The first rule of Fight Club is: y…' to contain 'Using: 1 AGENTS.md file'
   × App UI > should display a generic message when multiple context files with different names are provided 10ms
     → expected '\n The first rule of Fight Club is: y…' to contain 'Using: 2 context files'
   × App UI > should display custom contextFileName with plural when set and count is > 1 11ms
     → expected '\n The first rule of Fight Club is: y…' to contain 'Using: 3 MY_NOTES.TXT files'
   ✓ App UI > should not display context file message if count is 0, even if contextFileName is set 10ms
   ✓ App UI > should display GEMINI.md and MCP server count when both are present 11ms
   ✓ App UI > should display only MCP server count when GEMINI.md count is 0 11ms
   ✓ App UI > should display Tips component by default 10ms
   ✓ App UI > should not display Tips component when hideTips is true 38ms
   ✓ App UI > should display Header component by default 12ms
   ✓ App UI > should not display Header component when hideBanner is true 35ms
   ✓ App UI > should display Footer component by default 11ms
   ✓ App UI > should not display Footer component when hideFooter is true 20ms
   ✓ App UI > should show footer if system says show, but workspace and user settings say hide 25ms
   ✓ App UI > should show tips if system says show, but workspace and user settings say hide 24ms
   × App UI > when no theme is set > should display theme dialog if NO_COLOR is not set 31ms
     → expected '╭────────────────────────────────────…' to contain 'I\'m Feeling Lucky (esc to cancel'
   × App UI > when no theme is set > should display a message if NO_COLOR is set 27ms
     → expected '\nINFO: Theme configuration unavailab…' to contain 'I\'m Feeling Lucky (esc to cancel'
   × App UI > should render the initial UI correctly 13ms
     → Snapshot `App UI > should render the initial UI correctly 1` mismatched
   × App UI > should render correctly with the prompt input box 16ms
     → Snapshot `App UI > should render correctly with the prompt input box 1` mismatched
   ✓ App UI > with initial prompt from --prompt-interactive > should submit the initial prompt automatically 34ms
   ✓ App UI > errorCount > should correctly sum the counts of error messages 15ms
   ✓ App UI > auth validation > should call validateAuthMethod when useExternalAuth is false 14ms
   ✓ App UI > auth validation > should NOT call validateAuthMethod when useExternalAuth is true 14ms
   × App UI > when in a narrow terminal > should render with a column layout 14ms
     → Snapshot `App UI > when in a narrow terminal > should render with a column layout 1` mismatched
   ✓ App UI > NO_COLOR smoke test > should render without errors when NO_COLOR is set 18ms
   ✓ App UI > FolderTrustDialog > should display the folder trust dialog when isFolderTrustDialogOpen is true 21ms
   ✓ App UI > FolderTrustDialog > should display the folder trust dialog when the feature is enabled but the folder is not trusted 20ms
   ✓ App UI > FolderTrustDialog > should not display the folder trust dialog when the feature is disabled 15ms
   ✓ App UI > Message Queuing > should queue messages when handleFinalSubmit is called during streaming 14ms
   ✓ App UI > Message Queuing > should auto-send queued messages when transitioning from Responding to Idle 74ms
   ✓ App UI > Message Queuing > should display queued messages with dimmed color 19ms
   ✓ App UI > Message Queuing > should clear message queue after sending 31ms
   ✓ App UI > Message Queuing > should handle empty messages by filtering them out 11ms
   ✓ App UI > Message Queuing > should combine multiple queued messages with double newlines 39ms
   ✓ App UI > Message Queuing > should limit displayed messages to MAX_DISPLAYED_QUEUED_MESSAGES 9ms
   ✓ App UI > Message Queuing > should render message queue display without errors 10ms
   ✓ App UI > debug keystroke logging > should pass debugKeystrokeLogging setting to KeypressProvider 9ms
   ✓ App UI > debug keystroke logging > should use default false value when debugKeystrokeLogging is not set 9ms
   × App UI > Ctrl+C behavior > should call cancel but only clear the prompt when a tool is executing 119ms
     → expected ' ╭───────────────────────────────────…' to contain 'some text'
 ✓ src/ui/hooks/useAtCompletion.test.ts (13 tests) 1012ms
 ✓ src/ui/hooks/useGeminiStream.test.tsx (36 tests) 351ms
 ✓ src/ui/components/AuthDialog.test.tsx (10 tests) 419ms
 ✓ src/ui/components/messages/ToolConfirmationMessage.responsive.test.tsx (10 tests) 423ms
 ✓ src/ui/hooks/slashCommandProcessor.test.ts (30 tests) 1744ms
 ✓ src/ui/components/SettingsDialog.test.tsx (39 tests) 3162ms
   ✓ SettingsDialog > String Settings Editing > should allow editing and committing a string setting  541ms
 ✓ src/ui/hooks/useSlashCompletion.test.ts (47 tests) 3184ms
 ✓ src/ui/hooks/atCommandProcessor.test.ts (40 tests) 297ms
 ✓ src/ui/utils/clipboardUtils.test.ts (6 tests) 149ms
 ✓ src/ui/hooks/usePrivacySettings.test.ts (6 tests) 289ms
 ✓ src/ui/hooks/vim.test.ts (87 tests) 150ms
 ✓ src/ui/components/messages/DiffRenderer.test.tsx (14 tests | 3 skipped) 156ms
 ✓ test/ui/commands/authCommand-logout.test.ts (21 tests) 990ms
   ✓ AuthCommand - Logout Property-Based Tests > should handle concurrent logout commands safely (with seed=1867295318)  740ms
 ✓ src/ui/components/shared/RadioButtonSelect.test.tsx (13 tests) 263ms
 ✓ src/ui/utils/MarkdownDisplay.test.tsx (16 tests) 145ms
 ✓ src/ui/components/Footer.responsive.test.tsx (22 tests) 88ms
 ✓ src/ui/commands/setupGithubCommand.test.ts (10 tests | 2 skipped) 37ms
 ✓ src/ui/commands/ideCommand.test.ts (9 tests) 5020ms
   ✓ ideCommand > install subcommand > should install the extension  5013ms
 ✓ src/ui/components/FolderTrustDialog.test.tsx (6 tests) 115ms
 ✓ src/ui/containers/SessionController.test.tsx (15 tests) 122ms
 ✓ src/ui/components/ProviderModelDialog.responsive.test.tsx (11 tests) 123ms
 ❯ src/ui/hooks/useCommandCompletion.test.ts (17 tests | 7 failed) 5061ms
   ✓ useCommandCompletion > Core Hook Behavior > State Management > should initialize with default state 12ms
   ✓ useCommandCompletion > Core Hook Behavior > State Management > should reset state when completion mode becomes IDLE 6ms
   ✓ useCommandCompletion > Core Hook Behavior > State Management > should reset all state to default values 1ms
   ✓ useCommandCompletion > Core Hook Behavior > State Management > should call useAtCompletion with the correct query for an escaped space 3ms
   ✓ useCommandCompletion > Core Hook Behavior > State Management > should correctly identify the completion context with multiple @ symbols 2ms
   × useCommandCompletion > Core Hook Behavior > Navigation > should handle navigateUp with no suggestions 5ms
     → result.current.navigateUp is not a function
   × useCommandCompletion > Core Hook Behavior > Navigation > should handle navigateDown with no suggestions 1ms
     → result.current.navigateDown is not a function
   × useCommandCompletion > Core Hook Behavior > Navigation > should navigate up through suggestions with wrap-around 1009ms
     → Cannot read properties of undefined (reading 'length')

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div />[39m
  [36m</body>[39m
[36m</html>[39m
   × useCommandCompletion > Core Hook Behavior > Navigation > should navigate down through suggestions with wrap-around 1001ms
     → Cannot read properties of undefined (reading 'length')

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div />[39m
  [36m</body>[39m
[36m</html>[39m
   × useCommandCompletion > Core Hook Behavior > Navigation > should handle navigation with multiple suggestions 1004ms
     → Cannot read properties of undefined (reading 'length')

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div />[39m
  [36m</body>[39m
[36m</html>[39m
   × useCommandCompletion > Core Hook Behavior > Navigation > should automatically select the first item when suggestions are available 1004ms
     → Cannot read properties of undefined (reading 'length')

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div />[39m
  [36m</body>[39m
[36m</html>[39m
   × useCommandCompletion > handleAutocomplete > should complete a partial command 1004ms
     → Cannot read properties of undefined (reading 'length')

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div />[39m
  [36m</body>[39m
[36m</html>[39m
   ✓ useCommandCompletion > handleAutocomplete > should complete a file path 3ms
   ✓ useCommandCompletion > handleAutocomplete > should complete a file path when cursor is not at the end of the line 3ms
   ✓ useCommandCompletion > prompt completion filtering > should not trigger prompt completion for line comments 1ms
   ✓ useCommandCompletion > prompt completion filtering > should not trigger prompt completion for block comments 1ms
   ✓ useCommandCompletion > prompt completion filtering > should trigger prompt completion for regular text when enabled 1ms
 ✓ src/storage/ConversationStorage.test.ts (11 tests) 84ms
 ✓ src/ui/commands/restoreCommand.test.ts (13 tests) 97ms
 ✓ src/services/FileCommandLoader.test.ts (32 tests) 159ms
 ✓ src/utils/userStartupWarnings.test.ts (5 tests) 28ms
 ✓ src/ui/components/ProviderDialog.responsive.test.tsx (8 tests) 68ms
 ✓ src/ui/hooks/useGitBranchName.test.ts (7 tests) 24ms
 ✓ src/ui/components/ProviderModelDialog.test.tsx (7 tests) 64ms
(node:9408) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 resize listeners added to [Socket]. MaxListeners is 10. Use emitter.setMaxListeners() to increase limit
(Use `node --trace-warnings ...` to show where the warning was created)
 ✓ src/ui/components/messages/ToolConfirmationMessage.test.tsx (14 tests) 84ms
 ✓ src/ui/components/shared/text-buffer.test.ts (103 tests) 107ms
 ✓ src/config/extension.test.ts (25 tests) 133ms
 ✓ src/ui/components/TodoPanel.responsive.test.tsx (7 tests) 64ms
 ✓ src/ui/utils/commandUtils.test.ts (26 tests) 72ms
 ✓ src/ui/components/ModelStatsDisplay.test.tsx (6 tests) 62ms
 ✓ src/ui/components/Footer.test.tsx (11 tests) 152ms
 ✓ src/ui/components/shared/MaxSizedBox.test.tsx (21 tests) 47ms
 ✓ src/ui/components/messages/ToolMessage.test.tsx (11 tests) 36ms
 ✓ src/ui/commands/initCommand.test.ts (3 tests) 46ms
 ✓ src/ui/components/ShellConfirmationDialog.test.tsx (4 tests) 45ms
 ✓ src/ui/components/SessionSummaryDisplay.test.tsx (1 test) 38ms
 ✓ src/ui/components/ContextUsageDisplay.semantic.test.tsx (7 tests) 16ms
 ✓ src/ui/components/ToolStatsDisplay.test.tsx (5 tests) 51ms
 ❯ src/ui/components/InputPrompt.test.tsx (63 tests | 37 failed | 1 skipped) 8180ms
   × InputPrompt > should call shellHistory.getPreviousCommand on up arrow in shell mode 187ms
     → expected "spy" to be called at least once
   × InputPrompt > should call shellHistory.getNextCommand on down arrow in shell mode 130ms
     → expected "spy" to be called at least once
   × InputPrompt > should set the buffer text when a shell history command is retrieved 132ms
     → expected "spy" to be called at least once
   × InputPrompt > should call shellHistory.addCommandToHistory on submit in shell mode 130ms
     → expected "spy" to be called with arguments: [ 'ls -l' ][90m

Number of calls: [1m0[22m
[39m
   × InputPrompt > should NOT call shell history methods when not in shell mode 230ms
     → expected "spy" to be called at least once
   ✓ InputPrompt > should call completion.navigateUp for both up arrow and Ctrl+P when suggestions are showing 165ms
   ✓ InputPrompt > should call completion.navigateDown for both down arrow and Ctrl+N when suggestions are showing 158ms
   ✓ InputPrompt > should NOT call completion navigation when suggestions are not showing 284ms
   × InputPrompt > clipboard image paste > should handle Ctrl+V when clipboard has an image 130ms
     → expected "clipboardHasImage" to be called at least once
   × InputPrompt > clipboard image paste > should not insert anything when clipboard has no image 130ms
     → expected "clipboardHasImage" to be called at least once
   × InputPrompt > clipboard image paste > should handle image save failure gracefully 131ms
     → expected "saveClipboardImage" to be called at least once
   × InputPrompt > clipboard image paste > should insert image path at cursor position with proper spacing 129ms
     → expected "spy" to be called at least once
   × InputPrompt > clipboard image paste > should handle errors during clipboard operations 139ms
     → expected "error" to be called with arguments: [ …(2) ][90m

Received: 

[1m  1st error call:

[22m[2m  [[22m
[32m-   "Error handling clipboard image:",[90m
[32m-   Any<Error>,[90m
[31m+   "An update to %s inside a test was not wrapped in act(...).[90m
[31m+[90m
[31m+ When testing, code that causes React state updates should be wrapped into act(...):[90m
[31m+[90m
[31m+ act(() => {[90m
[31m+   /* fire events that update state */[90m
[31m+ });[90m
[31m+ /* assert on the output */[90m
[31m+[90m
[31m+ This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act",[90m
[31m+   "Root",[90m
[2m  ][22m

[1m  2nd error call:

[22m[2m  [[22m
[32m-   "Error handling clipboard image:",[90m
[32m-   Any<Error>,[90m
[31m+   "An update to %s inside a test was not wrapped in act(...).[90m
[31m+[90m
[31m+ When testing, code that causes React state updates should be wrapped into act(...):[90m
[31m+[90m
[31m+ act(() => {[90m
[31m+   /* fire events that update state */[90m
[31m+ });[90m
[31m+ /* assert on the output */[90m
[31m+[90m
[31m+ This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act",[90m
[31m+   "Root",[90m
[2m  ][22m
[39m[90m

Number of calls: [1m2[22m
[39m
   ✓ InputPrompt > should complete a partial parent command 109ms
   ✓ InputPrompt > should append a sub-command when the parent command is already complete 108ms
   ✓ InputPrompt > should handle the "backspace" edge case correctly 107ms
   ✓ InputPrompt > should complete a partial argument for a command 106ms
   ✓ InputPrompt > should autocomplete on Enter when suggestions are active, without submitting 107ms
   ✓ InputPrompt > should complete a command based on its altNames 106ms
   ✓ InputPrompt > should not submit on Enter when the buffer is empty or only contains whitespace 131ms
   ✓ InputPrompt > should submit directly on Enter when isPerfectMatch is true 107ms
   ✓ InputPrompt > should submit directly on Enter when a complete leaf command is typed 106ms
   × InputPrompt > should autocomplete an @-path on Enter without submitting 106ms
     → expected "spy" to be called with arguments: [ +0 ][90m

Number of calls: [1m0[22m
[39m
   × InputPrompt > should add a newline on enter when the line ends with a backslash 131ms
     → expected "spy" to be called at least once
   × InputPrompt > should clear the buffer on Ctrl+C if it has text 131ms
     → expected "spy" to be called with arguments: [ '' ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[32m-   "",[90m
[31m+   "some text to clear",[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
   ✓ InputPrompt > should NOT clear the buffer on Ctrl+C if it is empty 132ms
   ✓ InputPrompt > cursor-based completion trigger > should trigger completion when cursor is after @ without spaces 58ms
   ✓ InputPrompt > cursor-based completion trigger > should trigger completion when cursor is after / without spaces 60ms
   × InputPrompt > cursor-based completion trigger > should NOT trigger completion when cursor is after space following @ 81ms
     → expected "useSlashCompletion" to be called with arguments: [ { …(26) }, …(6) ][90m

Number of calls: [1m0[22m
[39m
   ✓ InputPrompt > cursor-based completion trigger > should NOT trigger completion when cursor is after space following / 58ms
   × InputPrompt > cursor-based completion trigger > should NOT trigger completion when cursor is not after @ or / 81ms
     → expected "useSlashCompletion" to be called with arguments: [ Array(7) ][90m

Number of calls: [1m0[22m
[39m
   × InputPrompt > cursor-based completion trigger > should handle multiline text correctly 79ms
     → expected "useSlashCompletion" to be called with arguments: [ { …(26) }, …(6) ][90m

Number of calls: [1m0[22m
[39m
   ✓ InputPrompt > cursor-based completion trigger > should handle single line slash command correctly 57ms
   ✓ InputPrompt > cursor-based completion trigger > should handle Unicode characters (emojis) correctly in paths 58ms
   × InputPrompt > cursor-based completion trigger > should handle Unicode characters with spaces after them 80ms
     → expected "useSlashCompletion" to be called with arguments: [ { …(26) }, …(6) ][90m

Number of calls: [1m0[22m
[39m
   ✓ InputPrompt > cursor-based completion trigger > should handle escaped spaces in paths correctly 58ms
   × InputPrompt > cursor-based completion trigger > should NOT trigger completion after unescaped space following escaped space 81ms
     → expected "useSlashCompletion" to be called with arguments: [ { …(26) }, …(6) ][90m

Number of calls: [1m0[22m
[39m
   ✓ InputPrompt > cursor-based completion trigger > should handle multiple escaped spaces in paths 58ms
   ✓ InputPrompt > cursor-based completion trigger > should handle escaped spaces in slash commands 56ms
   ✓ InputPrompt > cursor-based completion trigger > should handle Unicode characters with escaped spaces 59ms
   × InputPrompt > vim mode > should not call buffer.handleInput when vim mode is enabled and vim handles the input 131ms
     → expected "spy" to be called at least once
   × InputPrompt > vim mode > should call buffer.handleInput when vim mode is enabled but vim does not handle the input 132ms
     → expected "spy" to be called at least once
   × InputPrompt > vim mode > should call handleInput when vim mode is disabled 132ms
     → expected "spy" to be called at least once
   ↓ InputPrompt > unfocused paste > should handle bracketed paste when not focused
   ✓ InputPrompt > unfocused paste > should ignore regular keypresses when not focused 145ms
   × InputPrompt > multiline paste > should handle multiline paste 'with \n newlines' 130ms
     → expected "spy" to be called 1 times, but got 0 times
   × InputPrompt > multiline paste > should handle multiline paste 'with extra slashes before \n newlines' 132ms
     → expected "spy" to be called 1 times, but got 0 times
   × InputPrompt > multiline paste > should handle multiline paste 'with \r\n newlines' 133ms
     → expected "spy" to be called 1 times, but got 0 times
   × InputPrompt > enhanced input UX - double ESC clear functionality > should clear buffer on second ESC press 181ms
     → expected "spy" to be called with arguments: [ '' ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[32m-   "",[90m
[31m+   "text to clear",[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
   × InputPrompt > enhanced input UX - double ESC clear functionality > should reset escape state on any non-ESC key 1037ms
     → expected "spy" to be called with arguments: [ true ][90m

Number of calls: [1m0[22m
[39m

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body />[39m
[36m</html>[39m
   × InputPrompt > enhanced input UX - double ESC clear functionality > should handle ESC in shell mode by disabling shell mode 133ms
     → expected "spy" to be called with arguments: [ false ][90m

Number of calls: [1m0[22m
[39m
   × InputPrompt > enhanced input UX - double ESC clear functionality > should handle ESC when completion suggestions are showing 131ms
     → expected "spy" to be called at least once
   ✓ InputPrompt > enhanced input UX - double ESC clear functionality > should not call onEscapePromptChange when not provided 142ms
   × InputPrompt > enhanced input UX - double ESC clear functionality > should not interfere with existing keyboard shortcuts 184ms
     → expected "spy" to be called at least once
   × InputPrompt > reverse search > invokes reverse search on Ctrl+R 132ms
     → expected '\n  ERROR  config?.getEnablePromptCom…' to contain '(r:)'
   ✓ InputPrompt > reverse search > resets reverse search state on Escape 130ms
   × InputPrompt > reverse search > completes the highlighted entry on Tab and exits reverse-search 82ms
     → expected '\n  ERROR  config?.getEnablePromptCom…' to contain '(r:)'
   × InputPrompt > reverse search > submits the highlighted entry on Enter and exits reverse-search 86ms
     → expected '\n  ERROR  config?.getEnablePromptCom…' to contain '(r:)'
   × InputPrompt > reverse search > text and cursor position should be restored after reverse search 81ms
     → expected '\n  ERROR  config?.getEnablePromptCom…' to contain '(r:)'
   × InputPrompt > newline insertion > should insert a newline on Alt+Enter (Option+Enter) 84ms
     → expected "spy" to be called at least once
   × InputPrompt > newline insertion > should submit on regular Enter without modifiers 83ms
     → expected "spy" to be called with arguments: [ 'echo hello' ][90m

Number of calls: [1m0[22m
[39m
   × InputPrompt > Ctrl+E keyboard shortcut > should move cursor to end of current line in multiline input 137ms
     → expected "spy" to be called with arguments: [ 'end' ][90m

Number of calls: [1m0[22m
[39m
   × InputPrompt > Ctrl+E keyboard shortcut > should move cursor to end of current line for single line input 136ms
     → expected "spy" to be called with arguments: [ 'end' ][90m

Number of calls: [1m0[22m
[39m
 ✓ src/ui/components/HistoryItemDisplay.test.tsx (7 tests) 47ms
 ✓ src/ui/contexts/KeypressContext.test.tsx (17 tests) 29ms
 ✓ src/ui/hooks/useKeypress.test.ts (18 tests) 31ms
 ✓ src/ui/components/TodoPanel.semantic.test.tsx (6 tests) 46ms
 ✓ src/ui/components/LoadingIndicator.test.tsx (11 tests) 29ms
 ✓ src/ui/components/__tests__/LayoutManager.test.tsx (5 tests) 35ms
 ✓ src/test-utils/responsive-testing.test.tsx (7 tests) 34ms
 ✓ src/ui/hooks/useAutoAcceptIndicator.test.ts (11 tests) 40ms
 ✓ src/ui/hooks/useToolScheduler.test.ts (21 tests | 4 skipped) 64ms
 ✓ src/ui/hooks/useInputHistory.test.ts (11 tests) 18ms
 ✓ src/ui/contexts/SessionContext.test.tsx (3 tests) 25ms
 ✓ src/ui/hooks/useHistoryManager.test.ts (8 tests) 21ms
 ✓ src/ui/themes/semantic-tokens.test.ts (13 tests) 15ms
 ✓ src/ui/hooks/useTodoContinuation.spec.ts (18 tests) 33ms
 ✓ src/ui/hooks/useStableCallback.test.ts (5 tests) 14ms
 ✓ src/ui/themes/theme-manager.test.ts (18 tests) 17ms
 ✓ src/ui/hooks/useReverseSearchCompletion.test.tsx (10 tests) 26ms
 ✓ src/commands/mcp/add.test.ts (5 tests) 34ms
 ✓ src/config/settings.test.ts (55 tests) 24ms
 ✓ src/ui/commands/mcpCommand.test.ts (35 tests) 22ms
 ✓ src/ui/hooks/useResponsive.test.ts (8 tests) 17ms
 ✓ src/ui/components/ContextIndicator.ui.test.tsx (6 tests) 25ms
 ✓ src/ui/hooks/useEditorSettings.test.tsx (10 tests) 23ms
 ✓ src/ui/commands/setCommand.test.ts (37 tests) 15ms
 ✓ src/ui/hooks/useKeypress.test.tsx (3 tests) 22ms
 ✓ src/services/prompt-processors/shellProcessor.test.ts (37 tests) 16ms
 ✓ src/ui/commands/helpCommand.test.ts (2 tests) 9ms
 ✓ src/ui/hooks/useFocus.test.ts (5 tests) 19ms
 ✓ src/providers/logging/git-stats.test.ts (21 tests) 15ms
 ✓ src/services/todo-continuation/todoContinuationService.spec.ts (33 tests) 5ms
 ✓ src/config/settingsSchema.test.ts (14 tests) 9ms
 ✓ src/nonInteractiveCli.test.ts (7 tests) 8ms
 ✓ src/ui/utils/computeStats.test.ts (12 tests) 3ms
 ✓ src/commands/mcp/remove.test.ts (2 tests) 27ms
 ✓ src/utils/settingsUtils.test.ts (68 tests) 8ms
 ✓ src/ui/commands/profileCommand.test.ts (13 tests) 13ms
 ✓ src/utils/handleAutoUpdate.test.ts (10 tests) 11ms
 ✓ src/ui/components/shared/vim-buffer-actions.test.ts (74 tests) 11ms
 ✓ src/auth/oauth-manager.spec.ts (21 tests) 13ms
 ✓ src/ui/commands/copyCommand.test.ts (11 tests) 7ms
 ✓ src/ui/commands/keyCommand.test.ts (6 tests) 8ms
 ✓ src/ui/utils/updateCheck.test.ts (12 tests) 9ms
 ✓ src/ui/commands/chatCommand.test.ts (17 tests) 11ms
 ✓ src/utils/gitUtils.test.ts (12 tests) 9ms
 ✓ src/ui/commands/toolsCommand.test.ts (8 tests) 6ms
 ✓ src/services/CommandService.test.ts (11 tests) 7ms
 ✓ src/providers/providerManagerInstance.test.ts (5 tests) 5ms
 ✓ src/ui/keyMatchers.test.ts (32 tests) 4ms
 ✓ src/utils/privacy/ConversationDataRedactor.test.ts (10 tests) 6ms
 ✓ src/ui/commands/compressCommand.test.ts (5 tests) 7ms
 ✓ src/ui/commands/statsCommand.test.ts (3 tests) 8ms
]2;LLxprt - root]2;LLxprt - root ✓ src/ui/commands/memoryCommand.test.ts (8 tests) 7ms
 ✓ src/ui/commands/authCommand.test.ts (21 tests) 6ms
 ✓ src/gemini.test.tsx (8 tests) 13ms
 ✓ src/ui/commands/aboutCommand.test.ts (5 tests) 6ms
 ✓ src/ui/reducers/appReducer.test.ts (36 tests) 6ms
 ✓ src/config/logging/loggingConfig.test.ts (14 tests) 3ms
 ✓ src/providers/logging/LoggingProviderWrapper.test.ts (7 tests) 6ms
 ✓ src/commands/extensions/install.test.ts (2 tests) 11ms
 ✓ src/validateNonInterActiveAuth.test.ts (9 tests) 6ms
 ✓ src/utils/installationInfo.test.ts (16 tests) 6ms
 ✓ src/utils/readStdin.test.ts (4 tests) 6ms
 ✓ src/ui/commands/extensionsCommand.test.ts (2 tests) 4ms
 ✓ src/ui/utils/secureInputHandler.test.ts (25 tests) 5ms
 ✓ src/ui/themes/color-utils.test.ts (16 tests) 4ms
 ✓ src/commands/extensions/uninstall.test.ts (1 test) 6ms
 ✓ src/services/prompt-processors/argumentProcessor.test.ts (2 tests) 2ms
 ✓ src/ui/commands/toolformatCommand.test.ts (9 tests) 13ms
 ✓ src/ui/commands/docsCommand.test.ts (3 tests) 4ms
 ✓ src/commands/mcp/list.test.ts (4 tests) 4ms
 ✓ src/ui/themes/semantic-resolver.test.ts (6 tests) 2ms
 ✓ src/ui/commands/editorCommand.test.ts (2 tests) 3ms
 ✓ src/ui/commands/directoryCommand.test.tsx (7 tests) 6ms
 ✓ src/ui/themes/theme.test.ts (11 tests) 3ms
 ✓ src/ui/commands/bugCommand.test.ts (2 tests) 4ms
 ✓ src/commands/mcp.test.ts (3 tests) 5ms
 ✓ src/providers/provider-gemini-switching.test.ts (3 tests) 8ms
 ✓ src/config/trustedFolders.test.ts (12 tests) 15ms
 ✓ src/ui/commands/settingsCommand.test.ts (2 tests) 4ms
 ✓ src/config/keyBindings.test.ts (3 tests) 3ms
 ✓ src/ui/utils/markdownUtilities.test.ts (7 tests) 2ms
 ✓ src/config/auth.test.ts (8 tests) 4ms
 ✓ src/ui/utils/responsive.test.ts (21 tests) 4ms
 ✓ src/utils/ConversationContext.test.ts (6 tests) 7ms
 ✓ src/test-utils/mockCommandContext.test.ts (3 tests) 3ms
 ✓ src/ui/commands/themeCommand.test.ts (2 tests) 3ms
 ✓ src/ui/App.e2e.test.tsx (3 tests) 2ms
 ✓ src/ui/commands/terminalSetupCommand.test.ts (5 tests) 2ms
 ✓ src/ui/utils/formatters.test.ts (14 tests) 3ms
 ✓ src/ui/utils/displayUtils.test.ts (5 tests) 2ms
 ✓ src/services/BuiltinCommandLoader.test.ts (4 tests) 3ms
 ✓ src/config/extensions/variables.test.ts (1 test) 3ms
 ✓ src/ui/commands/clearCommand.test.ts (2 tests) 11ms
 ↓ src/providers/logging/performance.test.ts (8 tests | 8 skipped)
 ✓ src/services/McpPromptLoader.test.ts (10 tests) 3ms
 ✓ src/utils/startupWarnings.test.ts (4 tests) 3ms
 ✓ src/utils/cleanup.test.ts (4 tests) 2ms
 ✓ src/ui/components/OAuthCodeDialog.test.tsx (5 tests) 2ms

⎯⎯⎯⎯⎯⎯ Failed Tests 77 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  src/ui/App.test.tsx > App UI > handleAutoUpdate > should show a success message when update succeeds
AssertionError: expected '\n The first rule of Fight Club is: y…' to contain 'Update successful! The new version wi…'

[32m- Expected[39m
[31m+ Received[39m

[32m- Update successful! The new version will be used on your next run.[39m
[31m+[39m
[31m+  The first rule of Fight Club is: you do not talk about Fight Club. (esc to cancel, 0s)[39m
[31m+[39m
[31m+[39m
[31m+                                                                        Context: 0.0k/1049k[39m
[31m+ /test/dir  [no sandbox (see /docs)]                                             gemini-pro[39m

 ❯ src/ui/App.test.tsx:451:27
    449|       // Wait for the success message to appear
    450|       await Promise.resolve();
    451|       expect(lastFrame()).toContain(
       |                           ^
    452|         'Update successful! The new version will be used on your next …
    453|       );

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/77]⎯

 FAIL  src/ui/App.test.tsx > App UI > handleAutoUpdate > should show an error message when update fails
AssertionError: expected '\n The first rule of Fight Club is: y…' to contain 'Automatic update failed. Please try u…'

[32m- Expected[39m
[31m+ Received[39m

[32m- Automatic update failed. Please try updating manually[39m
[31m+[39m
[31m+  The first rule of Fight Club is: you do not talk about Fight Club. (esc to cancel, 0s)[39m
[31m+[39m
[31m+[39m
[31m+                                                                        Context: 0.0k/1049k[39m
[31m+ /test/dir  [no sandbox (see /docs)]                                             gemini-pro[39m

 ❯ src/ui/App.test.tsx:481:27
    479|       // Wait for the error message to appear
    480|       await Promise.resolve();
    481|       expect(lastFrame()).toContain(
       |                           ^
    482|         'Automatic update failed. Please try updating manually',
    483|       );

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/77]⎯

 FAIL  src/ui/App.test.tsx > App UI > handleAutoUpdate > should show an error message when spawn fails
AssertionError: expected '\n The first rule of Fight Club is: y…' to contain 'Automatic update failed. Please try u…'

[32m- Expected[39m
[31m+ Received[39m

[32m- Automatic update failed. Please try updating manually[39m
[31m+[39m
[31m+  The first rule of Fight Club is: you do not talk about Fight Club. (esc to cancel, 0s)[39m
[31m+[39m
[31m+[39m
[31m+                                                                        Context: 0.0k/1049k[39m
[31m+ /test/dir  [no sandbox (see /docs)]                                             gemini-pro[39m

 ❯ src/ui/App.test.tsx:513:27
    511|       // Wait for the error message to appear
    512|       await Promise.resolve();
    513|       expect(lastFrame()).toContain(
       |                           ^
    514|         'Automatic update failed. Please try updating manually',
    515|       );

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/77]⎯

 FAIL  src/ui/App.test.tsx > App UI > should display active file and other context
AssertionError: expected '\n The first rule of Fight Club is: y…' to contain 'Using: 1 open file (ctrl+g to view) |…'

[32m- Expected[39m
[31m+ Received[39m

[32m- Using: 1 open file (ctrl+g to view) | 1 GEMINI.md file[39m
[31m+[39m
[31m+  The first rule of Fight Club is: you do not talk about Fight Club. (esc to cancel, 0s)[39m
[31m+[39m
[31m+ Using: 1 open file (ctrl+g to view)[39m
[31m+                                                                        Context: 0.0k/1049k[39m
[31m+ /test/dir  [no sandbox (see /docs)]                                             gemini-pro[39m

 ❯ src/ui/App.test.tsx:653:25
    651|     currentUnmount = unmount;
    652|     await Promise.resolve();
    653|     expect(lastFrame()).toContain(
       |                         ^
    654|       'Using: 1 open file (ctrl+g to view) | 1 GEMINI.md file',
    655|     );

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/77]⎯

 FAIL  src/ui/App.test.tsx > App UI > should display default "GEMINI.md" in footer when contextFileName is not set and count is 1
AssertionError: expected '\n The first rule of Fight Club is: y…' to contain 'Using: 1 GEMINI.md file'

[32m- Expected[39m
[31m+ Received[39m

[32m- Using: 1 GEMINI.md file[39m
[31m+[39m
[31m+  The first rule of Fight Club is: you do not talk about Fight Club. (esc to cancel, 0s)[39m
[31m+[39m
[31m+[39m
[31m+                                                                        Context: 0.0k/1049k[39m
[31m+ /test/dir  [no sandbox (see /docs)]                                             gemini-pro[39m

 ❯ src/ui/App.test.tsx:674:25
    672|     currentUnmount = unmount;
    673|     await Promise.resolve(); // Wait for any async updates
    674|     expect(lastFrame()).toContain('Using: 1 GEMINI.md file');
       |                         ^
    675|   });
    676| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/77]⎯

 FAIL  src/ui/App.test.tsx > App UI > should display default "GEMINI.md" with plural when contextFileName is not set and count is > 1
AssertionError: expected '\n The first rule of Fight Club is: y…' to contain 'Using: 2 GEMINI.md files'

[32m- Expected[39m
[31m+ Received[39m

[32m- Using: 2 GEMINI.md files[39m
[31m+[39m
[31m+  The first rule of Fight Club is: you do not talk about Fight Club. (esc to cancel, 0s)[39m
[31m+[39m
[31m+[39m
[31m+                                                                        Context: 0.0k/1049k[39m
[31m+ /test/dir  [no sandbox (see /docs)]                                             gemini-pro[39m

 ❯ src/ui/App.test.tsx:695:25
    693|     currentUnmount = unmount;
    694|     await Promise.resolve();
    695|     expect(lastFrame()).toContain('Using: 2 GEMINI.md files');
       |                         ^
    696|   });
    697| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/77]⎯

 FAIL  src/ui/App.test.tsx > App UI > should display custom contextFileName in footer when set and count is 1
AssertionError: expected '\n The first rule of Fight Club is: y…' to contain 'Using: 1 AGENTS.md file'

[32m- Expected[39m
[31m+ Received[39m

[32m- Using: 1 AGENTS.md file[39m
[31m+[39m
[31m+  The first rule of Fight Club is: you do not talk about Fight Club. (esc to cancel, 0s)[39m
[31m+[39m
[31m+[39m
[31m+                                                                        Context: 0.0k/1049k[39m
[31m+ /test/dir  [no sandbox (see /docs)]                                             gemini-pro[39m

 ❯ src/ui/App.test.tsx:716:25
    714|     currentUnmount = unmount;
    715|     await Promise.resolve();
    716|     expect(lastFrame()).toContain('Using: 1 AGENTS.md file');
       |                         ^
    717|   });
    718| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/77]⎯

 FAIL  src/ui/App.test.tsx > App UI > should display a generic message when multiple context files with different names are provided
AssertionError: expected '\n The first rule of Fight Club is: y…' to contain 'Using: 2 context files'

[32m- Expected[39m
[31m+ Received[39m

[32m- Using: 2 context files[39m
[31m+[39m
[31m+  The first rule of Fight Club is: you do not talk about Fight Club. (esc to cancel, 0s)[39m
[31m+[39m
[31m+[39m
[31m+                                                                        Context: 0.0k/1049k[39m
[31m+ /test/dir  [no sandbox (see /docs)]                                             gemini-pro[39m

 ❯ src/ui/App.test.tsx:743:25
    741|     currentUnmount = unmount;
    742|     await Promise.resolve();
    743|     expect(lastFrame()).toContain('Using: 2 context files');
       |                         ^
    744|   });
    745| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/77]⎯

 FAIL  src/ui/App.test.tsx > App UI > should display custom contextFileName with plural when set and count is > 1
AssertionError: expected '\n The first rule of Fight Club is: y…' to contain 'Using: 3 MY_NOTES.TXT files'

[32m- Expected[39m
[31m+ Received[39m

[32m- Using: 3 MY_NOTES.TXT files[39m
[31m+[39m
[31m+  The first rule of Fight Club is: you do not talk about Fight Club. (esc to cancel, 0s)[39m
[31m+[39m
[31m+[39m
[31m+                                                                        Context: 0.0k/1049k[39m
[31m+ /test/dir  [no sandbox (see /docs)]                                             gemini-pro[39m

 ❯ src/ui/App.test.tsx:768:25
    766|     currentUnmount = unmount;
    767|     await Promise.resolve();
    768|     expect(lastFrame()).toContain('Using: 3 MY_NOTES.TXT files');
       |                         ^
    769|   });
    770| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/77]⎯

 FAIL  src/ui/App.test.tsx > App UI > when no theme is set > should display theme dialog if NO_COLOR is not set
AssertionError: expected '╭────────────────────────────────────…' to contain 'I\'m Feeling Lucky (esc to cancel'

[32m- Expected[39m
[31m+ Received[39m

[32m- [7mI'm Feeling Lucky (esc t[27mo [7mc[27man[7mcel[27m[39m
[31m+ ╭────────────────────────────────────────────────────────────────────────────────────────╮[39m
[31m+ │ > Select Theme                           Preview                                       │[39m
[31m+ │ ▲                                        ┌───────────────────────────────────────────┐ │[39m
[31m+ │ [ ] 1. ANSI Dark                         │ ... first 2 lines hidden ...              │ │[39m
[31m+ │ [ ] 2. Atom One Dark                     │ 3     a, b = 0, 1                         │ │[39m
[31m+ │ [ ] 3. Ayu Dark                          │ 4     for _ in range(n):                  │ │[39m
[31m+ │ [ ] 4. Default Dark                      │ 5         a, b = b, a + b                 │ │[39m
[31m+ │ [ ] 5. Dracula Dark                      │ 6     return a                            │ │[39m
[31m+ │ [ ] 6. GitHub Dark                       │                                           │ │[39m
[31m+ │ [*] 7. Green Screen Dark                 │ 1 - print("Hello, " + name)               │ │[39m
[31m+ │ [ ] 8. Shades Of Purple Dark             │ 1 + print(f"Hello, {name}!")              │ │[39m
[31m+ │ ▼                                        └───────────────────────────────────────────┘ │[39m
[31m+ │                                                                                        │[39m
[31m+ │ (Use Enter to select)                                                                  │[39m
[31m+ ╰────────────────────────────────────────────────────────────────────────────────────────╯[39m
[31m+                                                                        Context: 0.0k/1049k[39m
[31m+ [7m/test/dir  [n[27mo [7ms[27man[7mdbox (see /docs)]                                             gemini-pro[27m[39m

 ❯ src/ui/App.test.tsx:1000:27
    998|       currentUnmount = unmount;
    999| 
    1000|       expect(lastFrame()).toContain("I'm Feeling Lucky (esc to cancel"…
       |                           ^
    1001|     });
    1002| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/77]⎯

 FAIL  src/ui/App.test.tsx > App UI > when no theme is set > should display a message if NO_COLOR is set
AssertionError: expected '\nINFO: Theme configuration unavailab…' to contain 'I\'m Feeling Lucky (esc to cancel'

[32m- Expected[39m
[31m+ Received[39m

[32m- I'm Feeling Lucky (esc to cancel[39m
[31m+[39m
[31m+ INFO: Theme configuration unavailable due to NO_COLOR env variable.[39m
[31m+[39m
[31m+  The first rule of Fight Club is: you do not talk about Fight Club. (esc to cancel, 0s)[39m
[31m+[39m
[31m+[39m
[31m+                                                                        Context: 0.0k/1049k[39m
[31m+ /test/dir  [no sandbox (see /docs)]                                             gemini-pro[39m

 ❯ src/ui/App.test.tsx:1015:27
    1013|       currentUnmount = unmount;
    1014| 
    1015|       expect(lastFrame()).toContain("I'm Feeling Lucky (esc to cancel"…
       |                           ^
    1016|       expect(lastFrame()).not.toContain('Select Theme');
    1017|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/77]⎯

 FAIL  src/ui/App.test.tsx > App UI > should render the initial UI correctly
Error: Snapshot `App UI > should render the initial UI correctly 1` mismatched

[32m- Expected[39m
[31m+ Received[39m

[32m- "[7m[?1004l[27m"[39m
[31m+ "[39m
[31m+  The first rule of Fight Club is: you do not talk about Fight Club. (esc to cancel, 0s)[39m
[31m+[39m
[31m+[39m
[31m+                                                                        Context: 0.0k/1049k[39m
[31m+ [7m/test/dir  [no sandbox (see /docs)]                                             gemini-pro[27m"[39m

 ❯ src/ui/App.test.tsx:1029:25
    1027|     );
    1028|     currentUnmount = unmount;
    1029|     expect(lastFrame()).toMatchSnapshot();
       |                         ^
    1030|   });
    1031| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/77]⎯

 FAIL  src/ui/App.test.tsx > App UI > should render correctly with the prompt input box
Error: Snapshot `App UI > should render correctly with the prompt input box 1` mismatched

[32m- Expected[39m
[31m+ Received[39m

[32m- "[7m[?1004l[27m"[39m
[31m+ "[39m
[31m+[39m
[31m+ ╭────────────────────────────────────────────────────────────────────────────────────────╮[39m
[31m+ │ >   Type your message or @path/to/file                                                 │[39m
[31m+ ╰────────────────────────────────────────────────────────────────────────────────────────╯[39m
[31m+                                                                        Context: 0.0k/1049k[39m
[31m+ [7m/test/dir  [no sandbox (see /docs)]                                             gemini-pro[27m"[39m

 ❯ src/ui/App.test.tsx:1049:25
    1047|     );
    1048|     currentUnmount = unmount;
    1049|     expect(lastFrame()).toMatchSnapshot();
       |                         ^
    1050|   });
    1051| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/77]⎯

 FAIL  src/ui/App.test.tsx > App UI > when in a narrow terminal > should render with a column layout
Error: Snapshot `App UI > when in a narrow terminal > should render with a column layout 1` mismatched

[32m- Expected[39m
[31m+ Received[39m

[32m- "[7m[?1004l[27m"[39m
[31m+ "[39m
[31m+[39m
[31m+ ╭────────────────────────────────────────────────────────────────────────────────────────╮[39m
[31m+ │ >   Type your message or @path/to/file                                                 │[39m
[31m+ ╰────────────────────────────────────────────────────────────────────────────────────────╯[39m
[31m+                                                                            Ctx: 0.0k/1049k[39m
[31m+ [7m/test/dir                                               | ✖ 5 errors (ctrl+o for details)[27m"[39m

 ❯ src/ui/App.test.tsx:1189:27
    1187|       );
    1188|       currentUnmount = unmount;
    1189|       expect(lastFrame()).toMatchSnapshot();
       |                           ^
    1190|     });
    1191|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[14/77]⎯

 FAIL  src/ui/App.test.tsx > App UI > Ctrl+C behavior > should call cancel but only clear the prompt when a tool is executing
AssertionError: expected ' ╭───────────────────────────────────…' to contain 'some text'

[32m- Expected[39m
[31m+ Received[39m

[32m- some text[39m
[31m+  ╭────────────────────────────────────────────────────────────────────────────────────────╮[39m
[31m+  │ ⊶  test_tool  ←                                                                        │[39m
[31m+  ╰────────────────────────────────────────────────────────────────────────────────────────╯[39m
[31m+[39m
[31m+ ⠙ Excuse me, I believe you have my stapler. (esc to cancel, 0s)[39m
[31m+[39m
[31m+[39m
[31m+                                                                        Context: 0.0k/1049k[39m
[31m+ /test/dir  [no sandbox (see /docs)]          gemini-pro | ✖ 5 errors (ctrl+o for details)[39m

 ❯ src/ui/App.test.tsx:1653:27
    1651| 
    1652|       // Verify the text is in the prompt.
    1653|       expect(lastFrame()).toContain('some text');
       |                           ^
    1654| 
    1655|       // Simulate Ctrl+C.

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[15/77]⎯

 FAIL  src/ui/hooks/shellCommandProcessor.test.ts > useShellCommandProcessor > should not wrap the command on Windows
AssertionError: expected "spy" to be called with arguments: [ 'dir', '/test/dir', …(3) ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[32m-   "dir",[90m
[31m+   "{ dir; }; __code=$?; pwd > \"/var/folders/9v/l7wpbxmx1lz338tpwz3lh0nh0000gn/T/shell_pwd_abcdef.tmp\"; exit $__code",[90m
[2m    "/test/dir",[22m
[32m-   Any<Function>,[90m
[32m-   Any<Object>,[90m
[31m+   [Function anonymous],[90m
[31m+   AbortSignal {},[90m
[2m    false,[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ src/ui/hooks/shellCommandProcessor.test.ts:328:39
    326|     });
    327| 
    328|     expect(mockShellExecutionService).toHaveBeenCalledWith(
       |                                       ^
    329|       'dir',
    330|       '/test/dir',

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[16/77]⎯

 FAIL  src/ui/hooks/useCommandCompletion.test.ts > useCommandCompletion > Core Hook Behavior > Navigation > should handle navigateUp with no suggestions
TypeError: result.current.navigateUp is not a function
 ❯ src/ui/hooks/useCommandCompletion.test.ts:281:26
    279| 
    280|         act(() => {
    281|           result.current.navigateUp();
       |                          ^
    282|         });
    283| 
 ❯ node_modules/@testing-library/react/dist/act-compat.js:48:24
 ❯ process.env.NODE_ENV.exports.act ../../node_modules/react/cjs/react.development.js:789:22
 ❯ Proxy.<anonymous> node_modules/@testing-library/react/dist/act-compat.js:47:25
 ❯ src/ui/hooks/useCommandCompletion.test.ts:280:9

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[17/77]⎯

 FAIL  src/ui/hooks/useCommandCompletion.test.ts > useCommandCompletion > Core Hook Behavior > Navigation > should handle navigateDown with no suggestions
TypeError: result.current.navigateDown is not a function
 ❯ src/ui/hooks/useCommandCompletion.test.ts:302:26
    300| 
    301|         act(() => {
    302|           result.current.navigateDown();
       |                          ^
    303|         });
    304| 
 ❯ node_modules/@testing-library/react/dist/act-compat.js:48:24
 ❯ process.env.NODE_ENV.exports.act ../../node_modules/react/cjs/react.development.js:789:22
 ❯ Proxy.<anonymous> node_modules/@testing-library/react/dist/act-compat.js:47:25
 ❯ src/ui/hooks/useCommandCompletion.test.ts:301:9

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[18/77]⎯

 FAIL  src/ui/hooks/useCommandCompletion.test.ts > useCommandCompletion > Core Hook Behavior > Navigation > should navigate up through suggestions with wrap-around
TypeError: Cannot read properties of undefined (reading 'length')

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div />[39m
  [36m</body>[39m
[36m</html>[39m
 ❯ src/ui/hooks/useCommandCompletion.test.ts:322:45
    320| 
    321|         await waitFor(() => {
    322|           expect(result.current.suggestions.length).toBe(5);
       |                                             ^
    323|         });
    324| 
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[19/77]⎯

 FAIL  src/ui/hooks/useCommandCompletion.test.ts > useCommandCompletion > Core Hook Behavior > Navigation > should navigate down through suggestions with wrap-around
TypeError: Cannot read properties of undefined (reading 'length')

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div />[39m
  [36m</body>[39m
[36m</html>[39m
 ❯ src/ui/hooks/useCommandCompletion.test.ts:348:45
    346| 
    347|         await waitFor(() => {
    348|           expect(result.current.suggestions.length).toBe(5);
       |                                             ^
    349|         });
    350| 
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[20/77]⎯

 FAIL  src/ui/hooks/useCommandCompletion.test.ts > useCommandCompletion > Core Hook Behavior > Navigation > should handle navigation with multiple suggestions
TypeError: Cannot read properties of undefined (reading 'length')

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div />[39m
  [36m</body>[39m
[36m</html>[39m
 ❯ src/ui/hooks/useCommandCompletion.test.ts:377:45
    375| 
    376|         await waitFor(() => {
    377|           expect(result.current.suggestions.length).toBe(5);
       |                                             ^
    378|         });
    379| 
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[21/77]⎯

 FAIL  src/ui/hooks/useCommandCompletion.test.ts > useCommandCompletion > Core Hook Behavior > Navigation > should automatically select the first item when suggestions are available
TypeError: Cannot read properties of undefined (reading 'length')

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div />[39m
  [36m</body>[39m
[36m</html>[39m
 ❯ src/ui/hooks/useCommandCompletion.test.ts:414:45
    412| 
    413|         await waitFor(() => {
    414|           expect(result.current.suggestions.length).toBe(
       |                                             ^
    415|             mockSuggestions.length,
    416|           );
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[22/77]⎯

 FAIL  src/ui/hooks/useCommandCompletion.test.ts > useCommandCompletion > handleAutocomplete > should complete a partial command
TypeError: Cannot read properties of undefined (reading 'length')

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div />[39m
  [36m</body>[39m
[36m</html>[39m
 ❯ src/ui/hooks/useCommandCompletion.test.ts:445:43
    443| 
    444|       await waitFor(() => {
    445|         expect(result.current.suggestions.length).toBe(1);
       |                                           ^
    446|       });
    447| 
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[23/77]⎯

 FAIL  src/ui/hooks/useFolderTrust.test.ts > useFolderTrust > should handle TRUST_FOLDER choice
AssertionError: expected "spy" to be called with arguments: [ true ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/ui/hooks/useFolderTrust.test.ts:109:43
    107|     );
    108|     expect(result.current.isFolderTrustDialogOpen).toBe(false);
    109|     expect(mockConfig.setIsTrustedFolder).toHaveBeenCalledWith(true);
       |                                           ^
    110|   });
    111| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[24/77]⎯

 FAIL  src/ui/hooks/useFolderTrust.test.ts > useFolderTrust > should handle TRUST_PARENT choice
AssertionError: expected "spy" to be called with arguments: [ true ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/ui/hooks/useFolderTrust.test.ts:130:43
    128|     );
    129|     expect(result.current.isFolderTrustDialogOpen).toBe(false);
    130|     expect(mockConfig.setIsTrustedFolder).toHaveBeenCalledWith(true);
       |                                           ^
    131|   });
    132| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[25/77]⎯

 FAIL  src/ui/hooks/useFolderTrust.test.ts > useFolderTrust > should handle DO_NOT_TRUST choice and trigger restart
AssertionError: expected "spy" to be called with arguments: [ false ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/ui/hooks/useFolderTrust.test.ts:150:43
    148|       TrustLevel.DO_NOT_TRUST,
    149|     );
    150|     expect(mockConfig.setIsTrustedFolder).toHaveBeenCalledWith(false);
       |                                           ^
    151|     expect(result.current.isRestarting).toBe(true);
    152|     expect(result.current.isFolderTrustDialogOpen).toBe(true);

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[26/77]⎯

 FAIL  src/ui/components/InputPrompt.paste.test.tsx > InputPrompt paste functionality > should handle single-line paste without special indicator
AssertionError: expected "spy" to be called with arguments: [ ObjectContaining{…} ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/ui/components/InputPrompt.paste.test.tsx:375:36
    373| 
    374|     // The buffer should have been updated with the paste content thro…
    375|     expect(mockBuffer.handleInput).toHaveBeenCalledWith(
       |                                    ^
    376|       expect.objectContaining({
    377|         paste: true,

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[27/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > should call shellHistory.getPreviousCommand on up arrow in shell mode
AssertionError: expected "spy" to be called at least once
 ❯ src/ui/components/InputPrompt.test.tsx:212:49
    210|     await wait();
    211| 
    212|     expect(mockShellHistory.getPreviousCommand).toHaveBeenCalled();
       |                                                 ^
    213|     unmount();
    214|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[28/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > should call shellHistory.getNextCommand on down arrow in shell mode
AssertionError: expected "spy" to be called at least once
 ❯ src/ui/components/InputPrompt.test.tsx:224:45
    222|     await wait();
    223| 
    224|     expect(mockShellHistory.getNextCommand).toHaveBeenCalled();
       |                                             ^
    225|     unmount();
    226|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[29/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > should set the buffer text when a shell history command is retrieved
AssertionError: expected "spy" to be called at least once
 ❯ src/ui/components/InputPrompt.test.tsx:239:49
    237|     await wait();
    238| 
    239|     expect(mockShellHistory.getPreviousCommand).toHaveBeenCalled();
       |                                                 ^
    240|     expect(props.buffer.setText).toHaveBeenCalledWith('previous comman…
    241|     unmount();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[30/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > should call shellHistory.addCommandToHistory on submit in shell mode
AssertionError: expected "spy" to be called with arguments: [ 'ls -l' ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/ui/components/InputPrompt.test.tsx:253:50
    251|     await wait();
    252| 
    253|     expect(mockShellHistory.addCommandToHistory).toHaveBeenCalledWith(…
       |                                                  ^
    254|     expect(props.onSubmit).toHaveBeenCalledWith('ls -l');
    255|     unmount();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[31/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > should NOT call shell history methods when not in shell mode
AssertionError: expected "spy" to be called at least once
 ❯ src/ui/components/InputPrompt.test.tsx:274:41
    272|     expect(mockShellHistory.addCommandToHistory).not.toHaveBeenCalled(…
    273| 
    274|     expect(mockInputHistory.navigateUp).toHaveBeenCalled();
       |                                         ^
    275|     expect(mockInputHistory.navigateDown).toHaveBeenCalled();
    276|     expect(props.onSubmit).toHaveBeenCalledWith('some text');

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[32/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > clipboard image paste > should handle Ctrl+V when clipboard has an image
AssertionError: expected "clipboardHasImage" to be called at least once
 ❯ src/ui/components/InputPrompt.test.tsx:381:48
    379|       await wait();
    380| 
    381|       expect(clipboardUtils.clipboardHasImage).toHaveBeenCalled();
       |                                                ^
    382|       expect(clipboardUtils.saveClipboardImage).toHaveBeenCalledWith(
    383|         props.config.getTargetDir(),

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[33/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > clipboard image paste > should not insert anything when clipboard has no image
AssertionError: expected "clipboardHasImage" to be called at least once
 ❯ src/ui/components/InputPrompt.test.tsx:403:48
    401|       await wait();
    402| 
    403|       expect(clipboardUtils.clipboardHasImage).toHaveBeenCalled();
       |                                                ^
    404|       expect(clipboardUtils.saveClipboardImage).not.toHaveBeenCalled();
    405|       expect(mockBuffer.setText).not.toHaveBeenCalled();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[34/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > clipboard image paste > should handle image save failure gracefully
AssertionError: expected "saveClipboardImage" to be called at least once
 ❯ src/ui/components/InputPrompt.test.tsx:421:49
    419|       await wait();
    420| 
    421|       expect(clipboardUtils.saveClipboardImage).toHaveBeenCalled();
       |                                                 ^
    422|       expect(mockBuffer.setText).not.toHaveBeenCalled();
    423|       unmount();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[35/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > clipboard image paste > should insert image path at cursor position with proper spacing
AssertionError: expected "spy" to be called at least once
 ❯ src/ui/components/InputPrompt.test.tsx:450:47
    448| 
    449|       // Should insert at cursor position with spaces
    450|       expect(mockBuffer.replaceRangeByOffset).toHaveBeenCalled();
       |                                               ^
    451| 
    452|       // Get the actual call to see what path was used

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[36/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > clipboard image paste > should handle errors during clipboard operations
AssertionError: expected "error" to be called with arguments: [ …(2) ][90m

Received: 

[1m  1st error call:

[22m[2m  [[22m
[32m-   "Error handling clipboard image:",[90m
[32m-   Any<Error>,[90m
[31m+   "An update to %s inside a test was not wrapped in act(...).[90m
[31m+[90m
[31m+ When testing, code that causes React state updates should be wrapped into act(...):[90m
[31m+[90m
[31m+ act(() => {[90m
[31m+   /* fire events that update state */[90m
[31m+ });[90m
[31m+ /* assert on the output */[90m
[31m+[90m
[31m+ This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act",[90m
[31m+   "Root",[90m
[2m  ][22m

[1m  2nd error call:

[22m[2m  [[22m
[32m-   "Error handling clipboard image:",[90m
[32m-   Any<Error>,[90m
[31m+   "An update to %s inside a test was not wrapped in act(...).[90m
[31m+[90m
[31m+ When testing, code that causes React state updates should be wrapped into act(...):[90m
[31m+[90m
[31m+ act(() => {[90m
[31m+   /* fire events that update state */[90m
[31m+ });[90m
[31m+ /* assert on the output */[90m
[31m+[90m
[31m+ This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act",[90m
[31m+   "Root",[90m
[2m  ][22m
[39m[90m

Number of calls: [1m2[22m
[39m
 ❯ src/ui/components/InputPrompt.test.tsx:479:31
    477|       await wait();
    478| 
    479|       expect(consoleErrorSpy).toHaveBeenCalledWith(
       |                               ^
    480|         'Error handling clipboard image:',
    481|         expect.any(Error),

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[37/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > should autocomplete an @-path on Enter without submitting
AssertionError: expected "spy" to be called with arguments: [ +0 ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/ui/components/InputPrompt.test.tsx:692:52
    690|     await wait();
    691| 
    692|     expect(mockSlashCompletion.handleAutocomplete).toHaveBeenCalledWit…
       |                                                    ^
    693|     expect(props.onSubmit).not.toHaveBeenCalled();
    694|     unmount();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[38/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > should add a newline on enter when the line ends with a backslash
AssertionError: expected "spy" to be called at least once
 ❯ src/ui/components/InputPrompt.test.tsx:710:36
    708| 
    709|     expect(props.onSubmit).not.toHaveBeenCalled();
    710|     expect(props.buffer.backspace).toHaveBeenCalled();
       |                                    ^
    711|     expect(props.buffer.newline).toHaveBeenCalled();
    712|     unmount();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[39/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > should clear the buffer on Ctrl+C if it has text
AssertionError: expected "spy" to be called with arguments: [ '' ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[32m-   "",[90m
[31m+   "some text to clear",[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ src/ui/components/InputPrompt.test.tsx:723:34
    721|     await wait();
    722| 
    723|     expect(props.buffer.setText).toHaveBeenCalledWith('');
       |                                  ^
    724|     expect(mockSlashCompletion.resetCompletionState).toHaveBeenCalled(…
    725|     expect(props.onSubmit).not.toHaveBeenCalled();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[40/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > cursor-based completion trigger > should NOT trigger completion when cursor is after space following @
AssertionError: expected "useSlashCompletion" to be called with arguments: [ { …(26) }, …(6) ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/ui/components/InputPrompt.test.tsx:812:40
    810|       await wait();
    811| 
    812|       expect(mockedUseSlashCompletion).toHaveBeenCalledWith(
       |                                        ^
    813|         mockBuffer,
    814|         ['/test/project/src'],

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[41/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > cursor-based completion trigger > should NOT trigger completion when cursor is not after @ or /
AssertionError: expected "useSlashCompletion" to be called with arguments: [ Array(7) ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/ui/components/InputPrompt.test.tsx:866:40
    864|       await wait();
    865| 
    866|       expect(mockedUseSlashCompletion).toHaveBeenCalledWith(
       |                                        ^
    867|         mockBuffer,
    868|         ['/test/project/src'],

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[42/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > cursor-based completion trigger > should handle multiline text correctly
AssertionError: expected "useSlashCompletion" to be called with arguments: [ { …(26) }, …(6) ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/ui/components/InputPrompt.test.tsx:894:40
    892| 
    893|       // Verify useCompletion was called with the buffer
    894|       expect(mockedUseSlashCompletion).toHaveBeenCalledWith(
       |                                        ^
    895|         mockBuffer,
    896|         ['/test/project/src'],

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[43/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > cursor-based completion trigger > should handle Unicode characters with spaces after them
AssertionError: expected "useSlashCompletion" to be called with arguments: [ { …(26) }, …(6) ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/ui/components/InputPrompt.test.tsx:977:40
    975|       await wait();
    976| 
    977|       expect(mockedUseSlashCompletion).toHaveBeenCalledWith(
       |                                        ^
    978|         mockBuffer,
    979|         ['/test/project/src'],

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[44/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > cursor-based completion trigger > should NOT trigger completion after unescaped space following escaped space
AssertionError: expected "useSlashCompletion" to be called with arguments: [ { …(26) }, …(6) ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/ui/components/InputPrompt.test.tsx:1033:40
    1031|       await wait();
    1032| 
    1033|       expect(mockedUseSlashCompletion).toHaveBeenCalledWith(
       |                                        ^
    1034|         mockBuffer,
    1035|         ['/test/project/src'],

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[45/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > vim mode > should not call buffer.handleInput when vim mode is enabled and vim handles the input
AssertionError: expected "spy" to be called at least once
 ❯ src/ui/components/InputPrompt.test.tsx:1147:36
    1145|       await wait();
    1146| 
    1147|       expect(props.vimHandleInput).toHaveBeenCalled();
       |                                    ^
    1148|       expect(mockBuffer.handleInput).not.toHaveBeenCalled();
    1149|       unmount();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[46/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > vim mode > should call buffer.handleInput when vim mode is enabled but vim does not handle the input
AssertionError: expected "spy" to be called at least once
 ❯ src/ui/components/InputPrompt.test.tsx:1163:36
    1161|       await wait();
    1162| 
    1163|       expect(props.vimHandleInput).toHaveBeenCalled();
       |                                    ^
    1164|       expect(mockBuffer.handleInput).toHaveBeenCalled();
    1165|       unmount();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[47/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > vim mode > should call handleInput when vim mode is disabled
AssertionError: expected "spy" to be called at least once
 ❯ src/ui/components/InputPrompt.test.tsx:1179:36
    1177|       await wait();
    1178| 
    1179|       expect(props.vimHandleInput).toHaveBeenCalled();
       |                                    ^
    1180|       expect(mockBuffer.handleInput).toHaveBeenCalled();
    1181|       unmount();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[48/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > multiline paste > should handle multiline paste 'with \n newlines'
 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > multiline paste > should handle multiline paste 'with extra slashes before \n newlines'
 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > multiline paste > should handle multiline paste 'with \r\n newlines'
AssertionError: expected "spy" to be called 1 times, but got 0 times
 ❯ src/ui/components/InputPrompt.test.tsx:1250:40
    1248| 
    1249|       // Verify that the buffer's handleInput was called once with the…
    1250|       expect(props.buffer.handleInput).toHaveBeenCalledTimes(1);
       |                                        ^
    1251|       expect(props.buffer.handleInput).toHaveBeenCalledWith(
    1252|         expect.objectContaining({

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[49/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > enhanced input UX - double ESC clear functionality > should clear buffer on second ESC press
AssertionError: expected "spy" to be called with arguments: [ '' ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[32m-   "",[90m
[31m+   "text to clear",[90m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ src/ui/components/InputPrompt.test.tsx:1279:36
    1277|       await wait();
    1278| 
    1279|       expect(props.buffer.setText).toHaveBeenCalledWith('');
       |                                    ^
    1280|       expect(mockSlashCompletion.resetCompletionState).toHaveBeenCalle…
    1281|       unmount();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[50/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > enhanced input UX - double ESC clear functionality > should reset escape state on any non-ESC key
AssertionError: expected "spy" to be called with arguments: [ true ][90m

Number of calls: [1m0[22m
[39m

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body />[39m
[36m</html>[39m
 ❯ src/ui/components/InputPrompt.test.tsx:1296:38
    1294| 
    1295|       await waitFor(() => {
    1296|         expect(onEscapePromptChange).toHaveBeenCalledWith(true);
       |                                      ^
    1297|       });
    1298| 
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[51/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > enhanced input UX - double ESC clear functionality > should handle ESC in shell mode by disabling shell mode
AssertionError: expected "spy" to be called with arguments: [ false ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/ui/components/InputPrompt.test.tsx:1318:40
    1316|       await wait();
    1317| 
    1318|       expect(props.setShellModeActive).toHaveBeenCalledWith(false);
       |                                        ^
    1319|       unmount();
    1320|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[52/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > enhanced input UX - double ESC clear functionality > should handle ESC when completion suggestions are showing
AssertionError: expected "spy" to be called at least once
 ❯ src/ui/components/InputPrompt.test.tsx:1337:56
    1335|       await wait();
    1336| 
    1337|       expect(mockSlashCompletion.resetCompletionState).toHaveBeenCalle…
       |                                                        ^
    1338|       unmount();
    1339|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[53/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > enhanced input UX - double ESC clear functionality > should not interfere with existing keyboard shortcuts
AssertionError: expected "spy" to be called at least once
 ❯ src/ui/components/InputPrompt.test.tsx:1365:35
    1363|       await wait();
    1364| 
    1365|       expect(props.onClearScreen).toHaveBeenCalled();
       |                                   ^
    1366| 
    1367|       stdin.write('\x01');

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[54/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > reverse search > invokes reverse search on Ctrl+R
AssertionError: expected '\n  ERROR  config?.getEnablePromptCom…' to contain '(r:)'

[32m- Expected[39m
[31m+ Received[39m

[32m- (r:)[39m
[31m+[39m
[31m+   ERROR  config?.getEnablePromptCompletion is not a function[39m
[31m+[39m
[31m+  src/ui/hooks/useCommandCompletion.tsx:133:17[39m
[31m+[39m
[31m+  130:       // Check for prompt completion - only if enabled[39m
[31m+  131:       const trimmedText = buffer.text.trim();[39m
[31m+  132:       const isPromptCompletionEnabled =[39m
[31m+  133:         config?.getEnablePromptCompletion() ?? false;[39m
[31m+  134:[39m
[31m+  135:       if ([39m
[31m+  136:         isPromptCompletionEnabled &&[39m
[31m+[39m
[31m+  -  (src/ui/hooks/useCommandCompletion.tsx:133:17)[39m
[31m+  -mountMem (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_modules/react-reconci[39m
[31m+           ler/cjs/react-reconciler.development.js:4272:23)[39m
[31m+  -Object.useMe (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_modules/react-rec[39m
[31m+   o           onciler/cjs/react-reconciler.development.js:14920:18)[39m
[31m+  -process.env.NODE_ENV.expor (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_mod[39m
[31m+   s.useMemo                 ules/react/cjs/react.development.js:1209:34)[39m
[31m+  - useCommandCompletion (src/ui/hooks/useCommandCompletion.tsx:81:5)[39m
[31m+  - InputPrompt (src/ui/components/InputPrompt.tsx:88:22)[39m
[31m+  -Object.react-stack-bott (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_module[39m
[31m+   m-frame                s/react-reconciler/cjs/react-reconciler.development.js:15859:20)[39m
[31m+  -renderWithHoo (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_modules/react-re[39m
[31m+   s            conciler/cjs/react-reconciler.development.js:3221:22)[39m
[31m+  -updateFunctionComp (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_modules/rea[39m
[31m+   nent              ct-reconciler/cjs/react-reconciler.development.js:6475:19)[39m
[31m+  -beginWor (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_modules/react-reconci[39m
[31m+           ler/cjs/react-reconciler.development.js:8009:18)[39m
[31m+[39m

 ❯ src/ui/components/InputPrompt.test.tsx:1398:21
    1396| 
    1397|       const frame = stdout.lastFrame();
    1398|       expect(frame).toContain('(r:)');
       |                     ^
    1399|       expect(frame).toContain('echo hello');
    1400|       expect(frame).toContain('echo world');

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[55/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > reverse search > completes the highlighted entry on Tab and exits reverse-search
AssertionError: expected '\n  ERROR  config?.getEnablePromptCom…' to contain '(r:)'

[32m- Expected[39m
[31m+ Received[39m

[32m- (r:)[39m
[31m+[39m
[31m+   ERROR  config?.getEnablePromptCompletion is not a function[39m
[31m+[39m
[31m+  src/ui/hooks/useCommandCompletion.tsx:133:17[39m
[31m+[39m
[31m+  130:       // Check for prompt completion - only if enabled[39m
[31m+  131:       const trimmedText = buffer.text.trim();[39m
[31m+  132:       const isPromptCompletionEnabled =[39m
[31m+  133:         config?.getEnablePromptCompletion() ?? false;[39m
[31m+  134:[39m
[31m+  135:       if ([39m
[31m+  136:         isPromptCompletionEnabled &&[39m
[31m+[39m
[31m+  -  (src/ui/hooks/useCommandCompletion.tsx:133:17)[39m
[31m+  -mountMem (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_modules/react-reconci[39m
[31m+           ler/cjs/react-reconciler.development.js:4272:23)[39m
[31m+  -Object.useMe (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_modules/react-rec[39m
[31m+   o           onciler/cjs/react-reconciler.development.js:14920:18)[39m
[31m+  -process.env.NODE_ENV.expor (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_mod[39m
[31m+   s.useMemo                 ules/react/cjs/react.development.js:1209:34)[39m
[31m+  - useCommandCompletion (src/ui/hooks/useCommandCompletion.tsx:81:5)[39m
[31m+  - InputPrompt (src/ui/components/InputPrompt.tsx:88:22)[39m
[31m+  -Object.react-stack-bott (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_module[39m
[31m+   m-frame                s/react-reconciler/cjs/react-reconciler.development.js:15859:20)[39m
[31m+  -renderWithHoo (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_modules/react-re[39m
[31m+   s            conciler/cjs/react-reconciler.development.js:3221:22)[39m
[31m+  -updateFunctionComp (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_modules/rea[39m
[31m+   nent              ct-reconciler/cjs/react-reconciler.development.js:6475:19)[39m
[31m+  -beginWor (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_modules/react-reconci[39m
[31m+           ler/cjs/react-reconciler.development.js:8009:18)[39m
[31m+[39m

 ❯ src/ui/components/InputPrompt.test.tsx:1437:34
    1435| 
    1436|       // Verify reverse search is active
    1437|       expect(stdout.lastFrame()).toContain('(r:)');
       |                                  ^
    1438| 
    1439|       // Press Tab to complete the highlighted entry

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[56/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > reverse search > submits the highlighted entry on Enter and exits reverse-search
AssertionError: expected '\n  ERROR  config?.getEnablePromptCom…' to contain '(r:)'

[32m- Expected[39m
[31m+ Received[39m

[32m- (r:)[39m
[31m+[39m
[31m+   ERROR  config?.getEnablePromptCompletion is not a function[39m
[31m+[39m
[31m+  src/ui/hooks/useCommandCompletion.tsx:133:17[39m
[31m+[39m
[31m+  130:       // Check for prompt completion - only if enabled[39m
[31m+  131:       const trimmedText = buffer.text.trim();[39m
[31m+  132:       const isPromptCompletionEnabled =[39m
[31m+  133:         config?.getEnablePromptCompletion() ?? false;[39m
[31m+  134:[39m
[31m+  135:       if ([39m
[31m+  136:         isPromptCompletionEnabled &&[39m
[31m+[39m
[31m+  -  (src/ui/hooks/useCommandCompletion.tsx:133:17)[39m
[31m+  -mountMem (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_modules/react-reconci[39m
[31m+           ler/cjs/react-reconciler.development.js:4272:23)[39m
[31m+  -Object.useMe (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_modules/react-rec[39m
[31m+   o           onciler/cjs/react-reconciler.development.js:14920:18)[39m
[31m+  -process.env.NODE_ENV.expor (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_mod[39m
[31m+   s.useMemo                 ules/react/cjs/react.development.js:1209:34)[39m
[31m+  - useCommandCompletion (src/ui/hooks/useCommandCompletion.tsx:81:5)[39m
[31m+  - InputPrompt (src/ui/components/InputPrompt.tsx:88:22)[39m
[31m+  -Object.react-stack-bott (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_module[39m
[31m+   m-frame                s/react-reconciler/cjs/react-reconciler.development.js:15859:20)[39m
[31m+  -renderWithHoo (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_modules/react-re[39m
[31m+   s            conciler/cjs/react-reconciler.development.js:3221:22)[39m
[31m+  -updateFunctionComp (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_modules/rea[39m
[31m+   nent              ct-reconciler/cjs/react-reconciler.development.js:6475:19)[39m
[31m+  -beginWor (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_modules/react-reconci[39m
[31m+           ler/cjs/react-reconciler.development.js:8009:18)[39m
[31m+[39m

 ❯ src/ui/components/InputPrompt.test.tsx:1461:34
    1459|       stdin.write('\x12');
    1460|       await wait();
    1461|       expect(stdout.lastFrame()).toContain('(r:)');
       |                                  ^
    1462|       stdin.write('\r');
    1463| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[57/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > reverse search > text and cursor position should be restored after reverse search
AssertionError: expected '\n  ERROR  config?.getEnablePromptCom…' to contain '(r:)'

[32m- Expected[39m
[31m+ Received[39m

[32m- (r:)[39m
[31m+[39m
[31m+   ERROR  config?.getEnablePromptCompletion is not a function[39m
[31m+[39m
[31m+  src/ui/hooks/useCommandCompletion.tsx:133:17[39m
[31m+[39m
[31m+  130:       // Check for prompt completion - only if enabled[39m
[31m+  131:       const trimmedText = buffer.text.trim();[39m
[31m+  132:       const isPromptCompletionEnabled =[39m
[31m+  133:         config?.getEnablePromptCompletion() ?? false;[39m
[31m+  134:[39m
[31m+  135:       if ([39m
[31m+  136:         isPromptCompletionEnabled &&[39m
[31m+[39m
[31m+  -  (src/ui/hooks/useCommandCompletion.tsx:133:17)[39m
[31m+  -mountMem (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_modules/react-reconci[39m
[31m+           ler/cjs/react-reconciler.development.js:4272:23)[39m
[31m+  -Object.useMe (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_modules/react-rec[39m
[31m+   o           onciler/cjs/react-reconciler.development.js:14920:18)[39m
[31m+  -process.env.NODE_ENV.expor (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_mod[39m
[31m+   s.useMemo                 ules/react/cjs/react.development.js:1209:34)[39m
[31m+  - useCommandCompletion (src/ui/hooks/useCommandCompletion.tsx:81:5)[39m
[31m+  - InputPrompt (src/ui/components/InputPrompt.tsx:88:22)[39m
[31m+  -Object.react-stack-bott (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_module[39m
[31m+   m-frame                s/react-reconciler/cjs/react-reconciler.development.js:15859:20)[39m
[31m+  -renderWithHoo (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_modules/react-re[39m
[31m+   s            conciler/cjs/react-reconciler.development.js:3221:22)[39m
[31m+  -updateFunctionComp (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_modules/rea[39m
[31m+   nent              ct-reconciler/cjs/react-reconciler.development.js:6475:19)[39m
[31m+  -beginWor (/Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/node_modules/react-reconci[39m
[31m+           ler/cjs/react-reconciler.development.js:8009:18)[39m
[31m+[39m

 ❯ src/ui/components/InputPrompt.test.tsx:1480:34
    1478|       stdin.write('\x12');
    1479|       await wait();
    1480|       expect(stdout.lastFrame()).toContain('(r:)');
       |                                  ^
    1481|       stdin.write('\x1B');
    1482| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[58/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > newline insertion > should insert a newline on Alt+Enter (Option+Enter)
AssertionError: expected "spy" to be called at least once
 ❯ src/ui/components/InputPrompt.test.tsx:1507:34
    1505|       await wait();
    1506| 
    1507|       expect(mockBuffer.newline).toHaveBeenCalled();
       |                                  ^
    1508|       expect(props.onSubmit).not.toHaveBeenCalled();
    1509|       unmount();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[59/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > newline insertion > should submit on regular Enter without modifiers
AssertionError: expected "spy" to be called with arguments: [ 'echo hello' ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/ui/components/InputPrompt.test.tsx:1529:30
    1527| 
    1528|       expect(mockBuffer.newline).not.toHaveBeenCalled();
    1529|       expect(props.onSubmit).toHaveBeenCalledWith('echo hello');
       |                              ^
    1530|       unmount();
    1531|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[60/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > Ctrl+E keyboard shortcut > should move cursor to end of current line in multiline input
AssertionError: expected "spy" to be called with arguments: [ 'end' ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/ui/components/InputPrompt.test.tsx:1548:33
    1546|       await wait();
    1547| 
    1548|       expect(props.buffer.move).toHaveBeenCalledWith('end');
       |                                 ^
    1549|       expect(props.buffer.moveToOffset).not.toHaveBeenCalled();
    1550|       unmount();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[61/77]⎯

 FAIL  src/ui/components/InputPrompt.test.tsx > InputPrompt > Ctrl+E keyboard shortcut > should move cursor to end of current line for single line input
AssertionError: expected "spy" to be called with arguments: [ 'end' ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/ui/components/InputPrompt.test.tsx:1566:33
    1564|       await wait();
    1565| 
    1566|       expect(props.buffer.move).toHaveBeenCalledWith('end');
       |                                 ^
    1567|       expect(props.buffer.moveToOffset).not.toHaveBeenCalled();
    1568|       unmount();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[62/77]⎯

 FAIL  src/ui/components/StatsDisplay.test.tsx > <StatsDisplay /> > renders only the Performance section in its zero state
AssertionError: expected '╭────────────────────────────────────…' not to contain 'Interaction Summary'

[32m- Expected[39m
[31m+ Received[39m

[32m- Interaction Summary[39m
[31m+ ╭──────────────────────────────────────────────────────────────────────────────────────────────────╮[39m
[31m+ │                                                                                                  │[39m
[31m+ │  Session Stats                                                                                   │[39m
[31m+ │                                                                                                  │[39m
[31m+ │  Interaction Summary                                                                             │[39m
[31m+ │  Session ID:                                                                                     │[39m
[31m+ │  Tool Calls:                 0 ( ✓ 0 x 0 )                                                       │[39m
[31m+ │  Success Rate:               0.0%                                                                │[39m
[31m+ │                                                                                                  │[39m
[31m+ │  Performance                                                                                     │[39m
[31m+ │  Wall Time:                  1s                                                                  │[39m
[31m+ │  Agent Active:               0s                                                                  │[39m
[31m+ │    » API Time:               0s (0.0%)                                                           │[39m
[31m+ │    » Tool Time:              0s (0.0%)                                                           │[39m
[31m+ │                                                                                                  │[39m
[31m+ │                                                                                                  │[39m
[31m+ ╰──────────────────────────────────────────────────────────────────────────────────────────────────╯[39m

 ❯ src/ui/components/StatsDisplay.test.tsx:62:24
     60| 
     61|     expect(output).toContain('Performance');
     62|     expect(output).not.toContain('Interaction Summary');
       |                        ^
     63|     expect(output).not.toContain('Efficiency & Optimizations');
     64|     expect(output).not.toContain('Model'); // The table header

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[63/77]⎯

 FAIL  src/ui/components/StatsDisplay.test.tsx > <StatsDisplay /> > renders a table with two models correctly
Error: Snapshot `<StatsDisplay /> > renders a table with two models correctly 1` mismatched

[32m- Expected[39m
[31m+ Received[39m

[33m@@ -1,11 +1,11 @@[39m
[2m  "╭──────────────────────────────────────────────────────────────────────────────────────────────────╮[22m
[2m  │                                                                                                  │[22m
[2m  │  Session Stats                                                                                   │[22m
[2m  │                                                                                                  │[22m
[2m  │  Interaction Summary                                                                             │[22m
[32m- │  Session ID:                 [7mtest-session-id[27m                                                     │[39m
[31m+ │  Session ID:                 [7m               [27m                                                     │[39m
[2m  │  Tool Calls:                 0 ( ✓ 0 x 0 )                                                       │[22m
[2m  │  Success Rate:               0.0%                                                                │[22m
[2m  │                                                                                                  │[22m
[2m  │  Performance                                                                                     │[22m
[2m  │  Wall Time:                  1s                                                                  │[22m

 ❯ src/ui/components/StatsDisplay.test.tsx:115:20
    113|     expect(output).toContain('1,000');
    114|     expect(output).toContain('25,000');
    115|     expect(output).toMatchSnapshot();
       |                    ^
    116|   });
    117| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[64/77]⎯

 FAIL  src/ui/components/StatsDisplay.test.tsx > <StatsDisplay /> > renders all sections when all data is present
Error: Snapshot `<StatsDisplay /> > renders all sections when all data is present 1` mismatched

[32m- Expected[39m
[31m+ Received[39m

[33m@@ -1,11 +1,11 @@[39m
[2m  "╭──────────────────────────────────────────────────────────────────────────────────────────────────╮[22m
[2m  │                                                                                                  │[22m
[2m  │  Session Stats                                                                                   │[22m
[2m  │                                                                                                  │[22m
[2m  │  Interaction Summary                                                                             │[22m
[32m- │  Session ID:                 [7mtest-session-id[27m                                                     │[39m
[31m+ │  Session ID:                 [7m               [27m                                                     │[39m
[2m  │  Tool Calls:                 2 ( ✓ 1 x 1 )                                                       │[22m
[2m  │  Success Rate:               50.0%                                                               │[22m
[2m  │  User Agreement:             100.0% (1 reviewed)                                                 │[22m
[2m  │                                                                                                  │[22m
[2m  │  Performance                                                                                     │[22m

 ❯ src/ui/components/StatsDisplay.test.tsx:163:20
    161|     expect(output).toContain('Savings Highlight');
    162|     expect(output).toContain('gemini-2.5-pro');
    163|     expect(output).toMatchSnapshot();
       |                    ^
    164|   });
    165| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[65/77]⎯

 FAIL  src/ui/components/StatsDisplay.test.tsx > <StatsDisplay /> > Conditional Rendering Tests > hides User Agreement when no decisions are made
Error: Snapshot `<StatsDisplay /> > Conditional Rendering Tests > hides User Agreement when no decisions are made 1` mismatched

[32m- Expected[39m
[31m+ Received[39m

[33m@@ -1,11 +1,11 @@[39m
[2m  "╭──────────────────────────────────────────────────────────────────────────────────────────────────╮[22m
[2m  │                                                                                                  │[22m
[2m  │  Session Stats                                                                                   │[22m
[2m  │                                                                                                  │[22m
[2m  │  Interaction Summary                                                                             │[22m
[32m- │  Session ID:                 [7mtest-session-id[27m                                                     │[39m
[31m+ │  Session ID:                 [7m               [27m                                                     │[39m
[2m  │  Tool Calls:                 2 ( ✓ 1 x 1 )                                                       │[22m
[2m  │  Success Rate:               50.0%                                                               │[22m
[2m  │                                                                                                  │[22m
[2m  │  Performance                                                                                     │[22m
[2m  │  Wall Time:                  1s                                                                  │[22m

 ❯ src/ui/components/StatsDisplay.test.tsx:198:22
    196|       expect(output).toContain('Success Rate');
    197|       expect(output).not.toContain('User Agreement');
    198|       expect(output).toMatchSnapshot();
       |                      ^
    199|     });
    200| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[66/77]⎯

 FAIL  src/ui/components/StatsDisplay.test.tsx > <StatsDisplay /> > Conditional Rendering Tests > hides Efficiency section when cache is not used
Error: Snapshot `<StatsDisplay /> > Conditional Rendering Tests > hides Efficiency section when cache is not used 1` mismatched

[32m- Expected[39m
[31m+ Received[39m

[33m@@ -1,11 +1,11 @@[39m
[2m  "╭──────────────────────────────────────────────────────────────────────────────────────────────────╮[22m
[2m  │                                                                                                  │[22m
[2m  │  Session Stats                                                                                   │[22m
[2m  │                                                                                                  │[22m
[2m  │  Interaction Summary                                                                             │[22m
[32m- │  Session ID:                 [7mtest-session-id[27m                                                     │[39m
[31m+ │  Session ID:                 [7m               [27m                                                     │[39m
[2m  │  Tool Calls:                 0 ( ✓ 0 x 0 )                                                       │[22m
[2m  │  Success Rate:               0.0%                                                                │[22m
[2m  │                                                                                                  │[22m
[2m  │  Performance                                                                                     │[22m
[2m  │  Wall Time:                  1s                                                                  │[22m

 ❯ src/ui/components/StatsDisplay.test.tsx:234:22
    232| 
    233|       expect(output).not.toContain('Efficiency & Optimizations');
    234|       expect(output).toMatchSnapshot();
       |                      ^
    235|     });
    236|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[67/77]⎯

 FAIL  src/ui/components/StatsDisplay.test.tsx > <StatsDisplay /> > Conditional Color Tests > renders success rate in green for high values
Error: Snapshot `<StatsDisplay /> > Conditional Color Tests > renders success rate in green for high values 1` mismatched

[32m- Expected[39m
[31m+ Received[39m

[33m@@ -1,11 +1,11 @@[39m
[2m  "╭──────────────────────────────────────────────────────────────────────────────────────────────────╮[22m
[2m  │                                                                                                  │[22m
[2m  │  Session Stats                                                                                   │[22m
[2m  │                                                                                                  │[22m
[2m  │  Interaction Summary                                                                             │[22m
[32m- │  Session ID:                 [7mtest-session-id[27m                                                     │[39m
[31m+ │  Session ID:                 [7m               [27m                                                     │[39m
[2m  │  Tool Calls:                 10 ( ✓ 10 x 0 )                                                     │[22m
[2m  │  Success Rate:               100.0%                                                              │[22m
[2m  │                                                                                                  │[22m
[2m  │  Performance                                                                                     │[22m
[2m  │  Wall Time:                  1s                                                                  │[22m

 ❯ src/ui/components/StatsDisplay.test.tsx:256:27
    254|       };
    255|       const { lastFrame } = renderWithMockedStats(metrics);
    256|       expect(lastFrame()).toMatchSnapshot();
       |                           ^
    257|     });
    258| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[68/77]⎯

 FAIL  src/ui/components/StatsDisplay.test.tsx > <StatsDisplay /> > Conditional Color Tests > renders success rate in yellow for medium values
Error: Snapshot `<StatsDisplay /> > Conditional Color Tests > renders success rate in yellow for medium values 1` mismatched

[32m- Expected[39m
[31m+ Received[39m

[33m@@ -1,11 +1,11 @@[39m
[2m  "╭──────────────────────────────────────────────────────────────────────────────────────────────────╮[22m
[2m  │                                                                                                  │[22m
[2m  │  Session Stats                                                                                   │[22m
[2m  │                                                                                                  │[22m
[2m  │  Interaction Summary                                                                             │[22m
[32m- │  Session ID:                 [7mtest-session-id[27m                                                     │[39m
[31m+ │  Session ID:                 [7m               [27m                                                     │[39m
[2m  │  Tool Calls:                 10 ( ✓ 9 x 1 )                                                      │[22m
[2m  │  Success Rate:               90.0%                                                               │[22m
[2m  │                                                                                                  │[22m
[2m  │  Performance                                                                                     │[22m
[2m  │  Wall Time:                  1s                                                                  │[22m

 ❯ src/ui/components/StatsDisplay.test.tsx:276:27
    274|       };
    275|       const { lastFrame } = renderWithMockedStats(metrics);
    276|       expect(lastFrame()).toMatchSnapshot();
       |                           ^
    277|     });
    278| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[69/77]⎯

 FAIL  src/ui/components/StatsDisplay.test.tsx > <StatsDisplay /> > Conditional Color Tests > renders success rate in red for low values
Error: Snapshot `<StatsDisplay /> > Conditional Color Tests > renders success rate in red for low values 1` mismatched

[32m- Expected[39m
[31m+ Received[39m

[33m@@ -1,11 +1,11 @@[39m
[2m  "╭──────────────────────────────────────────────────────────────────────────────────────────────────╮[22m
[2m  │                                                                                                  │[22m
[2m  │  Session Stats                                                                                   │[22m
[2m  │                                                                                                  │[22m
[2m  │  Interaction Summary                                                                             │[22m
[32m- │  Session ID:                 [7mtest-session-id[27m                                                     │[39m
[31m+ │  Session ID:                 [7m               [27m                                                     │[39m
[2m  │  Tool Calls:                 10 ( ✓ 5 x 5 )                                                      │[22m
[2m  │  Success Rate:               50.0%                                                               │[22m
[2m  │                                                                                                  │[22m
[2m  │  Performance                                                                                     │[22m
[2m  │  Wall Time:                  1s                                                                  │[22m

 ❯ src/ui/components/StatsDisplay.test.tsx:296:27
    294|       };
    295|       const { lastFrame } = renderWithMockedStats(metrics);
    296|       expect(lastFrame()).toMatchSnapshot();
       |                           ^
    297|     });
    298|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[70/77]⎯

 FAIL  src/ui/components/StatsDisplay.test.tsx > <StatsDisplay /> > Code Changes Display > displays Code Changes when line counts are present
Error: Snapshot `<StatsDisplay /> > Code Changes Display > displays Code Changes when line counts are present 1` mismatched

[32m- Expected[39m
[31m+ Received[39m

[33m@@ -1,11 +1,11 @@[39m
[2m  "╭──────────────────────────────────────────────────────────────────────────────────────────────────╮[22m
[2m  │                                                                                                  │[22m
[2m  │  Session Stats                                                                                   │[22m
[2m  │                                                                                                  │[22m
[2m  │  Interaction Summary                                                                             │[22m
[32m- │  Session ID:                 [7mtest-session-id[27m                                                     │[39m
[31m+ │  Session ID:                 [7m               [27m                                                     │[39m
[2m  │  Tool Calls:                 1 ( ✓ 1 x 0 )                                                       │[22m
[2m  │  Success Rate:               100.0%                                                              │[22m
[2m  │  Code Changes:               +42 -18                                                             │[22m
[2m  │                                                                                                  │[22m
[2m  │  Performance                                                                                     │[22m

 ❯ src/ui/components/StatsDisplay.test.tsx:324:22
    322|       expect(output).toContain('+42');
    323|       expect(output).toContain('-18');
    324|       expect(output).toMatchSnapshot();
       |                      ^
    325|     });
    326| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[71/77]⎯

 FAIL  src/ui/components/StatsDisplay.test.tsx > <StatsDisplay /> > Code Changes Display > hides Code Changes when no lines are added or removed
Error: Snapshot `<StatsDisplay /> > Code Changes Display > hides Code Changes when no lines are added or removed 1` mismatched

[32m- Expected[39m
[31m+ Received[39m

[33m@@ -1,11 +1,11 @@[39m
[2m  "╭──────────────────────────────────────────────────────────────────────────────────────────────────╮[22m
[2m  │                                                                                                  │[22m
[2m  │  Session Stats                                                                                   │[22m
[2m  │                                                                                                  │[22m
[2m  │  Interaction Summary                                                                             │[22m
[32m- │  Session ID:                 [7mtest-session-id[27m                                                     │[39m
[31m+ │  Session ID:                 [7m               [27m                                                     │[39m
[2m  │  Tool Calls:                 1 ( ✓ 1 x 0 )                                                       │[22m
[2m  │  Success Rate:               100.0%                                                              │[22m
[2m  │                                                                                                  │[22m
[2m  │  Performance                                                                                     │[22m
[2m  │  Wall Time:                  1s                                                                  │[22m

 ❯ src/ui/components/StatsDisplay.test.tsx:348:22
    346| 
    347|       expect(output).not.toContain('Code Changes:');
    348|       expect(output).toMatchSnapshot();
       |                      ^
    349|     });
    350|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[72/77]⎯

 FAIL  src/ui/components/StatsDisplay.test.tsx > <StatsDisplay /> > Title Rendering > renders the default title when no title prop is provided
Error: Snapshot `<StatsDisplay /> > Title Rendering > renders the default title when no title prop is provided 1` mismatched

[32m- Expected[39m
[31m+ Received[39m

[33m@@ -1,11 +1,11 @@[39m
[2m  "╭──────────────────────────────────────────────────────────────────────────────────────────────────╮[22m
[2m  │                                                                                                  │[22m
[2m  │  Session Stats                                                                                   │[22m
[2m  │                                                                                                  │[22m
[2m  │  Interaction Summary                                                                             │[22m
[32m- │  Session ID:                 [7mtest-session-id[27m                                                     │[39m
[31m+ │  Session ID:                 [7m               [27m                                                     │[39m
[2m  │  Tool Calls:                 0 ( ✓ 0 x 0 )                                                       │[22m
[2m  │  Success Rate:               0.0%                                                                │[22m
[2m  │                                                                                                  │[22m
[2m  │  Performance                                                                                     │[22m
[2m  │  Wall Time:                  1s                                                                  │[22m

 ❯ src/ui/components/StatsDisplay.test.tsx:374:22
    372|       expect(output).toContain('Session Stats');
    373|       expect(output).not.toContain('Agent powering down');
    374|       expect(output).toMatchSnapshot();
       |                      ^
    375|     });
    376| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[73/77]⎯

 FAIL  src/ui/components/StatsDisplay.test.tsx > <StatsDisplay /> > Title Rendering > renders the custom title when a title prop is provided
Error: Snapshot `<StatsDisplay /> > Title Rendering > renders the custom title when a title prop is provided 1` mismatched

[32m- Expected[39m
[31m+ Received[39m

[33m@@ -1,11 +1,11 @@[39m
[2m  "╭──────────────────────────────────────────────────────────────────────────────────────────────────╮[22m
[2m  │                                                                                                  │[22m
[2m  │  Agent powering down. Goodbye!                                                                   │[22m
[2m  │                                                                                                  │[22m
[2m  │  Interaction Summary                                                                             │[22m
[32m- │  Session ID:                 [7mtest-session-id[27m                                                     │[39m
[31m+ │  Session ID:                 [7m               [27m                                                     │[39m
[2m  │  Tool Calls:                 0 ( ✓ 0 x 0 )                                                       │[22m
[2m  │  Success Rate:               0.0%                                                                │[22m
[2m  │                                                                                                  │[22m
[2m  │  Performance                                                                                     │[22m
[2m  │  Wall Time:                  1s                                                                  │[22m

 ❯ src/ui/components/StatsDisplay.test.tsx:396:22
    394|       expect(output).toContain('Agent powering down. Goodbye!');
    395|       expect(output).not.toContain('Session Stats');
    396|       expect(output).toMatchSnapshot();
       |                      ^
    397|     });
    398|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[74/77]⎯

 FAIL  src/ui/components/messages/ToolGroupMessage.test.tsx > <ToolGroupMessage /> > Golden Snapshots > renders empty tool calls array
Error: Snapshot `<ToolGroupMessage /> > Golden Snapshots > renders empty tool calls array 1` mismatched

[32m- Expected[39m
[31m+ Received[39m

[32m- "[7m ╭──────────────────────────────────────────────────────────────────────────────────────────────────╮[27m[39m
[32m- [7m ╰──────────────────────────────────────────────────────────────────────────────────────────────────╯[27m"[39m
[31m+ ""[39m

 ❯ src/ui/components/messages/ToolGroupMessage.test.tsx:244:27
    242|         <ToolGroupMessage {...baseProps} toolCalls={[]} />,
    243|       );
    244|       expect(lastFrame()).toMatchSnapshot();
       |                           ^
    245|     });
    246|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[75/77]⎯

⎯⎯⎯⎯⎯⎯ Unhandled Errors ⎯⎯⎯⎯⎯⎯

Vitest caught 5 unhandled errors during the test run.
This might cause false positive tests. Resolve unhandled errors to make sure your tests are not affected.

⎯⎯⎯⎯ Unhandled Rejection ⎯⎯⎯⎯⎯
TypeError: config?.getGeminiClient is not a function
 ❯ src/ui/hooks/usePromptCompletion.ts:72:34
     70|   const generatePromptSuggestions = useCallback(async () => {
     71|     const trimmedText = buffer.text.trim();
     72|     const geminiClient = config?.getGeminiClient();
       |                                  ^
     73| 
     74|     if (trimmedText === lastRequestedTextRef.current) {
 ❯ Timeout._onTimeout src/ui/hooks/usePromptCompletion.ts:194:5
 ❯ listOnTimeout node:internal/timers:608:17
 ❯ processTimers node:internal/timers:543:7

This error originated in "src/ui/hooks/useCommandCompletion.test.ts" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.
The latest test that might've caused the error is "should navigate up through suggestions with wrap-around". It might mean one of the following:
- The error was thrown, while Vitest was running this test.
- If the error occurred after the test had been completed, this was the last documented test before it was thrown.

⎯⎯⎯⎯ Unhandled Rejection ⎯⎯⎯⎯⎯
TypeError: config?.getGeminiClient is not a function
 ❯ src/ui/hooks/usePromptCompletion.ts:72:34
     70|   const generatePromptSuggestions = useCallback(async () => {
     71|     const trimmedText = buffer.text.trim();
     72|     const geminiClient = config?.getGeminiClient();
       |                                  ^
     73| 
     74|     if (trimmedText === lastRequestedTextRef.current) {
 ❯ Timeout._onTimeout src/ui/hooks/usePromptCompletion.ts:194:5
 ❯ listOnTimeout node:internal/timers:608:17
 ❯ processTimers node:internal/timers:543:7

This error originated in "src/ui/hooks/useCommandCompletion.test.ts" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.
The latest test that might've caused the error is "should navigate down through suggestions with wrap-around". It might mean one of the following:
- The error was thrown, while Vitest was running this test.
- If the error occurred after the test had been completed, this was the last documented test before it was thrown.

⎯⎯⎯⎯ Unhandled Rejection ⎯⎯⎯⎯⎯
TypeError: config?.getGeminiClient is not a function
 ❯ src/ui/hooks/usePromptCompletion.ts:72:34
     70|   const generatePromptSuggestions = useCallback(async () => {
     71|     const trimmedText = buffer.text.trim();
     72|     const geminiClient = config?.getGeminiClient();
       |                                  ^
     73| 
     74|     if (trimmedText === lastRequestedTextRef.current) {
 ❯ Timeout._onTimeout src/ui/hooks/usePromptCompletion.ts:194:5
 ❯ listOnTimeout node:internal/timers:608:17
 ❯ processTimers node:internal/timers:543:7

This error originated in "src/ui/hooks/useCommandCompletion.test.ts" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.
The latest test that might've caused the error is "should handle navigation with multiple suggestions". It might mean one of the following:
- The error was thrown, while Vitest was running this test.
- If the error occurred after the test had been completed, this was the last documented test before it was thrown.

⎯⎯⎯⎯ Unhandled Rejection ⎯⎯⎯⎯⎯
TypeError: config?.getGeminiClient is not a function
 ❯ src/ui/hooks/usePromptCompletion.ts:72:34
     70|   const generatePromptSuggestions = useCallback(async () => {
     71|     const trimmedText = buffer.text.trim();
     72|     const geminiClient = config?.getGeminiClient();
       |                                  ^
     73| 
     74|     if (trimmedText === lastRequestedTextRef.current) {
 ❯ Timeout._onTimeout src/ui/hooks/usePromptCompletion.ts:194:5
 ❯ listOnTimeout node:internal/timers:608:17
 ❯ processTimers node:internal/timers:543:7

This error originated in "src/ui/hooks/useCommandCompletion.test.ts" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.
The latest test that might've caused the error is "should automatically select the first item when suggestions are available". It might mean one of the following:
- The error was thrown, while Vitest was running this test.
- If the error occurred after the test had been completed, this was the last documented test before it was thrown.

⎯⎯⎯⎯ Unhandled Rejection ⎯⎯⎯⎯⎯
TypeError: config?.getGeminiClient is not a function
 ❯ src/ui/hooks/usePromptCompletion.ts:72:34
     70|   const generatePromptSuggestions = useCallback(async () => {
     71|     const trimmedText = buffer.text.trim();
     72|     const geminiClient = config?.getGeminiClient();
       |                                  ^
     73| 
     74|     if (trimmedText === lastRequestedTextRef.current) {
 ❯ Timeout._onTimeout src/ui/hooks/usePromptCompletion.ts:194:5
 ❯ listOnTimeout node:internal/timers:608:17
 ❯ processTimers node:internal/timers:543:7

This error originated in "src/ui/hooks/useCommandCompletion.test.ts" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.
The latest test that might've caused the error is "should complete a partial command". It might mean one of the following:
- The error was thrown, while Vitest was running this test.
- If the error occurred after the test had been completed, this was the last documented test before it was thrown.
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯


  Snapshots  15 failed
             1 obsolete
             ↳ src/ui/components/StatsDisplay.test.tsx
               · <StatsDisplay /> > renders only the Performance section in its zero state 1

 Test Files  8 failed | 142 passed | 1 skipped (151)
      Tests  77 failed | 2052 passed | 19 skipped (2148)
     Errors  5 errors
   Start at  15:28:04
   Duration  21.51s (transform 5.09s, setup 1.50s, collect 100.49s, tests 37.75s, environment 36.75s, prepare 9.32s)

JUNIT report written to /Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/packages/cli/junit.xml
npm error Lifecycle script `test` failed with error:
npm error code 1
npm error path /Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/packages/cli
npm error workspace @vybestack/llxprt-code@0.2.2
npm error location /Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/packages/cli
npm error command failed
npm error command sh -c vitest run


> @vybestack/llxprt-code-core@0.2.2 test
> vitest run


 RUN  v3.2.4 /Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/packages/core
      Coverage enabled with v8

 ❯ src/utils/ignorePatterns.test.ts (28 tests | 8 failed) 12ms
   ✓ FileExclusions > getCoreIgnorePatterns > should return basic ignore patterns 1ms
   × FileExclusions > getDefaultExcludePatterns > should return comprehensive patterns by default 6ms
     → [vitest] No "getCurrentLlxprtMdFilename" export is defined on the "../tools/memoryTool.js" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   ✓ FileExclusions > getDefaultExcludePatterns > should respect includeDefaults option 0ms
   × FileExclusions > getDefaultExcludePatterns > should include custom patterns 0ms
     → [vitest] No "getCurrentLlxprtMdFilename" export is defined on the "../tools/memoryTool.js" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   × FileExclusions > getDefaultExcludePatterns > should include runtime patterns 0ms
     → [vitest] No "getCurrentLlxprtMdFilename" export is defined on the "../tools/memoryTool.js" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   × FileExclusions > getDefaultExcludePatterns > should respect includeDynamicPatterns option 0ms
     → [vitest] No "getCurrentLlxprtMdFilename" export is defined on the "../tools/memoryTool.js" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   × FileExclusions > getReadManyFilesExcludes > should provide legacy compatibility 0ms
     → [vitest] No "getCurrentLlxprtMdFilename" export is defined on the "../tools/memoryTool.js" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   ✓ FileExclusions > getGlobExcludes > should return core patterns for glob operations 0ms
   ✓ FileExclusions > getGlobExcludes > should include additional excludes 0ms
   × FileExclusions > with Config > should use config custom excludes when available 0ms
     → [vitest] No "getCurrentLlxprtMdFilename" export is defined on the "../tools/memoryTool.js" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   × FileExclusions > with Config > should handle config without getCustomExcludes method 0ms
     → [vitest] No "getCurrentLlxprtMdFilename" export is defined on the "../tools/memoryTool.js" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   ✓ FileExclusions > with Config > should include config custom excludes in glob patterns 0ms
   × FileExclusions > buildExcludePatterns > should be an alias for getDefaultExcludePatterns 0ms
     → [vitest] No "getCurrentLlxprtMdFilename" export is defined on the "../tools/memoryTool.js" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   ✓ BINARY_EXTENSIONS > should include common binary file extensions 0ms
   ✓ BINARY_EXTENSIONS > should include additional binary extensions 0ms
   ✓ BINARY_EXTENSIONS > should include media file extensions 0ms
   ✓ BINARY_EXTENSIONS > should be sorted 0ms
   ✓ BINARY_EXTENSIONS > should not contain invalid extensions from brace patterns 0ms
   ✓ extractExtensionsFromPatterns > should extract simple extensions 0ms
   ✓ extractExtensionsFromPatterns > should handle brace expansion patterns 0ms
   ✓ extractExtensionsFromPatterns > should combine simple and brace expansion patterns 0ms
   ✓ extractExtensionsFromPatterns > should handle empty brace expansion 0ms
   ✓ extractExtensionsFromPatterns > should ignore invalid patterns 0ms
   ✓ extractExtensionsFromPatterns > should remove duplicates and sort results 0ms
   ✓ extractExtensionsFromPatterns > should handle complex brace patterns with multiple extensions 0ms
   ✓ extractExtensionsFromPatterns > should handle compound extensions correctly using path.extname 0ms
   ✓ extractExtensionsFromPatterns > should handle dotfiles correctly 0ms
   ✓ extractExtensionsFromPatterns > should handle edge cases with path.extname 0ms
 ❯ src/ide/ide-installer.test.ts (10 tests | 1 failed) 13ms
   ✓ ide-installer > getIdeInstaller > returns a VsCodeInstaller for "'vscode'" 2ms
   ✓ ide-installer > getIdeInstaller > returns a VsCodeInstaller for "'firebasestudio'" 0ms
   ✓ ide-installer > VsCodeInstaller > install > identifies the path to code cli on platform: 'win32' 1ms
   ✓ ide-installer > VsCodeInstaller > install > identifies the path to code cli on platform: 'darwin' 0ms
   ✓ ide-installer > VsCodeInstaller > install > identifies the path to code cli on platform: 'linux' 0ms
   × ide-installer > VsCodeInstaller > install > installs the extension using code cli 6ms
     → expected "execSync" to be called with arguments: [ …(2) ][90m

Received: 

[1m  1st execSync call:

[22m[2m  [[22m
[32m-   "\"code\" --install-extension google.gemini-cli-vscode-ide-companion --force",[90m
[31m+   "command -v code",[90m
[2m    {[22m
[32m-     "stdio": "pipe",[90m
[31m+     "stdio": "ignore",[90m
[2m    },[22m
[2m  ][22m

[1m  2nd execSync call:

[22m[2m  [[22m
[32m-   "\"code\" --install-extension google.gemini-cli-vscode-ide-companion --force",[90m
[31m+   "\"code\" --install-extension vybestack.llxprt-code-vscode-ide-companion --force",[90m
[2m    {[22m
[2m      "stdio": "pipe",[22m
[2m    },[22m
[2m  ][22m
[39m[90m

Number of calls: [1m2[22m
[39m
   ✓ ide-installer > VsCodeInstaller > install > returns that the cli was installed successfully 2ms
   ✓ ide-installer > VsCodeInstaller > install > returns that the cli was installed successfully 0ms
   ✓ ide-installer > VsCodeInstaller > install > should return a failure message if 'vscode' is not installed 0ms
   ✓ ide-installer > VsCodeInstaller > install > should return a failure message if 'firebasestudio' is not installed 0ms
 ❯ src/tools/todo-pause.spec.ts (21 tests | 2 failed) 9ms
   ✓ TodoPause - Behavioral Tests > Input Validation > should accept valid reason strings 3ms
   ✓ TodoPause - Behavioral Tests > Input Validation > should accept minimal valid reason 0ms
   ✓ TodoPause - Behavioral Tests > Input Validation > should reject empty reason string 0ms
   ✓ TodoPause - Behavioral Tests > Input Validation > should reject missing reason parameter 0ms
   ✓ TodoPause - Behavioral Tests > Input Validation > should truncate reasons exceeding 500 character limit 0ms
   ✓ TodoPause - Behavioral Tests > Input Validation > should accept reason at exactly 500 characters 0ms
   × TodoPause - Behavioral Tests > Execution Behavior > should return pause signal with provided reason 4ms
     → the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string
   ✓ TodoPause - Behavioral Tests > Execution Behavior > should not modify any todo statuses during execution 0ms
   ✓ TodoPause - Behavioral Tests > Execution Behavior > should format user-friendly pause message 0ms
   ✓ TodoPause - Behavioral Tests > Execution Behavior > should handle special characters in reason 0ms
   ✓ TodoPause - Behavioral Tests > Execution Behavior > should handle multi-line reasons properly 0ms
   × TodoPause - Behavioral Tests > Execution Behavior > should signal continuation break through result structure 1ms
     → expected undefined to be defined
   ✓ TodoPause - Behavioral Tests > Integration Scenarios > should work properly during continuation context 0ms
   ✓ TodoPause - Behavioral Tests > Integration Scenarios > should handle non-continuation context appropriately 0ms
   ✓ TodoPause - Behavioral Tests > Output Formatting > should format output with "AI paused:" prefix 0ms
   ✓ TodoPause - Behavioral Tests > Output Formatting > should preserve formatting in complex reasons 0ms
   ✓ TodoPause - Behavioral Tests > Output Formatting > should provide both LLM and user-friendly output 0ms
   ✓ TodoPause - Behavioral Tests > Output Formatting > should handle unicode and emoji characters in reason 0ms
   ✓ TodoPause - Behavioral Tests > Tool Metadata > should have correct tool name 0ms
   ✓ TodoPause - Behavioral Tests > Tool Metadata > should provide appropriate description for different contexts 0ms
   ✓ TodoPause - Behavioral Tests > Tool Metadata > should be configured as markdown output tool 0ms
 ❯ src/ide/ide-client.test.ts (7 tests | 6 failed) 10ms
   × IdeClient > connect > should connect using HTTP when port is provided in config file 6ms
     → expected "StreamableHTTPClientTransport" to be called with arguments: [ URL{}, Any<Object> ][90m

Number of calls: [1m0[22m
[39m
   × IdeClient > connect > should connect using stdio when stdio config is provided in file 1ms
     → expected "StdioClientTransport" to be called with arguments: [ { command: 'test-cmd', …(1) } ][90m

Number of calls: [1m0[22m
[39m
   × IdeClient > connect > should prioritize port over stdio when both are in config file 0ms
     → expected "StreamableHTTPClientTransport" to be called at least once
   × IdeClient > connect > should connect using HTTP when port is provided in environment variables 0ms
     → expected "StreamableHTTPClientTransport" to be called with arguments: [ URL{}, Any<Object> ][90m

Number of calls: [1m0[22m
[39m
   × IdeClient > connect > should connect using stdio when stdio config is in environment variables 0ms
     → expected "StdioClientTransport" to be called with arguments: [ { command: 'env-cmd', …(1) } ][90m

Number of calls: [1m0[22m
[39m
   × IdeClient > connect > should prioritize file config over environment variables 0ms
     → expected "StreamableHTTPClientTransport" to be called with arguments: [ URL{}, Any<Object> ][90m

Number of calls: [1m0[22m
[39m
   ✓ IdeClient > connect > should be disconnected if no config is found 1ms
 ❯ src/core/nonInteractiveToolExecutor.test.ts (6 tests | 6 failed) 14ms
   × executeToolCall > should execute a tool successfully 6ms
     → expected "spy" to be called with arguments: [ { param1: 'value1' } ][90m

Number of calls: [1m0[22m
[39m
   × executeToolCall > should return an error if tool is not found 3ms
     → expected { callId: 'call2', …(4) } to strictly equal { callId: 'call2', …(4) }
   × executeToolCall > should return an error if tool validation fails 1ms
     → expected { callId: 'call3', …(4) } to strictly equal { callId: 'call3', …(4) }
   × executeToolCall > should return an error if tool execution fails 1ms
     → expected { callId: 'call4', …(4) } to strictly equal { callId: 'call4', …(4) }
   × executeToolCall > should return an unhandled exception error if execution throws 1ms
     → expected { callId: 'call5', …(4) } to strictly equal { callId: 'call5', …(4) }
   × executeToolCall > should correctly format llmContent with inlineData 1ms
     → expected { callId: 'call6', …(4) } to strictly equal { callId: 'call6', …(4) }
 ❯ src/tools/shell.test.ts (21 tests | 1 failed) 52ms
   ✓ ShellTool > isCommandAllowed > should allow a command if no restrictions are provided 2ms
   ✓ ShellTool > isCommandAllowed > should block a command with command substitution using $() 0ms
   ✓ ShellTool > build > should return an invocation for a valid command 16ms
   ✓ ShellTool > build > should throw an error for an empty command 2ms
   ✓ ShellTool > build > should throw an error for a non-existent directory 1ms
   ✓ ShellTool > execute > should wrap command on linux and parse pgrep output 2ms
   ✓ ShellTool > execute > should not wrap command on windows 3ms
   ✓ ShellTool > execute > should format error messages correctly 1ms
   ✓ ShellTool > execute > should return a SHELL_EXECUTE_ERROR for a command failure 1ms
   ✓ ShellTool > execute > should throw an error for invalid parameters 1ms
   ✓ ShellTool > execute > should throw an error for invalid directory 1ms
   × ShellTool > execute > should summarize output when configured 3ms
     → summarizer is not defined
   ✓ ShellTool > execute > should clean up the temp file on synchronous execution error 1ms
   ✓ ShellTool > execute > Streaming to `updateOutput` > should throttle text output updates 8ms
   ✓ ShellTool > execute > Streaming to `updateOutput` > should immediately show binary detection message and throttle progress 4ms
   ✓ ShellTool > shouldConfirmExecute > should request confirmation for a new command and whitelist it on "Always" 2ms
   ✓ ShellTool > shouldConfirmExecute > should throw an error if validation fails 1ms
   ✓ ShellTool > getDescription > should return the windows description when on windows 1ms
   ✓ ShellTool > getDescription > should return the non-windows description when not on windows 0ms
   ✓ build > should return an invocation for valid directory 1ms
   ✓ build > should throw an error for directory outside workspace 1ms
 ❯ src/tools/web-fetch.test.ts (7 tests | 1 failed) 30ms
   ✓ WebFetchTool > execute > should return WEB_FETCH_NO_URL_IN_PROMPT when no URL is in the prompt for fallback 19ms
   ✓ WebFetchTool > execute > should return WEB_FETCH_FALLBACK_FAILED on fallback fetch failure 1ms
   × WebFetchTool > execute > should return WEB_FETCH_PROCESSING_ERROR on general processing failure 4ms
     → this.config.getContentGeneratorConfig is not a function
   ✓ WebFetchTool > shouldConfirmExecute > should return confirmation details with the correct prompt and urls 1ms
   ✓ WebFetchTool > shouldConfirmExecute > should convert github urls to raw format 2ms
   ✓ WebFetchTool > shouldConfirmExecute > should return false if approval mode is AUTO_EDIT 1ms
   ✓ WebFetchTool > shouldConfirmExecute > should call setApprovalMode when onConfirm is called with ProceedAlways 1ms
 ❯ src/tools/ls.test.ts (22 tests | 1 failed) 64ms
   ✓ LSTool > parameter validation > should accept valid absolute paths within workspace 19ms
   ✓ LSTool > parameter validation > should reject relative paths 2ms
   ✓ LSTool > parameter validation > should reject paths outside workspace with clear error message 1ms
   ✓ LSTool > parameter validation > should accept paths in secondary workspace directory 1ms
   ✓ LSTool > execute > should list files in a directory 1ms
   ✓ LSTool > execute > should list files from secondary workspace directory 1ms
   ✓ LSTool > execute > should handle empty directories 2ms
   ✓ LSTool > execute > should respect ignore patterns 1ms
   ✓ LSTool > execute > should respect gitignore patterns 4ms
   × LSTool > execute > should respect llxprtignore patterns 7ms
     → expected 'Listed 2 item(s). (1 gemini-ignored)' to be 'Listed 2 item(s). (1 llxprt-ignored)' // Object.is equality
   ✓ LSTool > execute > should handle non-directory paths 1ms
   ✓ LSTool > execute > should handle non-existent paths 1ms
   ✓ LSTool > execute > should sort directories first, then files alphabetically 1ms
   ✓ LSTool > execute > should handle permission errors gracefully 1ms
   ✓ LSTool > execute > should throw for invalid params at build time 1ms
   ✓ LSTool > execute > should handle errors accessing individual files during listing 2ms
   ✓ LSTool > getDescription > should return shortened relative path 1ms
   ✓ LSTool > getDescription > should handle paths in secondary workspace 1ms
   ✓ LSTool > workspace boundary validation > should accept paths in primary workspace directory 2ms
   ✓ LSTool > workspace boundary validation > should accept paths in secondary workspace directory 1ms
   ✓ LSTool > workspace boundary validation > should reject paths outside all workspace directories 1ms
   ✓ LSTool > workspace boundary validation > should list files from secondary workspace directory 10ms
 ❯ src/core/atomic-compression.test.ts (2 tests | 1 failed) 123ms
   ✓ Atomic Compression > should block concurrent compressions 117ms
   × Atomic Compression > should skip compression when tool calls are pending 6ms
     → this.getChat(...).getHistory is not a function
 ❯ src/tools/read-many-files.test.ts (31 tests | 2 failed) 494ms
   ✓ ReadManyFilesTool > build > should return an invocation for valid relative paths within root 20ms
   ✓ ReadManyFilesTool > build > should return an invocation for valid glob patterns within root 7ms
   ✓ ReadManyFilesTool > build > should return an invocation for paths trying to escape the root (e.g., ../) as execute handles this 5ms
   ✓ ReadManyFilesTool > build > should return an invocation for absolute paths as execute handles this 6ms
   ✓ ReadManyFilesTool > build > should throw error if paths array is empty 5ms
   ✓ ReadManyFilesTool > build > should return an invocation for valid exclude and include patterns 3ms
   ✓ ReadManyFilesTool > build > should throw error if paths array contains an empty string 9ms
   ✓ ReadManyFilesTool > build > should throw error if include array contains non-string elements 5ms
   ✓ ReadManyFilesTool > build > should throw error if exclude array contains non-string elements 3ms
   ✓ ReadManyFilesTool > execute > should read a single specified file 27ms
   ✓ ReadManyFilesTool > execute > should read multiple specified files 8ms
   ✓ ReadManyFilesTool > execute > should handle glob patterns 8ms
   ✓ ReadManyFilesTool > execute > should respect exclude patterns 6ms
   ✓ ReadManyFilesTool > execute > should handle nonexistent specific files gracefully 4ms
   ✓ ReadManyFilesTool > execute > should use default excludes 7ms
   ✓ ReadManyFilesTool > execute > should NOT use default excludes if useDefaultExcludes is false 10ms
   ✓ ReadManyFilesTool > execute > should include images as inlineData parts if explicitly requested by extension 6ms
   ✓ ReadManyFilesTool > execute > should include images as inlineData parts if explicitly requested by name 6ms
   ✓ ReadManyFilesTool > execute > should skip PDF files if not explicitly requested by extension or name 15ms
   ✓ ReadManyFilesTool > execute > should include PDF files as inlineData parts if explicitly requested by extension 10ms
   ✓ ReadManyFilesTool > execute > should include PDF files as inlineData parts if explicitly requested by name 6ms
   × ReadManyFilesTool > execute > should return error if path is ignored by a .geminiignore pattern 14ms
     → expected '### ReadManyFiles Result (Target Dir:…' not to contain 'foo.bar'
   ✓ ReadManyFilesTool > execute > should read files from multiple workspace directories 10ms
   ✓ ReadManyFilesTool > execute > should add a warning for truncated files 15ms
   ✓ ReadManyFilesTool > execute > should read files with special characters like [] and () in the path 8ms
   ✓ ReadManyFilesTool > execute > should read files with special characters in the name 8ms
   ✓ ReadManyFilesTool > Error handling > should return an INVALID_TOOL_PARAMS error if no paths are provided 7ms
   ✓ ReadManyFilesTool > Error handling > should return a READ_MANY_FILES_SEARCH_ERROR on glob failure 3ms
   ✓ ReadManyFilesTool > Batch Processing > should process files in parallel 57ms
   ✓ ReadManyFilesTool > Batch Processing > should handle batch processing errors gracefully 15ms
   × ReadManyFilesTool > Batch Processing > should execute file operations concurrently 180ms
     → expected 1 to be 3 // Object.is equality
 ❯ src/core/client.test.ts (71 tests | 8 failed | 5 skipped) 517ms
   ✓ findIndexAfterFraction > should throw an error for non-positive numbers 1ms
   ✓ findIndexAfterFraction > should throw an error for a fraction greater than or equal to 1 0ms
   ✓ findIndexAfterFraction > should handle a fraction in the middle 0ms
   ✓ findIndexAfterFraction > should handle a fraction that results in the last index 0ms
   ✓ findIndexAfterFraction > should handle an empty history 0ms
   ✓ findIndexAfterFraction > should handle a history with only one item 0ms
   ✓ findIndexAfterFraction > should handle history with weird parts 0ms
   ✓ Gemini Client (client.ts) > generateEmbedding > should call embedContent and return embeddings for valid input 5ms
   ✓ Gemini Client (client.ts) > generateEmbedding > should return an empty array if an empty array is passed 1ms
   ✓ Gemini Client (client.ts) > generateEmbedding > should throw an error if API response has no embeddings array 1ms
   ✓ Gemini Client (client.ts) > generateEmbedding > should throw an error if API response has an empty embeddings array 1ms
   ✓ Gemini Client (client.ts) > generateEmbedding > should throw an error if API returns a mismatched number of embeddings 2ms
   ✓ Gemini Client (client.ts) > generateEmbedding > should throw an error if any embedding has nullish values 4ms
   ✓ Gemini Client (client.ts) > generateEmbedding > should throw an error if any embedding has an empty values array 1ms
   ✓ Gemini Client (client.ts) > generateEmbedding > should propagate errors from the API call 1ms
   ✓ Gemini Client (client.ts) > generateJson > should call generateContent with the correct parameters 2ms
   ✓ Gemini Client (client.ts) > generateJson > should allow overriding model and config 9ms
   ✓ Gemini Client (client.ts) > addHistory > should call chat.addHistory with the provided content 2ms
   × Gemini Client (client.ts) > resetChat > should create a new chat session, clearing the old history 14ms
     → expected 0 to be greater than 0
   ✓ Gemini Client (client.ts) > tryCompressChat > when compression inflates the token count > uses the truncated history for compression 3ms
   ✓ Gemini Client (client.ts) > tryCompressChat > when compression inflates the token count > allows compression to be forced/manual after a failure 3ms
   ✓ Gemini Client (client.ts) > tryCompressChat > when compression inflates the token count > yields the result even if the compression inflated the tokens 1ms
   ✓ Gemini Client (client.ts) > tryCompressChat > when compression inflates the token count > does not manipulate the source chat 2ms
   ✓ Gemini Client (client.ts) > tryCompressChat > when compression inflates the token count > restores the history back to the original 2ms
   ✓ Gemini Client (client.ts) > tryCompressChat > when compression inflates the token count > will not attempt to compress context after a failure 7ms
   ✓ Gemini Client (client.ts) > tryCompressChat > attempts to compress with a maxOutputTokens set to the original token count 118ms
   ✓ Gemini Client (client.ts) > tryCompressChat > should not trigger summarization if token count is below threshold 2ms
   ✓ Gemini Client (client.ts) > tryCompressChat > placeholder test for removed ClearcutLogger telemetry functionality 1ms
   ✓ Gemini Client (client.ts) > tryCompressChat > should trigger summarization if token count is at threshold with contextPercentageThreshold setting 99ms
   × Gemini Client (client.ts) > tryCompressChat > should not compress across a function call response 3ms
     → expected "spy" to be called at least once
   ✓ Gemini Client (client.ts) > tryCompressChat > should always trigger summarization when force is true, regardless of token count 69ms
   ✓ Gemini Client (client.ts) > tryCompressChat > should use current model from config for token counting after sendMessage 3ms
   ✓ Gemini Client (client.ts) > sendMessageStream > emits a compression event when the context was automatically compressed 5ms
   ✓ Gemini Client (client.ts) > sendMessageStream > does not emit a compression event when the status is 2 3ms
   ✓ Gemini Client (client.ts) > sendMessageStream > does not emit a compression event when the status is 4 2ms
   ✓ Gemini Client (client.ts) > sendMessageStream > does not emit a compression event when the status is 3 8ms
   ✓ Gemini Client (client.ts) > sendMessageStream > should include editor context when ideMode is enabled 3ms
   ✓ Gemini Client (client.ts) > sendMessageStream > should not add context if ideMode is enabled but no open files 2ms
   ✓ Gemini Client (client.ts) > sendMessageStream > should add context if ideMode is enabled and there is one active file 2ms
   ✓ Gemini Client (client.ts) > sendMessageStream > should add context if ideMode is enabled and there are open files but no active file 2ms
   ✓ Gemini Client (client.ts) > sendMessageStream > should return the turn instance after the stream is complete 2ms
   ↓ Gemini Client (client.ts) > sendMessageStream > should stop infinite loop after MAX_TURNS when nextSpeaker always returns model
   ✓ Gemini Client (client.ts) > sendMessageStream > should yield MaxSessionTurns and stop when session turn limit is reached 3ms
   ↓ Gemini Client (client.ts) > sendMessageStream > should respect MAX_TURNS limit even when turns parameter is set to a large value
   ✓ Gemini Client (client.ts) > sendMessageStream > Editor context delta > 'sends delta when active file changes' 2ms
   ✓ Gemini Client (client.ts) > sendMessageStream > Editor context delta > 'sends delta when cursor line changes' 2ms
   ✓ Gemini Client (client.ts) > sendMessageStream > Editor context delta > 'sends delta when cursor character cha…' 2ms
   ✓ Gemini Client (client.ts) > sendMessageStream > Editor context delta > 'sends delta when selected text changes' 2ms
   ✓ Gemini Client (client.ts) > sendMessageStream > Editor context delta > 'sends delta when selected text is add…' 3ms
   ✓ Gemini Client (client.ts) > sendMessageStream > Editor context delta > 'sends delta when selected text is rem…' 2ms
   ✓ Gemini Client (client.ts) > sendMessageStream > Editor context delta > 'does not send context when nothing ch…' 3ms
   ✓ Gemini Client (client.ts) > sendMessageStream > Editor context delta > sends full context when history is cleared, even if editor state is unchanged 2ms
   ✓ Gemini Client (client.ts) > sendMessageStream > IDE context with pending tool calls > should NOT add IDE context when a tool call is pending 12ms
   ✓ Gemini Client (client.ts) > sendMessageStream > IDE context with pending tool calls > should add IDE context when no tool call is pending 3ms
   ✓ Gemini Client (client.ts) > sendMessageStream > IDE context with pending tool calls > should send the latest IDE context on the next message after a skipped context 3ms
   ✓ Gemini Client (client.ts) > sendMessageStream > IDE context with pending tool calls > should send a context DELTA on the next message after a skipped context 3ms
   × Gemini Client (client.ts) > sendMessageStream > should not call checkNextSpeaker when turn.run() yields an error 43ms
     → [AsyncFunction checkNextSpeaker] is not a spy or a call to a spy!
   × Gemini Client (client.ts) > sendMessageStream > should not call checkNextSpeaker when turn.run() yields a value then an error 4ms
     → [AsyncFunction checkNextSpeaker] is not a spy or a call to a spy!
   ↓ Gemini Client (client.ts) > updateModel > should update model in config and reinitialize chat
   × Gemini Client (client.ts) > generateContent > should call generateContent with the correct parameters 5ms
     → [vitest] No "getCoreSystemPrompt" export is defined on the "./prompts.js" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

   × Gemini Client (client.ts) > generateContent > should use current model from config for content generation 3ms
     → mockConfig is not defined
   ↓ Gemini Client (client.ts) > listAvailableModels > should fetch models from API for GEMINI auth type
   ↓ Gemini Client (client.ts) > listAvailableModels > should return OAuth marker for OAuth auth types
   × Gemini Client (client.ts) > handleFlashFallback > should use current model from config when checking for fallback 5ms
     → expected [] to deeply equal [ { …(3) } ]
   × Gemini Client (client.ts) > handleFlashFallback > should return empty array when API call fails 3ms
     → global.fetch.mockRejectedValue is not a function
   ✓ Gemini Client (client.ts) > handleFlashFallback > should return empty array for unsupported auth type 2ms
   ✓ Gemini Client (client.ts) > setHistory > should strip thought signatures when stripThoughts is true 7ms
   ✓ Gemini Client (client.ts) > setHistory > should not strip thought signatures when stripThoughts is false 4ms
   ✓ Gemini Client (client.ts) > setHistory > should store history for later use when chat is not initialized 2ms
   ✓ Gemini Client (client.ts) > setHistory > should update chat immediately when chat is initialized 3ms
   ✓ Gemini Client (client.ts) > setHistory > should reset IDE context tracking when history changes 4ms
 ❯ src/providers/integration/multi-provider.integration.test.ts (11 tests | 1 failed | 1 skipped) 635ms
   ✓ Multi-Provider Integration Tests > Provider Management > should initialize and register OpenAI provider 0ms
   ✓ Multi-Provider Integration Tests > Provider Management > should switch between providers and Gemini 0ms
   ✓ Multi-Provider Integration Tests > Provider Management > should handle errors for invalid provider 0ms
   ✓ Multi-Provider Integration Tests > Model Management > should list available models from OpenAI 0ms
   ✓ Multi-Provider Integration Tests > Model Management > should switch between models within provider 0ms
   ✓ Multi-Provider Integration Tests > Chat Completion with Real API > should generate chat completion with default model 0ms
   ✓ Multi-Provider Integration Tests > Chat Completion with Real API > should handle streaming correctly 0ms
   ↓ Multi-Provider Integration Tests > Chat Completion with Real API > should work with a specific model
   ✓ Multi-Provider Integration Tests > Chat Completion with Real API > should handle tool calls 0ms
   ✓ Multi-Provider Integration Tests > Error Handling > should handle invalid model gracefully 0ms
   × Multi-Provider Integration Tests > Error Handling > should handle missing API key 632ms
     → expected 'expected 0 to be greater than 0' to match /authentication|API key/i
 ✓ src/integration/compression-duplicate-ids.test.ts (2 tests) 414ms
 ✓ src/services/history/compression-locking.test.ts (4 tests) 313ms
 ✓ src/prompt-config/prompt-loader.test.ts (44 tests) 837ms
   ✓ PromptLoader > watchFiles > should notify on file changes  327ms
 ✓ src/services/history/orphaned-tools-comprehensive.test.ts (9 tests | 4 skipped) 319ms
 ✓ src/tools/ripGrep.test.ts (36 tests) 343ms
 ✓ src/prompt-config/prompt-installer.test.ts (47 tests) 251ms
 ✓ src/services/history/circular-reference.test.ts (4 tests) 326ms
 ✓ src/utils/filesearch/fileSearch.test.ts (27 tests) 152ms
 ✓ src/tools/grep.test.ts (24 tests) 217ms
 ✓ src/services/history/HistoryService.test.ts (20 tests) 1301ms
 ✓ src/auth/token-store.spec.ts (20 tests) 103ms
 ✓ src/prompt-config/prompt-resolver.test.ts (56 tests) 160ms
 ✓ src/prompt-config/prompt-service.test.ts (43 tests) 1814ms
 ✓ src/services/loopDetectionService.test.ts (35 tests) 268ms
 ✓ src/tools/read-file.test.ts (34 tests) 217ms
 ✓ src/utils/bfsFileSearch.test.ts (11 tests) 125ms
 ✓ src/tools/glob.test.ts (34 tests) 1841ms
 ✓ src/services/history/findfiles-circular.test.ts (2 tests) 172ms
 ✓ src/core/logger.test.ts (38 tests) 193ms
 ✓ src/mcp/oauth-provider.test.ts (19 tests) 133ms
 ✓ src/debug/DebugLogger.test.ts (36 tests | 1 skipped) 131ms
 ✓ src/utils/filesearch/crawler.test.ts (18 tests) 84ms
 ✓ src/utils/memoryDiscovery.test.ts (14 tests) 197ms
 ✓ src/services/gitService.test.ts (14 tests) 91ms
 ✓ src/filters/EmojiFilter.property.test.ts (30 tests) 102ms
 ✓ src/utils/fileUtils.test.ts (40 tests) 98ms
 ✓ src/utils/flashFallback.integration.test.ts (4 tests) 147ms
 ✓ src/core/prompts-async.test.ts (9 tests | 1 skipped) 110ms
 ✓ src/tools/edit.test.ts (43 tests) 107ms
 ✓ src/services/fileDiscoveryService.test.ts (13 tests) 110ms
 ✓ src/config/config.test.ts (46 tests) 249ms
 ✓ src/utils/gitIgnoreParser.test.ts (18 tests) 52ms
 ✓ src/tools/write-file.test.ts (28 tests) 81ms
 ✓ src/utils/userAccountManager.test.ts (23 tests) 25ms
 ✓ src/tools/mcp-tool.test.ts (33 tests) 38ms
 ✓ src/utils/getFolderStructure.test.ts (15 tests) 123ms
 ✓ src/utils/errorReporting.test.ts (6 tests) 32ms
 ✓ src/utils/workspaceContext.test.ts (34 tests) 42ms
 ✓ src/services/shellExecutionService.test.ts (30 tests) 42ms
 ✓ src/tools/modifiable-tool.test.ts (11 tests) 33ms
 ✓ src/tools/todo-store.test.ts (12 tests) 29ms
 ✓ src/core/prompts.test.ts (6 tests) 51ms
 ✓ src/providers/anthropic/AnthropicProvider.oauth.test.ts (10 tests) 41ms
 ✓ src/tools/memoryTool.test.ts (19 tests) 34ms
 ✓ src/providers/anthropic/AnthropicProvider.test.ts (11 tests) 65ms
 ✓ src/tools/web-fetch.integration.test.ts (22 tests) 65ms
 ✓ src/utils/editor.test.ts (108 tests) 19ms
 ✓ src/utils/memoryImportProcessor.test.ts (23 tests) 20ms
 ✓ src/telemetry/metrics.test.ts (11 tests) 41ms
 ✓ src/auth/oauth-errors.spec.ts (38 tests | 2 skipped) 21ms
 ✓ src/utils/schemaValidator.test.ts (7 tests) 24ms
 ✓ src/utils/environmentContext.test.ts (8 tests) 23ms
 ✓ src/ide/process-utils.test.ts (5 tests) 7ms
 ✓ src/utils/retry.test.ts (13 tests) 29ms
 ✓ src/services/ClipboardService.test.ts (7 tests) 16ms
 ✓ src/telemetry/uiTelemetry.test.ts (19 tests) 28ms
 ✓ src/utils/filesearch/ignore.test.ts (12 tests) 14ms
 ✓ src/filters/EmojiFilter.test.ts (64 tests) 12ms
 ✓ src/debug/ConfigurationManager.test.ts (25 tests) 11ms
 ✓ src/core/coreToolScheduler.test.ts (24 tests | 6 skipped) 28ms
 ✓ src/tools/web-search.test.ts (9 tests) 33ms
 ✓ src/tools/shell.multibyte.test.ts (1 test) 19ms
 ✓ src/filters/EmojiFilter.consistency.test.ts (58 tests) 15ms
 ✓ src/core/subagent.test.ts (19 tests) 25ms
 ✓ src/core/geminiChat.test.ts (27 tests) 5265ms
   ✓ GeminiChat > sendMessageStream with retries > should retry on invalid content and succeed on the second attempt  565ms
   ✓ GeminiChat > sendMessageStream with retries > should fail after all retries on persistent invalid content  1504ms
   ✓ GeminiChat > should correctly retry and append to an existing history mid-conversation  565ms
   ✓ GeminiChat > should retry if the model returns a completely empty stream (no chunks)  563ms
 ✓ src/prompt-config/prompt-cache.test.ts (42 tests) 14ms
 ✓ src/parsers/TextToolCallParser.test.ts (15 tests) 15ms
 ✓ src/utils/summarizer.test.ts (8 tests) 17ms
 ✓ src/mcp/file-token-store.test.ts (26 tests) 8ms
 ✓ src/tools/mcp-client.test.ts (42 tests) 14ms
 ✓ src/code_assist/server.test.ts (7 tests) 13ms
 ✓ src/config/flashFallback.test.ts (6 tests) 10ms
 ✓ src/tools/todo-schemas.test.ts (26 tests) 8ms
 ✓ src/utils/editCorrector.test.ts (40 tests) 14ms
 ✓ src/telemetry/loggers.test.ts (13 tests) 9ms
 ✓ src/config/profileManager.test.ts (17 tests) 11ms
 ✓ src/tools/todo-write.test.ts (19 tests) 9ms
 ✓ src/auth/auth-integration.spec.ts (11 tests) 8ms
 ✓ src/providers/openai/parseResponsesStream.responsesToolCalls.test.ts (7 tests) 8ms
 ✓ src/tools/todo-read.test.ts (13 tests) 7ms
 ✓ src/utils/systemEncoding.test.ts (38 tests) 10ms
 ✓ src/providers/openai/buildResponsesRequest.test.ts (22 tests) 7ms
 ✓ src/debug/FileOutput.test.ts (15 tests) 9ms
 ✓ src/tools/tool-registry.test.ts (13 tests) 11ms
 ✓ src/utils/secure-browser-launcher.test.ts (14 tests) 7ms
 ✓ src/services/history/ContentConverters.test.ts (30 tests) 6ms
 ✓ src/services/fileSystemService.test.ts (3 tests) 3ms
 ✓ src/utils/filesearch/crawlCache.test.ts (9 tests) 5ms
 ✓ src/core/turn.test.ts (13 tests) 7ms
 ✓ src/integration-tests/settings-remediation.test.ts (14 tests) 7ms
 ✓ test/settings/SettingsService.spec.ts (31 tests) 6ms
 ✓ src/providers/ProviderManager.test.ts (23 tests) 6ms
 ✓ src/providers/BaseProvider.test.ts (19 tests) 7ms
 ✓ src/mcp/oauth-utils.test.ts (21 tests) 6ms
 ✓ src/telemetry/telemetry.test.ts (2 tests) 12ms
 ✓ src/prompt-config/TemplateEngine.test.ts (29 tests) 6ms
 ✓ src/auth/precedence.test.ts (19 tests) 6ms
 ✓ src/mcp/google-auth-provider.test.ts (4 tests) 5ms
 ✓ src/services/shellExecutionService.windows.multibyte.test.ts (5 tests | 1 skipped) 6ms
 ✓ src/config/endpoints.test.ts (26 tests) 5ms
 ✓ src/ide/ideContext.test.ts (16 tests) 6ms
 ✓ src/code_assist/setup.test.ts (7 tests) 5ms
 ✓ src/config/storage.test.ts (16 tests) 3ms
 ✓ src/mcp/oauth-token-storage.test.ts (20 tests) 5ms
 ✓ src/providers/openai/openai-oauth.spec.ts (24 tests) 8ms
 ✓ src/utils/shell-utils.test.ts (49 tests) 9ms
 ✓ src/utils/installationManager.test.ts (4 tests) 5ms
 ✓ src/utils/sanitization.test.ts (14 tests) 3ms
 ✓ src/integration-tests/profile-integration.test.ts (4 tests) 5ms
 ✓ src/utils/generateContentResponseUtilities.test.ts (36 tests) 4ms
 ✓ src/utils/filesearch/result-cache.test.ts (3 tests) 3ms
 ✓ src/tools/ToolFormatter.test.ts (10 tests) 7ms
 ✓ src/utils/errorParsing.test.ts (21 tests) 8ms
 ✓ src/utils/toolOutputLimiter.test.ts (14 tests) 4ms
 ✓ src/mcp/token-store.test.ts (23 tests) 4ms
 ✓ src/utils/paths.test.ts (55 tests) 4ms
 ✓ src/services/shellExecutionService.multibyte.test.ts (2 tests) 7ms
 ✓ src/core/contentGenerator.test.ts (7 tests) 6ms
 ✓ src/tools/tools.test.ts (11 tests) 5ms
 ✓ src/integration-tests/provider-settings-integration.spec.ts (4 tests) 4ms
 ✓ src/core/googleGenAIWrapper.test.ts (3 tests) 4ms
 ✓ src/utils/shell-utils.shellReplacement.test.ts (14 tests) 6ms
 ✓ src/config/config.alwaysAllow.test.ts (9 tests) 4ms
 ✓ src/ide/detect-ide.test.ts (22 tests) 7ms
 ✓ src/tools/diffOptions.test.ts (9 tests) 3ms
 ✓ src/hooks/tool-render-suppression-hook.test.ts (2 tests) 2ms
 ✓ src/utils/unicodeUtils.test.ts (15 tests) 7ms
 ✓ src/code_assist/converter.test.ts (21 tests) 4ms
 ✓ src/services/tool-call-tracker-service.test.ts (5 tests) 3ms
 ✓ src/providers/openai/estimateRemoteTokens.test.ts (10 tests) 3ms
 ✓ src/tools/ToolFormatter.toResponsesTool.test.ts (6 tests) 3ms
 ✓ src/config/config.ephemeral.test.ts (9 tests) 4ms
 ✓ src/providers/openai/buildResponsesRequest.undefined.test.ts (3 tests) 3ms
 ✓ test/settings/model-diagnostics.test.ts (5 tests) 3ms
 ✓ src/utils/partUtils.test.ts (23 tests) 3ms
 ✓ src/integration-tests/todo-system.test.ts (1 test) 4ms
 ✓ src/code_assist/oauth2.test.ts (3 tests) 2ms
 ✓ src/providers/openai/buildResponsesRequest.stripToolCalls.test.ts (3 tests) 3ms
 ✓ src/utils/safeJsonStringify.test.ts (8 tests) 2ms
 ✓ src/core/tokenLimits.test.ts (15 tests) 2ms
 ✓ src/parsers/TextToolCallParser.multibyte.test.ts (1 test) 2ms
 ✓ src/providers/openai/ConversationCache.accumTokens.test.ts (9 tests) 2ms
 ✓ src/providers/openai/__tests__/formatArrayResponse.test.ts (13 tests) 2ms
 ✓ src/index.test.ts (1 test) 1ms
 ✓ src/providers/gemini/GeminiProvider.test.ts (7 tests) 2ms
 ✓ src/providers/openai/parseResponsesStream.test.ts (11 tests | 5 skipped) 3ms
 ✓ src/providers/gemini/GeminiProvider.e2e.test.ts (3 tests) 2ms
 ✓ src/providers/ProviderManager.gemini-switch.test.ts (3 tests) 3ms
 ✓ src/code_assist/oauth2.e2e.test.ts (1 test) 1ms
 ↓ src/services/shellExecutionService.windows.test.ts (3 tests | 3 skipped)
 ✓ src/providers/anthropic/AnthropicProvider.modelParams.test.ts (6 tests) 3ms
 ✓ src/tools/mcp-client-manager.test.ts (1 test) 2ms
 ✓ src/utils/tool-utils.test.ts (7 tests) 2ms
 ↓ src/services/history/orphaned-tools.test.ts (6 tests | 6 skipped)
 ✓ src/core/__tests__/compression-logic.test.ts (1 test) 2ms
 ✓ src/core/__tests__/compression.test.ts (1 test) 2ms
 ↓ src/utils/nextSpeakerChecker.test.ts (10 tests | 10 skipped)
 ↓ src/providers/openai/OpenAIProvider.callResponses.stateless.test.ts (5 tests | 5 skipped)
 ↓ src/providers/openai/OpenAIProvider.integration.test.ts (3 tests | 3 skipped)
 ↓ src/providers/openai/OpenAIProvider.responsesIntegration.test.ts (6 tests | 6 skipped)
 ↓ src/providers/openai/ResponsesContextTrim.integration.test.ts (4 tests | 4 skipped)
 ✓ src/providers/openai/OpenAIProvider.stateful.integration.test.ts (2 tests | 1 skipped) 18903ms
   ✓ OpenAIProvider Stateful Integration > should not break stateless models by correctly passing full message history  18901ms
 ✓ src/auth/qwen-device-flow.spec.ts (24 tests) 41528ms
   ✓ QwenDeviceFlow - Behavioral Tests > Device Flow Initiation > should use correct Qwen authorization endpoint  1296ms
   ✓ QwenDeviceFlow - Behavioral Tests > Token Polling > should poll for token until authorization completes  10021ms
   ✓ QwenDeviceFlow - Behavioral Tests > Token Polling > should use correct Qwen token endpoint  1369ms
   ✓ QwenDeviceFlow - Behavioral Tests > Token Polling > should respect server-specified polling interval  10011ms
   ✓ QwenDeviceFlow - Behavioral Tests > Error Handling > should handle network failures with retry logic  18762ms

⎯⎯⎯⎯⎯⎯ Failed Tests 38 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  src/core/atomic-compression.test.ts > Atomic Compression > should skip compression when tool calls are pending
TypeError: this.getChat(...).getHistory is not a function
 ❯ GeminiClient.tryCompressChat src/core/client.ts:1016:43
    1014|     }
    1015| 
    1016|     const curatedHistory = this.getChat().getHistory(true);
       |                                           ^
    1017| 
    1018|     // Regardless of `force`, don't do anything if the history is empt…
 ❯ src/core/atomic-compression.test.ts:128:20

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/38]⎯

 FAIL  src/core/client.test.ts > Gemini Client (client.ts) > resetChat > should create a new chat session, clearing the old history
AssertionError: expected 0 to be greater than 0
 ❯ src/core/client.test.ts:602:44
    600|       });
    601|       const historyWithOldMessage = await client.getHistory();
    602|       expect(historyWithOldMessage.length).toBeGreaterThan(
       |                                            ^
    603|         initialHistory.length,
    604|       );

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/38]⎯

 FAIL  src/core/client.test.ts > Gemini Client (client.ts) > tryCompressChat > should not compress across a function call response
AssertionError: expected "spy" to be called at least once
 ❯ src/core/client.test.ts:887:31
    885| 
    886|       expect(tokenLimit).toHaveBeenCalled();
    887|       expect(mockSendMessage).toHaveBeenCalled();
       |                               ^
    888| 
    889|       // Assert that summarization happened and returned the correct s…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/38]⎯

 FAIL  src/core/client.test.ts > Gemini Client (client.ts) > sendMessageStream > should not call checkNextSpeaker when turn.run() yields an error
TypeError: [AsyncFunction checkNextSpeaker] is not a spy or a call to a spy!
 ❯ src/core/client.test.ts:2273:40
    2271| 
    2272|       // Assert
    2273|       expect(mockCheckNextSpeaker).not.toHaveBeenCalled();
       |                                        ^
    2274|     });
    2275| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/38]⎯

 FAIL  src/core/client.test.ts > Gemini Client (client.ts) > sendMessageStream > should not call checkNextSpeaker when turn.run() yields a value then an error
TypeError: [AsyncFunction checkNextSpeaker] is not a spy or a call to a spy!
 ❯ src/core/client.test.ts:2315:40
    2313| 
    2314|       // Assert
    2315|       expect(mockCheckNextSpeaker).not.toHaveBeenCalled();
       |                                        ^
    2316|     });
    2317|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/38]⎯

 FAIL  src/core/client.test.ts > Gemini Client (client.ts) > generateContent > should call generateContent with the correct parameters
Error: [vitest] No "getCoreSystemPrompt" export is defined on the "./prompts.js" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

vi[33m.[39m[34mmock[39m([35mimport[39m([32m"./prompts.js"[39m)[33m,[39m [35masync[39m (importOriginal) [33m=>[39m {
  [35mconst[39m actual [33m=[39m [35mawait[39m [34mimportOriginal[39m()
  [35mreturn[39m {
    [33m...[39mactual[33m,[39m
    [90m// your mocked methods[39m
  }
})

 ❯ src/core/client.test.ts:2365:32
    2363|           config: {
    2364|             abortSignal,
    2365|             systemInstruction: getCoreSystemPrompt(''),
       |                                ^
    2366|             temperature: 0.5,
    2367|             topP: 1,

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/38]⎯

 FAIL  src/core/client.test.ts > Gemini Client (client.ts) > generateContent > should use current model from config for content generation
ReferenceError: mockConfig is not defined
 ❯ src/core/client.test.ts:2386:26
    2384|         generateContent: mockGenerateContentFn,
    2385|       };
    2386|       client['config'] = mockConfig as unknown as Config;
       |                          ^
    2387| 
    2388|       // Mock the content generator and chat

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/38]⎯

 FAIL  src/core/client.test.ts > Gemini Client (client.ts) > handleFlashFallback > should use current model from config when checking for fallback
AssertionError: expected [] to deeply equal [ { …(3) } ]

[32m- Expected[39m
[31m+ Received[39m

[32m- [[39m
[32m-   {[39m
[32m-     "description": "Model listing is not available with OAuth authentication",[39m
[32m-     "displayName": "OAuth Authentication",[39m
[32m-     "name": "oauth-not-supported",[39m
[32m-   },[39m
[32m- ][39m
[31m+ [][39m

 ❯ src/core/client.test.ts:2480:22
    2478| 
    2479|       // Assert
    2480|       expect(models).toEqual([
       |                      ^
    2481|         {
    2482|           name: 'oauth-not-supported',

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/38]⎯

 FAIL  src/core/client.test.ts > Gemini Client (client.ts) > handleFlashFallback > should return empty array when API call fails
TypeError: global.fetch.mockRejectedValue is not a function
 ❯ src/core/client.test.ts:2500:41
    2498|       client['config'] = mockConfig as unknown as Config;
    2499| 
    2500|       (global.fetch as unknown as Mock).mockRejectedValue(
       |                                         ^
    2501|         new Error('Network error'),
    2502|       );

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/38]⎯

 FAIL  src/core/nonInteractiveToolExecutor.test.ts > executeToolCall > should execute a tool successfully
AssertionError: expected "spy" to be called with arguments: [ { param1: 'value1' } ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/core/nonInteractiveToolExecutor.test.ts:72:32
     70| 
     71|     expect(mockToolRegistry.getTool).toHaveBeenCalledWith('testTool');
     72|     expect(mockTool.executeFn).toHaveBeenCalledWith(request.args);
       |                                ^
     73|     expect(response).toStrictEqual({
     74|       callId: 'call1',

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/38]⎯

 FAIL  src/core/nonInteractiveToolExecutor.test.ts > executeToolCall > should return an error if tool is not found
AssertionError: expected { callId: 'call2', …(4) } to strictly equal { callId: 'call2', …(4) }

[32m- Expected[39m
[31m+ Received[39m

[2m  {[22m
[2m    "callId": "call2",[22m
[2m    "error": Error {[22m
[32m-     "message": "Tool \"nonexistentTool\" not found in registry. Tools must use the exact names that are registered. Did you mean one of: \"testTool\", \"anotherTool\"?",[39m
[31m+     "message": "Tool \"nonexistentTool\" not found in registry.",[39m
[2m    },[22m
[2m    "errorType": "tool_not_registered",[22m
[2m    "responseParts": [[22m
[2m      {[22m
[31m+       "functionCall": {[39m
[31m+         "args": {},[39m
[31m+         "id": "call2",[39m
[31m+         "name": "nonexistentTool",[39m
[31m+       },[39m
[31m+     },[39m
[31m+     {[39m
[2m        "functionResponse": {[22m
[2m          "id": "call2",[22m
[2m          "name": "nonexistentTool",[22m
[2m          "response": {[22m
[32m-           "error": "Tool \"nonexistentTool\" not found in registry. Tools must use the exact names that are registered. Did you mean one of: \"testTool\", \"anotherTool\"?",[39m
[31m+           "error": "Tool \"nonexistentTool\" not found in registry.",[39m
[2m          },[22m
[2m        },[22m
[2m      },[22m
[2m    ],[22m
[32m-   "resultDisplay": "Tool \"nonexistentTool\" not found in registry. Tools must use the exact names that are registered. Did you mean one of: \"testTool\", \"anotherTool\"?",[39m
[31m+   "resultDisplay": "Tool \"nonexistentTool\" not found in registry.",[39m
[2m  }[22m

 ❯ src/core/nonInteractiveToolExecutor.test.ts:112:22
    110|     const expectedErrorMessage =
    111|       'Tool "nonexistentTool" not found in registry. Tools must use th…
    112|     expect(response).toStrictEqual({
       |                      ^
    113|       callId: 'call2',
    114|       error: new Error(expectedErrorMessage),

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/38]⎯

 FAIL  src/core/nonInteractiveToolExecutor.test.ts > executeToolCall > should return an error if tool validation fails
AssertionError: expected { callId: 'call3', …(4) } to strictly equal { callId: 'call3', …(4) }

[32m- Expected[39m
[31m+ Received[39m

[2m  {[22m
[2m    "callId": "call3",[22m
[32m-   "error": Error {[39m
[32m-     "message": "Invalid parameters",[39m
[31m+   "error": TypeError {[39m
[31m+     "message": "config.getEphemeralSetting is not a function",[39m
[2m    },[22m
[32m-   "errorType": "invalid_tool_params",[39m
[31m+   "errorType": "unhandled_exception",[39m
[2m    "responseParts": [[22m
[2m      {[22m
[31m+       "functionCall": {[39m
[31m+         "args": {[39m
[31m+           "param1": "invalid",[39m
[31m+         },[39m
[31m+         "id": "call3",[39m
[31m+         "name": "testTool",[39m
[31m+       },[39m
[31m+     },[39m
[31m+     {[39m
[2m        "functionResponse": {[22m
[2m          "id": "call3",[22m
[2m          "name": "testTool",[22m
[2m          "response": {[22m
[32m-           "error": "Invalid parameters",[39m
[31m+           "error": "config.getEphemeralSetting is not a function",[39m
[2m          },[22m
[2m        },[22m
[2m      },[22m
[2m    ],[22m
[32m-   "resultDisplay": "Invalid parameters",[39m
[31m+   "resultDisplay": "config.getEphemeralSetting is not a function",[39m
[2m  }[22m

 ❯ src/core/nonInteractiveToolExecutor.test.ts:150:22
    148|     );
    149| 
    150|     expect(response).toStrictEqual({
       |                      ^
    151|       callId: 'call3',
    152|       error: new Error('Invalid parameters'),

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/38]⎯

 FAIL  src/core/nonInteractiveToolExecutor.test.ts > executeToolCall > should return an error if tool execution fails
AssertionError: expected { callId: 'call4', …(4) } to strictly equal { callId: 'call4', …(4) }

[32m- Expected[39m
[31m+ Received[39m

[2m  {[22m
[2m    "callId": "call4",[22m
[32m-   "error": Error {[39m
[32m-     "message": "Execution failed",[39m
[31m+   "error": TypeError {[39m
[31m+     "message": "config.getEphemeralSetting is not a function",[39m
[2m    },[22m
[32m-   "errorType": "execution_failed",[39m
[31m+   "errorType": "unhandled_exception",[39m
[2m    "responseParts": [[22m
[2m      {[22m
[31m+       "functionCall": {[39m
[31m+         "args": {[39m
[31m+           "param1": "value1",[39m
[31m+         },[39m
[31m+         "id": "call4",[39m
[31m+         "name": "testTool",[39m
[31m+       },[39m
[31m+     },[39m
[31m+     {[39m
[2m        "functionResponse": {[22m
[2m          "id": "call4",[22m
[2m          "name": "testTool",[22m
[2m          "response": {[22m
[32m-           "error": "Execution failed",[39m
[31m+           "error": "config.getEphemeralSetting is not a function",[39m
[2m          },[22m
[2m        },[22m
[2m      },[22m
[2m    ],[22m
[32m-   "resultDisplay": "Execution failed",[39m
[31m+   "resultDisplay": "config.getEphemeralSetting is not a function",[39m
[2m  }[22m

 ❯ src/core/nonInteractiveToolExecutor.test.ts:193:22
    191|       abortController.signal,
    192|     );
    193|     expect(response).toStrictEqual({
       |                      ^
    194|       callId: 'call4',
    195|       error: new Error('Execution failed'),

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/38]⎯

 FAIL  src/core/nonInteractiveToolExecutor.test.ts > executeToolCall > should return an unhandled exception error if execution throws
AssertionError: expected { callId: 'call5', …(4) } to strictly equal { callId: 'call5', …(4) }

[32m- Expected[39m
[31m+ Received[39m

[2m  {[22m
[2m    "callId": "call5",[22m
[32m-   "error": Error {[39m
[32m-     "message": "Something went very wrong",[39m
[31m+   "error": TypeError {[39m
[31m+     "message": "config.getEphemeralSetting is not a function",[39m
[2m    },[22m
[2m    "errorType": "unhandled_exception",[22m
[2m    "responseParts": [[22m
[2m      {[22m
[31m+       "functionCall": {[39m
[31m+         "args": {[39m
[31m+           "param1": "value1",[39m
[31m+         },[39m
[31m+         "id": "call5",[39m
[31m+         "name": "testTool",[39m
[31m+       },[39m
[31m+     },[39m
[31m+     {[39m
[2m        "functionResponse": {[22m
[2m          "id": "call5",[22m
[2m          "name": "testTool",[22m
[2m          "response": {[22m
[32m-           "error": "Something went very wrong",[39m
[31m+           "error": "config.getEphemeralSetting is not a function",[39m
[2m          },[22m
[2m        },[22m
[2m      },[22m
[2m    ],[22m
[32m-   "resultDisplay": "Something went very wrong",[39m
[31m+   "resultDisplay": "config.getEphemeralSetting is not a function",[39m
[2m  }[22m

 ❯ src/core/nonInteractiveToolExecutor.test.ts:231:22
    229|     );
    230| 
    231|     expect(response).toStrictEqual({
       |                      ^
    232|       callId: 'call5',
    233|       error: new Error('Something went very wrong'),

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[14/38]⎯

 FAIL  src/core/nonInteractiveToolExecutor.test.ts > executeToolCall > should correctly format llmContent with inlineData
AssertionError: expected { callId: 'call6', …(4) } to strictly equal { callId: 'call6', …(4) }

[32m- Expected[39m
[31m+ Received[39m

[2m  {[22m
[2m    "callId": "call6",[22m
[32m-   "error": undefined,[39m
[32m-   "errorType": undefined,[39m
[31m+   "error": TypeError {[39m
[31m+     "message": "config.getEphemeralSetting is not a function",[39m
[31m+   },[39m
[31m+   "errorType": "unhandled_exception",[39m
[2m    "responseParts": [[22m
[2m      {[22m
[31m+       "functionCall": {[39m
[31m+         "args": {},[39m
[31m+         "id": "call6",[39m
[31m+         "name": "testTool",[39m
[31m+       },[39m
[31m+     },[39m
[31m+     {[39m
[2m        "functionResponse": {[22m
[2m          "id": "call6",[22m
[2m          "name": "testTool",[22m
[2m          "response": {[22m
[32m-           "output": "Binary content of type image/png was processed.",[39m
[31m+           "error": "config.getEphemeralSetting is not a function",[39m
[2m          },[22m
[2m        },[22m
[2m      },[22m
[32m-     {[39m
[32m-       "inlineData": {[39m
[32m-         "data": "base64data",[39m
[32m-         "mimeType": "image/png",[39m
[32m-       },[39m
[32m-     },[39m
[2m    ],[22m
[32m-   "resultDisplay": "Image processed",[39m
[31m+   "resultDisplay": "config.getEphemeralSetting is not a function",[39m
[2m  }[22m

 ❯ src/core/nonInteractiveToolExecutor.test.ts:272:22
    270|     );
    271| 
    272|     expect(response).toStrictEqual({
       |                      ^
    273|       callId: 'call6',
    274|       error: undefined,

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[15/38]⎯

 FAIL  src/ide/ide-client.test.ts > IdeClient > connect > should connect using HTTP when port is provided in config file
AssertionError: expected "StreamableHTTPClientTransport" to be called with arguments: [ URL{}, Any<Object> ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/ide/ide-client.test.ts:114:45
    112|         'utf8',
    113|       );
    114|       expect(StreamableHTTPClientTransport).toHaveBeenCalledWith(
       |                                             ^
    115|         new URL('http://localhost:8080/mcp'),
    116|         expect.any(Object),

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[16/38]⎯

 FAIL  src/ide/ide-client.test.ts > IdeClient > connect > should connect using stdio when stdio config is provided in file
AssertionError: expected "StdioClientTransport" to be called with arguments: [ { command: 'test-cmd', …(1) } ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/ide/ide-client.test.ts:131:36
    129|       await ideClient.connect();
    130| 
    131|       expect(StdioClientTransport).toHaveBeenCalledWith({
       |                                    ^
    132|         command: 'test-cmd',
    133|         args: ['--foo'],

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[17/38]⎯

 FAIL  src/ide/ide-client.test.ts > IdeClient > connect > should prioritize port over stdio when both are in config file
AssertionError: expected "StreamableHTTPClientTransport" to be called at least once
 ❯ src/ide/ide-client.test.ts:151:45
    149|       await ideClient.connect();
    150| 
    151|       expect(StreamableHTTPClientTransport).toHaveBeenCalled();
       |                                             ^
    152|       expect(StdioClientTransport).not.toHaveBeenCalled();
    153|       expect(ideClient.getConnectionStatus().status).toBe(

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[18/38]⎯

 FAIL  src/ide/ide-client.test.ts > IdeClient > connect > should connect using HTTP when port is provided in environment variables
AssertionError: expected "StreamableHTTPClientTransport" to be called with arguments: [ URL{}, Any<Object> ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/ide/ide-client.test.ts:167:45
    165|       await ideClient.connect();
    166| 
    167|       expect(StreamableHTTPClientTransport).toHaveBeenCalledWith(
       |                                             ^
    168|         new URL('http://localhost:9090/mcp'),
    169|         expect.any(Object),

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[19/38]⎯

 FAIL  src/ide/ide-client.test.ts > IdeClient > connect > should connect using stdio when stdio config is in environment variables
AssertionError: expected "StdioClientTransport" to be called with arguments: [ { command: 'env-cmd', …(1) } ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/ide/ide-client.test.ts:187:36
    185|       await ideClient.connect();
    186| 
    187|       expect(StdioClientTransport).toHaveBeenCalledWith({
       |                                    ^
    188|         command: 'env-cmd',
    189|         args: ['--bar'],

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[20/38]⎯

 FAIL  src/ide/ide-client.test.ts > IdeClient > connect > should prioritize file config over environment variables
AssertionError: expected "StreamableHTTPClientTransport" to be called with arguments: [ URL{}, Any<Object> ][90m

Number of calls: [1m0[22m
[39m
 ❯ src/ide/ide-client.test.ts:205:45
    203|       await ideClient.connect();
    204| 
    205|       expect(StreamableHTTPClientTransport).toHaveBeenCalledWith(
       |                                             ^
    206|         new URL('http://localhost:8080/mcp'),
    207|         expect.any(Object),

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[21/38]⎯

 FAIL  src/ide/ide-installer.test.ts > ide-installer > VsCodeInstaller > install > installs the extension using code cli
AssertionError: expected "execSync" to be called with arguments: [ …(2) ][90m

Received: 

[1m  1st execSync call:

[22m[2m  [[22m
[32m-   "\"code\" --install-extension google.gemini-cli-vscode-ide-companion --force",[90m
[31m+   "command -v code",[90m
[2m    {[22m
[32m-     "stdio": "pipe",[90m
[31m+     "stdio": "ignore",[90m
[2m    },[22m
[2m  ][22m

[1m  2nd execSync call:

[22m[2m  [[22m
[32m-   "\"code\" --install-extension google.gemini-cli-vscode-ide-companion --force",[90m
[31m+   "\"code\" --install-extension vybestack.llxprt-code-vscode-ide-companion --force",[90m
[2m    {[22m
[2m      "stdio": "pipe",[22m
[2m    },[22m
[2m  ][22m
[39m[90m

Number of calls: [1m2[22m
[39m
 ❯ src/ide/ide-installer.test.ts:100:40
     98|         });
     99|         await installer.install();
    100|         expect(child_process.execSync).toHaveBeenCalledWith(
       |                                        ^
    101|           '"code" --install-extension google.gemini-cli-vscode-ide-com…
    102|           { stdio: 'pipe' },

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[22/38]⎯

 FAIL  src/tools/ls.test.ts > LSTool > execute > should respect llxprtignore patterns
AssertionError: expected 'Listed 2 item(s). (1 gemini-ignored)' to be 'Listed 2 item(s). (1 llxprt-ignored)' // Object.is equality

Expected: [32m"Listed 2 item(s). (1 [7mllxprt[27m-ignored)"[39m
Received: [31m"Listed 2 item(s). (1 [7mgemini[27m-ignored)"[39m

 ❯ src/tools/ls.test.ts:278:36
    276|       expect(result.llmContent).toContain('file2.js');
    277|       expect(result.llmContent).not.toContain('private.js');
    278|       expect(result.returnDisplay).toBe('Listed 2 item(s). (1 llxprt-i…
       |                                    ^
    279|     });
    280| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[23/38]⎯

 FAIL  src/tools/read-many-files.test.ts > ReadManyFilesTool > execute > should return error if path is ignored by a .geminiignore pattern
AssertionError: expected '### ReadManyFiles Result (Target Dir:…' not to contain 'foo.bar'

[32m- Expected[39m
[31m+ Received[39m

[32m- foo.bar[39m
[31m+ ### ReadManyFiles Result (Target Dir: `/private/var/folders/9v/l7wpbxmx1lz338tpwz3lh0nh0000gn/T/read-many-files-root-q9srXf`)[39m
[31m+[39m
[31m+ Successfully read and concatenated content from **3 file(s)** (approximately 79 tokens).[39m
[31m+[39m
[31m+ **Processed Files:**[39m
[31m+ - `bar.ts`[39m
[31m+ - `foo.bar`[39m
[31m+ - `foo.quux`[39m

 ❯ src/tools/read-many-files.test.ts:472:40
    470|       const invocation = tool.build(params);
    471|       const result = await invocation.execute(new AbortController().si…
    472|       expect(result.returnDisplay).not.toContain('foo.bar');
       |                                        ^
    473|       expect(result.returnDisplay).not.toContain('foo.quux');
    474|       expect(result.returnDisplay).toContain('bar.ts');

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[24/38]⎯

 FAIL  src/tools/read-many-files.test.ts > ReadManyFilesTool > Batch Processing > should execute file operations concurrently
AssertionError: expected 1 to be 3 // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- 3[39m
[31m+ 1[39m

 ❯ src/tools/read-many-files.test.ts:750:36
    748| 
    749|       // For parallel processing, ALL start events should happen befor…
    750|       expect(startsBeforeFirstEnd).toBe(startEvents); // Should PASS w…
       |                                    ^
    751| 
    752|       detectFileTypeSpy.mockRestore();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[25/38]⎯

 FAIL  src/tools/shell.test.ts > ShellTool > execute > should summarize output when configured
ReferenceError: summarizer is not defined
 ❯ src/tools/shell.test.ts:272:17
    270|         [shellTool.name]: { tokenBudget: 1000 },
    271|       });
    272|       vi.mocked(summarizer.summarizeToolOutput).mockResolvedValue(
       |                 ^
    273|         'summarized output',
    274|       );

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[26/38]⎯

 FAIL  src/tools/todo-pause.spec.ts > TodoPause - Behavioral Tests > Execution Behavior > should return pause signal with provided reason
AssertionError: the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string
 ❯ src/tools/todo-pause.spec.ts:105:30
    103|       expect(result.llmContent).toContain('Database connection failed'…
    104|       expect(result.returnDisplay).toContain('Database connection fail…
    105|       expect(result.summary).toContain('paused');
       |                              ^
    106|     });
    107| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[27/38]⎯

 FAIL  src/tools/todo-pause.spec.ts > TodoPause - Behavioral Tests > Execution Behavior > should signal continuation break through result structure
AssertionError: expected undefined to be defined
 ❯ src/tools/todo-pause.spec.ts:186:30
    184| 
    185|       // The result should indicate a pause/break state
    186|       expect(result.summary).toBeDefined();
       |                              ^
    187|       expect(result.summary?.toLowerCase()).toMatch(/pause|break|stop/…
    188|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[28/38]⎯

 FAIL  src/tools/web-fetch.test.ts > WebFetchTool > execute > should return WEB_FETCH_PROCESSING_ERROR on general processing failure
TypeError: this.config.getContentGeneratorConfig is not a function
 ❯ WebFetchToolInvocation.execute src/tools/web-fetch.ts:179:41
    177| 
    178|     // Get provider manager
    179|     const providerManager = this.config.getContentGeneratorConfig()?.p…
       |                                         ^
    180|     if (!providerManager) {
    181|       return {
 ❯ src/tools/web-fetch.test.ts:69:39

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[29/38]⎯

 FAIL  src/utils/ignorePatterns.test.ts > FileExclusions > getDefaultExcludePatterns > should return comprehensive patterns by default
Error: [vitest] No "getCurrentLlxprtMdFilename" export is defined on the "../tools/memoryTool.js" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

vi[33m.[39m[34mmock[39m([35mimport[39m([32m"../tools/memoryTool.js"[39m)[33m,[39m [35masync[39m (importOriginal) [33m=>[39m {
  [35mconst[39m actual [33m=[39m [35mawait[39m [34mimportOriginal[39m()
  [35mreturn[39m {
    [33m...[39mactual[33m,[39m
    [90m// your mocked methods[39m
  }
})

 ❯ FileExclusions.getDefaultExcludePatterns src/utils/ignorePatterns.ts:163:27
    161|     // Add dynamic patterns (like current LLxprt MD filename)
    162|     if (includeDynamicPatterns) {
    163|       patterns.push(`**/${getCurrentLlxprtMdFilename()}`);
       |                           ^
    164|     }
    165| 
 ❯ src/utils/ignorePatterns.test.ts:38:33

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[30/38]⎯

 FAIL  src/utils/ignorePatterns.test.ts > FileExclusions > getDefaultExcludePatterns > should include custom patterns
Error: [vitest] No "getCurrentLlxprtMdFilename" export is defined on the "../tools/memoryTool.js" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

vi[33m.[39m[34mmock[39m([35mimport[39m([32m"../tools/memoryTool.js"[39m)[33m,[39m [35masync[39m (importOriginal) [33m=>[39m {
  [35mconst[39m actual [33m=[39m [35mawait[39m [34mimportOriginal[39m()
  [35mreturn[39m {
    [33m...[39mactual[33m,[39m
    [90m// your mocked methods[39m
  }
})

 ❯ FileExclusions.getDefaultExcludePatterns src/utils/ignorePatterns.ts:163:27
    161|     // Add dynamic patterns (like current LLxprt MD filename)
    162|     if (includeDynamicPatterns) {
    163|       patterns.push(`**/${getCurrentLlxprtMdFilename()}`);
       |                           ^
    164|     }
    165| 
 ❯ src/utils/ignorePatterns.test.ts:76:33

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[31/38]⎯

 FAIL  src/utils/ignorePatterns.test.ts > FileExclusions > getDefaultExcludePatterns > should include runtime patterns
Error: [vitest] No "getCurrentLlxprtMdFilename" export is defined on the "../tools/memoryTool.js" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

vi[33m.[39m[34mmock[39m([35mimport[39m([32m"../tools/memoryTool.js"[39m)[33m,[39m [35masync[39m (importOriginal) [33m=>[39m {
  [35mconst[39m actual [33m=[39m [35mawait[39m [34mimportOriginal[39m()
  [35mreturn[39m {
    [33m...[39mactual[33m,[39m
    [90m// your mocked methods[39m
  }
})

 ❯ FileExclusions.getDefaultExcludePatterns src/utils/ignorePatterns.ts:163:27
    161|     // Add dynamic patterns (like current LLxprt MD filename)
    162|     if (includeDynamicPatterns) {
    163|       patterns.push(`**/${getCurrentLlxprtMdFilename()}`);
       |                           ^
    164|     }
    165| 
 ❯ src/utils/ignorePatterns.test.ts:86:33

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[32/38]⎯

 FAIL  src/utils/ignorePatterns.test.ts > FileExclusions > getDefaultExcludePatterns > should respect includeDynamicPatterns option
Error: [vitest] No "getCurrentLlxprtMdFilename" export is defined on the "../tools/memoryTool.js" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

vi[33m.[39m[34mmock[39m([35mimport[39m([32m"../tools/memoryTool.js"[39m)[33m,[39m [35masync[39m (importOriginal) [33m=>[39m {
  [35mconst[39m actual [33m=[39m [35mawait[39m [34mimportOriginal[39m()
  [35mreturn[39m {
    [33m...[39mactual[33m,[39m
    [90m// your mocked methods[39m
  }
})

 ❯ FileExclusions.getDefaultExcludePatterns src/utils/ignorePatterns.ts:163:27
    161|     // Add dynamic patterns (like current LLxprt MD filename)
    162|     if (includeDynamicPatterns) {
    163|       patterns.push(`**/${getCurrentLlxprtMdFilename()}`);
       |                           ^
    164|     }
    165| 
 ❯ src/utils/ignorePatterns.test.ts:96:44

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[33/38]⎯

 FAIL  src/utils/ignorePatterns.test.ts > FileExclusions > getReadManyFilesExcludes > should provide legacy compatibility
Error: [vitest] No "getCurrentLlxprtMdFilename" export is defined on the "../tools/memoryTool.js" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

vi[33m.[39m[34mmock[39m([35mimport[39m([32m"../tools/memoryTool.js"[39m)[33m,[39m [35masync[39m (importOriginal) [33m=>[39m {
  [35mconst[39m actual [33m=[39m [35mawait[39m [34mimportOriginal[39m()
  [35mreturn[39m {
    [33m...[39mactual[33m,[39m
    [90m// your mocked methods[39m
  }
})

 ❯ FileExclusions.getDefaultExcludePatterns src/utils/ignorePatterns.ts:163:27
    161|     // Add dynamic patterns (like current LLxprt MD filename)
    162|     if (includeDynamicPatterns) {
    163|       patterns.push(`**/${getCurrentLlxprtMdFilename()}`);
       |                           ^
    164|     }
    165| 
 ❯ FileExclusions.getReadManyFilesExcludes src/utils/ignorePatterns.ts:187:17
 ❯ src/utils/ignorePatterns.test.ts:111:33

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[34/38]⎯

 FAIL  src/utils/ignorePatterns.test.ts > FileExclusions > with Config > should use config custom excludes when available
Error: [vitest] No "getCurrentLlxprtMdFilename" export is defined on the "../tools/memoryTool.js" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

vi[33m.[39m[34mmock[39m([35mimport[39m([32m"../tools/memoryTool.js"[39m)[33m,[39m [35masync[39m (importOriginal) [33m=>[39m {
  [35mconst[39m actual [33m=[39m [35mawait[39m [34mimportOriginal[39m()
  [35mreturn[39m {
    [33m...[39mactual[33m,[39m
    [90m// your mocked methods[39m
  }
})

 ❯ FileExclusions.getDefaultExcludePatterns src/utils/ignorePatterns.ts:163:27
    161|     // Add dynamic patterns (like current LLxprt MD filename)
    162|     if (includeDynamicPatterns) {
    163|       patterns.push(`**/${getCurrentLlxprtMdFilename()}`);
       |                           ^
    164|     }
    165| 
 ❯ src/utils/ignorePatterns.test.ts:155:33

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[35/38]⎯

 FAIL  src/utils/ignorePatterns.test.ts > FileExclusions > with Config > should handle config without getCustomExcludes method
Error: [vitest] No "getCurrentLlxprtMdFilename" export is defined on the "../tools/memoryTool.js" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

vi[33m.[39m[34mmock[39m([35mimport[39m([32m"../tools/memoryTool.js"[39m)[33m,[39m [35masync[39m (importOriginal) [33m=>[39m {
  [35mconst[39m actual [33m=[39m [35mawait[39m [34mimportOriginal[39m()
  [35mreturn[39m {
    [33m...[39mactual[33m,[39m
    [90m// your mocked methods[39m
  }
})

 ❯ FileExclusions.getDefaultExcludePatterns src/utils/ignorePatterns.ts:163:27
    161|     // Add dynamic patterns (like current LLxprt MD filename)
    162|     if (includeDynamicPatterns) {
    163|       patterns.push(`**/${getCurrentLlxprtMdFilename()}`);
       |                           ^
    164|     }
    165| 
 ❯ src/utils/ignorePatterns.test.ts:165:33

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[36/38]⎯

 FAIL  src/utils/ignorePatterns.test.ts > FileExclusions > buildExcludePatterns > should be an alias for getDefaultExcludePatterns
Error: [vitest] No "getCurrentLlxprtMdFilename" export is defined on the "../tools/memoryTool.js" mock. Did you forget to return it from "vi.mock"?
If you need to partially mock a module, you can use "importOriginal" helper inside:

vi[33m.[39m[34mmock[39m([35mimport[39m([32m"../tools/memoryTool.js"[39m)[33m,[39m [35masync[39m (importOriginal) [33m=>[39m {
  [35mconst[39m actual [33m=[39m [35mawait[39m [34mimportOriginal[39m()
  [35mreturn[39m {
    [33m...[39mactual[33m,[39m
    [90m// your mocked methods[39m
  }
})

 ❯ FileExclusions.getDefaultExcludePatterns src/utils/ignorePatterns.ts:163:27
    161|     // Add dynamic patterns (like current LLxprt MD filename)
    162|     if (includeDynamicPatterns) {
    163|       patterns.push(`**/${getCurrentLlxprtMdFilename()}`);
       |                           ^
    164|     }
    165| 
 ❯ src/utils/ignorePatterns.test.ts:195:40

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[37/38]⎯

 FAIL  src/providers/integration/multi-provider.integration.test.ts > Multi-Provider Integration Tests > Error Handling > should handle missing API key
AssertionError: expected 'expected 0 to be greater than 0' to match /authentication|API key/i

[32m- Expected:[39m 
/authentication|API key/i

[31m+ Received:[39m 
"expected 0 to be greater than 0"

 ❯ src/providers/integration/multi-provider.integration.test.ts:455:32
    453|           const errorMessage =
    454|             error instanceof Error ? error.message : String(error);
    455|           expect(errorMessage).toMatch(/authentication|API key/i);
       |                                ^
    456|         }
    457|       } finally {

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[38/38]⎯


 Test Files  12 failed | 156 passed | 7 skipped (175)
      Tests  38 failed | 2963 passed | 64 skipped (3065)
   Start at  15:28:26
   Duration  43.17s (transform 3.19s, setup 502ms, collect 45.32s, tests 80.24s, environment 21ms, prepare 9.84s)

JUNIT report written to /Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/packages/core/junit.xml
npm error Lifecycle script `test` failed with error:
npm error code 1
npm error path /Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/packages/core
npm error workspace @vybestack/llxprt-code-core@0.2.2
npm error location /Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/packages/core
npm error command failed
npm error command sh -c vitest run


> llxprt-code-vscode-ide-companion@0.2.2 test
> vitest run


 RUN  v3.2.4 /Volumes/XS1000/acoliver/projects/20250731-merge/llxprt-code/packages/vscode-ide-companion

 ✓ src/open-files-manager.test.ts (17 tests) 13ms
stderr | src/extension.test.ts > activate > should show the info message on first activation
updateWorkspace called with  {
  subscriptions: [],
  environmentVariableCollection: {
    replace: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  globalState: {
    get: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    },
    update: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  extensionUri: { fsPath: [32m'/path/to/extension'[39m }
}

stderr | src/extension-multi-folder.test.ts > activate with multiple folders > should set a single folder path
updateWorkspace called with  {
  subscriptions: [],
  environmentVariableCollection: {
    replace: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  globalState: {
    get: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    },
    update: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  extensionUri: { fsPath: [32m'/path/to/extension'[39m }
}

stderr | src/extension-multi-folder.test.ts > activate with multiple folders > should set multiple folder paths, separated by OS-specific path delimiter
updateWorkspace called with  {
  subscriptions: [],
  environmentVariableCollection: {
    replace: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  globalState: {
    get: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    },
    update: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  extensionUri: { fsPath: [32m'/path/to/extension'[39m }
}

stderr | src/extension.test.ts > activate > should not show the info message on subsequent activations
updateWorkspace called with  {
  subscriptions: [],
  environmentVariableCollection: {
    replace: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  globalState: {
    get: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    },
    update: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  extensionUri: { fsPath: [32m'/path/to/extension'[39m }
}

stderr | src/extension.test.ts > activate > should launch the LLxprt Code when the user clicks the button
updateWorkspace called with  {
  subscriptions: [],
  environmentVariableCollection: {
    replace: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  globalState: {
    get: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    },
    update: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  extensionUri: { fsPath: [32m'/path/to/extension'[39m }
}

stderr | src/extension-multi-folder.test.ts > activate with multiple folders > should set an empty string if no folders are open
updateWorkspace called with  {
  subscriptions: [],
  environmentVariableCollection: {
    replace: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  globalState: {
    get: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    },
    update: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  extensionUri: { fsPath: [32m'/path/to/extension'[39m }
}

 ✓ src/extension.test.ts (3 tests) 6ms
stderr | src/extension-multi-folder.test.ts > activate with multiple folders > should update the path when workspace folders change
updateWorkspace called with  {
  subscriptions: [],
  environmentVariableCollection: {
    replace: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  globalState: {
    get: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    },
    update: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  extensionUri: { fsPath: [32m'/path/to/extension'[39m }
}

stderr | src/extension-multi-folder.test.ts > activate with multiple folders > should update the path when workspace folders change
updateWorkspace called with  {
  subscriptions: [
    [90mundefined[39m,
    [90mundefined[39m,
    [90mundefined[39m,
    [90mundefined[39m,
    { dispose: [36m[Function][39m },
    [90mundefined[39m,
    [90mundefined[39m
  ],
  environmentVariableCollection: {
    replace: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  globalState: {
    get: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    },
    update: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  extensionUri: { fsPath: [32m'/path/to/extension'[39m }
}
updateWorkspace called with  {
  subscriptions: [
    [90mundefined[39m,
    [90mundefined[39m,
    [90mundefined[39m,
    [90mundefined[39m,
    { dispose: [36m[Function][39m },
    [90mundefined[39m,
    [90mundefined[39m
  ],
  environmentVariableCollection: {
    replace: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  globalState: {
    get: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    },
    update: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  extensionUri: { fsPath: [32m'/path/to/extension'[39m }
}

 ✓ src/extension-multi-folder.test.ts (5 tests | 1 skipped) 7ms

 Test Files  3 passed (3)
      Tests  24 passed | 1 skipped (25)
   Start at  15:29:10
   Duration  372ms (transform 107ms, setup 0ms, collect 419ms, tests 26ms, environment 0ms, prepare 125ms)

