
> @vybestack/llxprt-code@0.1.23 test
> npm run test --workspaces --if-present


> @vybestack/llxprt-code@0.1.23 test
> vitest run


 RUN  v3.2.4 /Users/acoliver/projects/llxprt-code/packages/cli
      Coverage enabled with v8

 ✓ src/integration-tests/test-utils.test.ts (14 tests) 939ms
   ✓ Test Utilities > waitForFile > should wait for file to be created  307ms
   ✓ Test Utilities > waitForFile > should timeout if file is not created  509ms
 ✓ src/ui/components/MemoryUsageDisplay.semantic.test.tsx (5 tests) 624ms
 ❯ src/ui/components/Footer.test.tsx (11 tests | 2 failed) 62ms
   ✓ Footer > branch and path display order > should display branch first, then path on second line 21ms
   ✓ Footer > branch and path display order > should show branch with asterisk to indicate modified state 3ms
   ✓ Footer > branch and path display order > should truncate long branch names appropriately 2ms
   ✓ Footer > branch and path display order > should handle missing branch name gracefully 3ms
   × Footer > responsive layout > should adapt branch truncation length based on breakpoint 13ms
     → Cannot read properties of undefined (reading 'toLocaleString')
   × Footer > responsive layout > should show different information based on breakpoint 6ms
     → Cannot read properties of undefined (reading 'toLocaleString')
   ✓ Footer > information display priority > should prioritize branch information in the correct line order 3ms
   ✓ Footer > untrusted folder display > should show (untrusted) when isTrustedFolder is false 2ms
   ✓ Footer > untrusted folder display > should not show (untrusted) when isTrustedFolder is true 2ms
   ✓ Footer > untrusted folder display > should not show (untrusted) when isTrustedFolder is undefined 2ms
   ✓ Footer > untrusted folder display > should show (untrusted) after branch name when both are present 2ms
 ❯ src/ui/components/Footer.responsive.test.tsx (22 tests | 10 failed) 76ms
   ✓ Footer Responsive Behavior > NARROW width behavior (< 80 cols) > should show abbreviated memory indicator 15ms
   ✓ Footer Responsive Behavior > NARROW width behavior (< 80 cols) > should show abbreviated context indicator 2ms
   ✓ Footer Responsive Behavior > NARROW width behavior (< 80 cols) > should NOT show model name at narrow width 2ms
   ✓ Footer Responsive Behavior > NARROW width behavior (< 80 cols) > should NOT show timestamp at narrow width 1ms
   × Footer Responsive Behavior > NARROW width behavior (< 80 cols) > should truncate long branch names 6ms
     → expected '(test-branch*)[NORMAL]               …' to match /\.\.\./
   ✓ Footer Responsive Behavior > STANDARD width behavior (80-120 cols) > should show full memory indicator label 2ms
   ✓ Footer Responsive Behavior > STANDARD width behavior (80-120 cols) > should show full context indicator label 2ms
   × Footer Responsive Behavior > STANDARD width behavior (80-120 cols) > should show model name at standard width 4ms
     → expected '(test-branch*)[NORMAL]               …' to contain 'gpt-4'
   ✓ Footer Responsive Behavior > STANDARD width behavior (80-120 cols) > should NOT show timestamp at standard width 2ms
   ✓ Footer Responsive Behavior > WIDE width behavior (> 120 cols) > should show detailed memory usage with parenthetical details 5ms
   ✓ Footer Responsive Behavior > WIDE width behavior (> 120 cols) > should show detailed context usage with comma-separated numbers 2ms
   × Footer Responsive Behavior > WIDE width behavior (> 120 cols) > should show model name at wide width 2ms
     → expected '(test-branch*)[NORMAL]           Memo…' to contain 'gpt-4'
   ✓ Footer Responsive Behavior > WIDE width behavior (> 120 cols) > should show timestamp at wide width 2ms
   × Footer Responsive Behavior > WIDE width behavior (> 120 cols) > should show full branch name when space allows 2ms
     → expected '(test-branch*)[NORMAL]           Memo…' to match /-truncation\*/
   × Footer Responsive Behavior > Breakpoint edge cases > should handle exact breakpoint boundaries correctly 4ms
     → expected '(test-branch*)[NORMAL]               …' to contain 'gpt-4'
   × Footer Responsive Behavior > Breakpoint edge cases > should transition properly at STANDARD threshold 3ms
     → expected '(test-branch*)[NORMAL]               …' to contain 'gpt-4'
   ✓ Footer Responsive Behavior > Information priority preservation > should always show memory and context info at all widths 5ms
   × Footer Responsive Behavior > Information priority preservation > should show branch name at all widths (possibly truncated) 2ms
     → expected '(test-branch*)[NORMAL]               …' to match /(feature|\.\.\.)/
   × Footer Responsive Behavior > Two-line layout requirement > should organize content into logical 2-line structure 1ms
     → expected '(test-branch*)[NORMAL]               …' to match /(long-project-name|\/home\/user\…/home\
   × Footer Responsive Behavior > Two-line layout requirement > should show Memory|Context|Time together when wide 3ms
     → expected '(test-branch*)[NORMAL]           Memo…' to contain '/home/user/projects'
   × Footer Responsive Behavior > Two-line layout requirement > should organize Path and Model information appropriately 3ms
     → expected '(test-branch*)[NORMAL]           Memo…' to contain '/home/user/projects'
   ✓ Footer Responsive Behavior > Two-line layout requirement > should adapt content appropriately across width breakpoints 5ms
 ✓ src/ui/hooks/useShellHistory.test.ts (7 tests) 546ms
 ✓ test/ui/commands/authCommand-logout.test.ts (21 tests) 440ms
 ✓ src/ui/components/messages/ToolConfirmationMessage.responsive.test.tsx (10 tests) 411ms
 ✓ src/ui/components/InputPrompt.paste.test.tsx (3 tests | 1 skipped) 279ms
 ✓ src/ui/hooks/usePrivacySettings.test.ts (6 tests) 279ms
 ✓ src/ui/components/AuthDialog.test.tsx (10 tests) 374ms
 ✓ src/ui/hooks/useAtCompletion.test.ts (13 tests) 1445ms
   ✓ useAtCompletion > UI State and Loading Behavior > should show a loading indicator and clear old suggestions for subsequent searches that take longer than 200ms  618ms
 ✓ src/ui/hooks/slashCommandProcessor.test.ts (30 tests) 1743ms
 ✓ src/ui/utils/clipboardUtils.test.ts (6 tests) 133ms
 ✓ src/ui/components/SettingsDialog.test.tsx (38 tests) 2448ms
 ❯ src/ui/hooks/useGeminiStream.test.tsx (34 tests | 1 failed) 1320ms
   ✓ mergePartListUnions > should merge multiple PartListUnion arrays 1ms
   ✓ mergePartListUnions > should handle empty arrays in the input list 0ms
   ✓ mergePartListUnions > should handle a single PartListUnion array 0ms
   ✓ mergePartListUnions > should return an empty array if all input arrays are empty 0ms
   ✓ mergePartListUnions > should handle input list being empty 0ms
   ✓ mergePartListUnions > should correctly merge when PartListUnion items are single Parts not in arrays 0ms
   ✓ mergePartListUnions > should handle a mix of arrays and single parts, including empty arrays and undefined/null parts if they were possible (though PartListUnion typing restricts this) 0ms
   ✓ mergePartListUnions > should preserve the order of parts from the input arrays 0ms
   ✓ mergePartListUnions > should handle cases where some PartListUnion items are single Parts and others are arrays of Parts 0ms
   ✓ useGeminiStream > should not submit tool responses if not all tool calls are completed 1ms
   ✓ useGeminiStream > should preserve multiple function responses as separate parts 0ms
   ✓ useGeminiStream > should handle all tool calls being cancelled 13ms
   ✓ useGeminiStream > should group multiple cancelled tool call responses into a single history entry 3ms
   × useGeminiStream > should not flicker streaming state to Idle between tool completion and submission 1014ms
     → expected "spy" to be called with arguments: [ …(3) ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[32m-   [[90m
[2m    {[22m
[2m      "text": "tool 1 final response",[22m
[2m    },[22m
[32m-   ],[90m
[32m-   Any<AbortSignal>,[90m
[31m+   AbortSignal {},[90m
[2m    "prompt-id-4",[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div />[39m
  [36m</body>[39m
[36m</html>[39m
   ✓ useGeminiStream > User Cancellation > should cancel an in-progress stream when escape is pressed 6ms
   ✓ useGeminiStream > User Cancellation > should call onCancelSubmit handler when escape is pressed 4ms
   ✓ useGeminiStream > User Cancellation > should not do anything if escape is pressed when not responding 1ms
   ✓ useGeminiStream > User Cancellation > should not cancel if a tool call is in progress (not just responding) 1ms
   ✓ useGeminiStream > Slash Command Handling > should schedule a tool call when the command processor returns a schedule_tool action 3ms
   ✓ useGeminiStream > Slash Command Handling > should stop processing and not call Gemini when a command is handled without a tool call 3ms
   ✓ useGeminiStream > Slash Command Handling > should call Gemini with prompt content when slash command returns a `submit_prompt` action 3ms
   ✓ useGeminiStream > Slash Command Handling > should correctly handle a submit_prompt action with empty content 3ms
   ✓ useGeminiStream > Memory Refresh on save_memory > should call performMemoryRefresh when a save_memory tool call completes successfully 2ms
   ✓ useGeminiStream > Error Handling > should call parseAndFormatApiError with the correct authType on stream initialization failure 3ms
   ✓ useGeminiStream > handleFinishedEvent > should add info message for MAX_TOKENS finish reason 3ms
   ✓ useGeminiStream > handleFinishedEvent > should not add message for STOP finish reason 105ms
   ✓ useGeminiStream > handleFinishedEvent > should not add message for FINISH_REASON_UNSPECIFIED 103ms
   ✓ useGeminiStream > handleFinishedEvent > should add appropriate messages for other finish reasons 24ms
   ✓ useGeminiStream > should handle string items in PartListUnion arrays 1ms
   ✓ useGeminiStream > should process @include commands, adding user turn after processing to prevent race conditions 7ms
   ✓ useGeminiStream > Thought Reset > should reset thought to null when starting a new prompt 6ms
   ✓ useGeminiStream > Thought Reset > should reset thought to null when user cancels 3ms
   ✓ useGeminiStream > Thought Reset > should reset thought to null when there is an error 3ms
   ✓ useGeminiStream > should process @include commands, adding user turn after processing to prevent race conditions 2ms
 ✓ src/ui/components/shared/RadioButtonSelect.test.tsx (13 tests) 256ms
 ✓ src/ui/components/messages/DiffRenderer.test.tsx (14 tests | 3 skipped) 151ms
 ✓ src/ui/hooks/atCommandProcessor.test.ts (40 tests) 341ms
 ✓ src/ui/hooks/vim.test.ts (87 tests) 173ms
 ✓ src/ui/commands/restoreCommand.test.ts (13 tests) 62ms
 ✓ src/ui/utils/MarkdownDisplay.test.tsx (16 tests) 166ms
 ✓ src/ui/hooks/useSlashCompletion.test.ts (47 tests) 3206ms
 ✓ src/ui/components/shared/text-buffer.test.ts (103 tests) 87ms
 ✓ src/ui/components/ProviderModelDialog.responsive.test.tsx (11 tests) 104ms
 ✓ src/services/FileCommandLoader.test.ts (32 tests) 148ms
 ✓ src/ui/components/ProviderModelDialog.test.tsx (7 tests) 61ms
 ✓ src/ui/components/StatsDisplay.test.tsx (12 tests) 81ms
 ✓ src/ui/components/ProviderDialog.responsive.test.tsx (8 tests) 50ms
 ✓ src/ui/containers/SessionController.test.tsx (15 tests) 103ms
 ✓ src/ui/utils/commandUtils.test.ts (23 tests) 61ms
 ✓ src/storage/ConversationStorage.test.ts (11 tests) 89ms
 ✓ src/ui/components/FolderTrustDialog.test.tsx (2 tests) 85ms
 ✓ src/ui/commands/ideCommand.test.ts (9 tests) 5021ms
   ✓ ideCommand > install subcommand > should install the extension  5016ms
 ✓ src/ui/components/__tests__/LayoutManager.test.tsx (5 tests) 55ms
 ✓ src/ui/components/shared/MaxSizedBox.test.tsx (21 tests) 41ms
 ✓ src/ui/components/TodoPanel.responsive.test.tsx (7 tests) 67ms
 ✓ src/ui/commands/initCommand.test.ts (3 tests) 40ms
 ✓ src/ui/components/HistoryItemDisplay.test.tsx (7 tests) 36ms
 ✓ src/ui/components/LoadingIndicator.test.tsx (11 tests) 95ms
 ✓ src/ui/components/InputPrompt.test.tsx (61 tests | 1 skipped) 6067ms
 ✓ src/ui/components/ModelStatsDisplay.test.tsx (6 tests) 73ms
 ✓ src/ui/components/ToolStatsDisplay.test.tsx (5 tests) 34ms
 ✓ src/ui/components/SessionSummaryDisplay.test.tsx (1 test) 35ms
 ❯ src/ui/hooks/useToolScheduler.test.ts (21 tests | 3 failed | 4 skipped) 95ms
   × useReactToolScheduler in YOLO Mode > should skip confirmation and execute tool directly when yoloMode is true 41ms
     → expected "spy" to be called with arguments: [ [ ObjectContaining{…} ] ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[2m    [[22m
[32m-     ObjectContaining {[90m
[31m+     {[90m
[31m+       "durationMs": 0,[90m
[31m+       "invocation": MockToolInvocation {[90m
[31m+         "params": {[90m
[31m+           "data": "any data",[90m
[31m+         },[90m
[31m+         "tool": MockTool {[90m
[31m+           "canUpdateOutput": false,[90m
[31m+           "description": "A mock tool for testing",[90m
[31m+           "displayName": "Mock Tool Requires Confirmation",[90m
[31m+           "execute": [Function spy],[90m
[31m+           "isOutputMarkdown": false,[90m
[31m+           "kind": "other",[90m
[31m+           "name": "mockToolRequiresConfirmation",[90m
[31m+           "parameterSchema": {},[90m
[31m+           "shouldConfirmExecute": [Function spy],[90m
[31m+         },[90m
[31m+       },[90m
[31m+       "outcome": "proceed_always",[90m
[2m        "request": {[22m
[2m          "args": {[22m
[2m            "data": "any data",[22m
[2m          },[22m
[2m          "callId": "yoloCall",[22m
[2m          "name": "mockToolRequiresConfirmation",[22m
[2m        },[22m
[32m-       "response": ObjectContaining {[90m
[32m-         "responseParts": {[90m
[31m+       "response": {[90m
[31m+         "callId": "yoloCall",[90m
[31m+         "error": undefined,[90m
[31m+         "errorType": undefined,[90m
[31m+         "responseParts": [[90m
[31m+           {[90m
[31m+             "functionCall": {[90m
[31m+               "args": {[90m
[31m+                 "data": "any data",[90m
[31m+               },[90m
[31m+               "id": "yoloCall",[90m
[31m+               "name": "mockToolRequiresConfirmation",[90m
[31m+             },[90m
[31m+           },[90m
[31m+           {[90m
[2m              "functionResponse": {[22m
[2m                "id": "yoloCall",[22m
[2m                "name": "mockToolRequiresConfirmation",[22m
[2m                "response": {[22m
[2m                  "output": "YOLO Confirmed output",[22m
[2m                },[22m
[2m              },[22m
[2m            },[22m
[31m+         ],[90m
[2m          "resultDisplay": "YOLO Formatted tool output",[22m
[2m        },[22m
[2m        "status": "success",[22m
[31m+       "tool": MockTool {[90m
[31m+         "canUpdateOutput": false,[90m
[31m+         "description": "A mock tool for testing",[90m
[31m+         "displayName": "Mock Tool Requires Confirmation",[90m
[31m+         "execute": [Function spy],[90m
[31m+         "isOutputMarkdown": false,[90m
[31m+         "kind": "other",[90m
[31m+         "name": "mockToolRequiresConfirmation",[90m
[31m+         "parameterSchema": {},[90m
[31m+         "shouldConfirmExecute": [Function spy],[90m
[31m+       },[90m
[2m      },[22m
[2m    ],[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
   ✓ useReactToolScheduler > initial state should be empty 1ms
   × useReactToolScheduler > should schedule and execute a tool call successfully 10ms
     → expected "spy" to be called with arguments: [ [ ObjectContaining{…} ] ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[2m    [[22m
[32m-     ObjectContaining {[90m
[31m+     {[90m
[31m+       "durationMs": 0,[90m
[31m+       "invocation": MockToolInvocation {[90m
[31m+         "params": {[90m
[31m+           "param": "value",[90m
[31m+         },[90m
[31m+         "tool": MockTool {[90m
[31m+           "canUpdateOutput": false,[90m
[31m+           "description": "A mock tool for testing",[90m
[31m+           "displayName": "Mock Tool",[90m
[31m+           "execute": [Function spy],[90m
[31m+           "isOutputMarkdown": false,[90m
[31m+           "kind": "other",[90m
[31m+           "name": "mockTool",[90m
[31m+           "parameterSchema": {},[90m
[31m+           "shouldConfirmExecute": [Function spy],[90m
[31m+         },[90m
[31m+       },[90m
[31m+       "outcome": "proceed_always",[90m
[2m        "request": {[22m
[2m          "args": {[22m
[2m            "param": "value",[22m
[2m          },[22m
[2m          "callId": "call1",[22m
[2m          "name": "mockTool",[22m
[2m        },[22m
[32m-       "response": ObjectContaining {[90m
[32m-         "responseParts": {[90m
[31m+       "response": {[90m
[31m+         "callId": "call1",[90m
[31m+         "error": undefined,[90m
[31m+         "errorType": undefined,[90m
[31m+         "responseParts": [[90m
[31m+           {[90m
[31m+             "functionCall": {[90m
[31m+               "args": {[90m
[31m+                 "param": "value",[90m
[31m+               },[90m
[31m+               "id": "call1",[90m
[31m+               "name": "mockTool",[90m
[31m+             },[90m
[31m+           },[90m
[31m+           {[90m
[2m              "functionResponse": {[22m
[2m                "id": "call1",[22m
[2m                "name": "mockTool",[22m
[2m                "response": {[22m
[2m                  "output": "Tool output",[22m
[2m                },[22m
[2m              },[22m
[2m            },[22m
[31m+         ],[90m
[2m          "resultDisplay": "Formatted tool output",[22m
[2m        },[22m
[2m        "status": "success",[22m
[31m+       "tool": MockTool {[90m
[31m+         "canUpdateOutput": false,[90m
[31m+         "description": "A mock tool for testing",[90m
[31m+         "displayName": "Mock Tool",[90m
[31m+         "execute": [Function spy],[90m
[31m+         "isOutputMarkdown": false,[90m
[31m+         "kind": "other",[90m
[31m+         "name": "mockTool",[90m
[31m+         "parameterSchema": {},[90m
[31m+         "shouldConfirmExecute": [Function spy],[90m
[31m+       },[90m
[2m      },[22m
[2m    ],[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
   ✓ useReactToolScheduler > should handle tool not found 4ms
   ✓ useReactToolScheduler > should handle error during shouldConfirmExecute 7ms
   ✓ useReactToolScheduler > should handle error during execute 19ms
   ↓ useReactToolScheduler > should handle tool requiring confirmation - approved
   ↓ useReactToolScheduler > should handle tool requiring confirmation - cancelled by user
   ↓ useReactToolScheduler > should handle live output updates
   × useReactToolScheduler > should schedule and execute multiple tool calls 9ms
     → expected { request: { …(3) }, …(6) } to match object { status: 'success', …(2) }
(20 matching properties omitted from actual)
   ↓ useReactToolScheduler > should throw error if scheduling while already running
   ✓ mapToDisplay > should map ToolCall with status 'validating' (validating) correctly 0ms
   ✓ mapToDisplay > should map ToolCall with status 'awaiting_approval' (awaiting_approval) correctly 0ms
   ✓ mapToDisplay > should map ToolCall with status 'scheduled' (scheduled) correctly 0ms
   ✓ mapToDisplay > should map ToolCall with status 'executing' (executing no live output) correctly 0ms
   ✓ mapToDisplay > should map ToolCall with status 'executing' (executing with live output) correctly 0ms
   ✓ mapToDisplay > should map ToolCall with status 'success' (success) correctly 0ms
   ✓ mapToDisplay > should map ToolCall with status 'error' (error tool not found) correctly 0ms
   ✓ mapToDisplay > should map ToolCall with status 'error' (error tool execution failed) correctly 0ms
   ✓ mapToDisplay > should map ToolCall with status 'cancelled' (cancelled) correctly 0ms
   ✓ mapToDisplay > should map an array of ToolCalls correctly 0ms
 ✓ src/ui/commands/setupGithubCommand.test.ts (10 tests | 2 skipped) 18ms
 ✓ src/test-utils/responsive-testing.test.tsx (7 tests) 49ms
 ✓ src/utils/settingsUtils.test.ts (68 tests) 13ms
 ✓ src/ui/hooks/useKeypress.test.ts (18 tests) 43ms
 ✓ src/utils/userStartupWarnings.test.ts (5 tests) 53ms
 ✓ src/ui/hooks/useAutoAcceptIndicator.test.ts (6 tests) 17ms
 ✓ src/ui/components/messages/ToolMessage.test.tsx (11 tests) 59ms
 ✓ src/ui/hooks/shellCommandProcessor.test.ts (12 tests) 40ms
 ✓ src/ui/components/TodoPanel.semantic.test.tsx (6 tests) 27ms
 ✓ src/ui/contexts/KeypressContext.test.tsx (12 tests) 30ms
 ✓ src/ui/components/ContextUsageDisplay.semantic.test.tsx (7 tests) 17ms
 ✓ src/ui/components/ShellConfirmationDialog.test.tsx (4 tests) 55ms
 ✓ src/ui/hooks/useGitBranchName.test.ts (7 tests) 53ms
 ✓ src/ui/hooks/useTodoContinuation.spec.ts (18 tests) 26ms
 ✓ src/ui/components/messages/ToolConfirmationMessage.test.tsx (2 tests) 24ms
 ✓ src/ui/commands/mcpCommand.test.ts (35 tests) 21ms
 ✓ src/ui/reducers/appReducer.test.ts (36 tests) 8ms
 ✓ src/commands/mcp/add.test.ts (5 tests) 27ms
 ✓ src/ui/hooks/useFocus.test.ts (5 tests) 16ms
 ✓ src/ui/themes/semantic-tokens.test.ts (13 tests) 16ms
 ✓ src/ui/contexts/SessionContext.test.tsx (3 tests) 23ms
 ✓ src/ui/hooks/useResponsive.test.ts (8 tests) 43ms
 ✓ src/ui/hooks/useStableCallback.test.ts (5 tests) 16ms
 ✓ src/ui/hooks/useHistoryManager.test.ts (8 tests) 17ms
 ✓ src/ui/hooks/useInputHistory.test.ts (11 tests) 24ms
 ✓ src/ui/hooks/useReverseSearchCompletion.test.tsx (10 tests) 44ms
 ✓ src/ui/components/ContextIndicator.ui.test.tsx (6 tests) 34ms
 ✓ src/ui/hooks/useEditorSettings.test.tsx (10 tests) 29ms
 ✓ src/ui/hooks/useFolderTrust.test.ts (7 tests) 27ms
 ✓ src/utils/ConversationContext.test.ts (6 tests) 3ms
 ✓ src/ui/commands/setCommand.test.ts (37 tests) 14ms
 ✓ src/services/prompt-processors/shellProcessor.test.ts (37 tests) 20ms
 ✓ src/ui/hooks/useKeypress.test.tsx (3 tests) 34ms
 ✓ src/config/extension.test.ts (8 tests) 9ms
 ✓ src/ui/themes/theme-manager.test.ts (14 tests) 14ms
 ✓ src/utils/gitUtils.test.ts (12 tests) 10ms
 ✓ src/config/settingsSchema.test.ts (13 tests) 9ms
 ✓ src/commands/mcp/list.test.ts (4 tests) 10ms
 ✓ src/auth/oauth-manager.spec.ts (21 tests) 12ms
 ✓ src/providers/logging/git-stats.test.ts (21 tests) 16ms
 ✓ src/ui/utils/updateCheck.test.ts (12 tests) 10ms
 ✓ src/config/settings.test.ts (44 tests) 12ms
 ✓ src/commands/mcp/remove.test.ts (2 tests) 15ms
 ✓ src/services/CommandService.test.ts (11 tests) 7ms
 ✓ src/services/todo-continuation/todoContinuationService.spec.ts (33 tests) 5ms
 ✓ src/ui/commands/chatCommand.test.ts (17 tests) 14ms
 ✓ src/utils/installationInfo.test.ts (16 tests) 9ms
 ✓ src/ui/commands/profileCommand.test.ts (13 tests) 18ms
 ✓ src/utils/handleAutoUpdate.test.ts (10 tests) 18ms
 ✓ src/ui/components/shared/vim-buffer-actions.test.ts (74 tests) 11ms
 ✓ src/ui/commands/aboutCommand.test.ts (5 tests) 10ms
 ✓ src/ui/commands/copyCommand.test.ts (11 tests) 7ms
 ✓ src/ui/keyMatchers.test.ts (32 tests) 5ms
 ✓ src/ui/commands/toolformatCommand.test.ts (9 tests) 7ms
 ✓ src/validateNonInterActiveAuth.test.ts (9 tests) 5ms
 ✓ src/ui/utils/secureInputHandler.test.ts (25 tests) 5ms
 ✓ src/ui/commands/directoryCommand.test.tsx (7 tests) 7ms
 ✓ src/ui/commands/memoryCommand.test.ts (8 tests) 7ms
 ✓ src/providers/logging/LoggingProviderWrapper.test.ts (7 tests) 8ms
 ✓ src/ui/utils/formatters.test.ts (14 tests) 5ms
 ✓ src/commands/mcp.test.ts (3 tests) 5ms
 ✓ src/ui/commands/toolsCommand.test.ts (8 tests) 6ms
 ✓ src/utils/privacy/ConversationDataRedactor.test.ts (10 tests) 5ms
 ✓ src/ui/commands/compressCommand.test.ts (5 tests) 5ms
 ✓ src/ui/commands/keyCommand.test.ts (6 tests) 6ms
 ✓ src/providers/provider-gemini-switching.test.ts (3 tests) 7ms
 ✓ src/gemini.test.tsx (6 tests) 9ms
 ✓ src/ui/commands/docsCommand.test.ts (3 tests) 4ms
 ✓ src/ui/themes/semantic-resolver.test.ts (6 tests) 2ms
 ✓ src/ui/commands/statsCommand.test.ts (3 tests) 5ms
 ✓ src/ui/themes/theme.test.ts (11 tests) 3ms
 ✓ src/nonInteractiveCli.test.ts (6 tests | 1 skipped) 7ms
 ✓ src/ui/commands/helpCommand.test.ts (2 tests) 6ms
 ✓ src/services/prompt-processors/argumentProcessor.test.ts (2 tests) 2ms
 ✓ src/ui/commands/extensionsCommand.test.ts (2 tests) 4ms
 ✓ src/ui/themes/color-utils.test.ts (16 tests) 5ms
 ✓ src/config/auth.test.ts (8 tests) 4ms
 ✓ src/ui/utils/markdownUtilities.test.ts (7 tests) 3ms
 ✓ src/ui/commands/authCommand.test.ts (21 tests) 6ms
 ✓ src/ui/commands/bugCommand.test.ts (2 tests) 3ms
 ✓ src/test-utils/mockCommandContext.test.ts (3 tests) 4ms
 ✓ src/ui/utils/responsive.test.ts (21 tests) 3ms
 ✓ src/config/logging/loggingConfig.test.ts (14 tests) 3ms
 ✓ src/config/keyBindings.test.ts (3 tests) 3ms
 ✓ src/ui/utils/computeStats.test.ts (12 tests) 8ms
 ✓ src/ui/commands/themeCommand.test.ts (2 tests) 4ms
 ✓ src/providers/providerManagerInstance.test.ts (5 tests) 10ms
 ✓ src/ui/commands/terminalSetupCommand.test.ts (5 tests) 4ms
 ✓ src/config/trustedFolders.test.ts (12 tests) 4ms
 ✓ src/ui/commands/settingsCommand.test.ts (2 tests) 3ms
 ✓ src/ui/App.test.tsx (5 tests) 2ms
 ✓ src/ui/commands/editorCommand.test.ts (2 tests) 3ms
 ✓ src/ui/App.e2e.test.tsx (3 tests) 2ms
 ✓ src/ui/utils/displayUtils.test.ts (5 tests) 2ms
 ✓ src/ui/commands/clearCommand.test.ts (2 tests) 3ms
 ✓ src/services/BuiltinCommandLoader.test.ts (4 tests) 3ms
 ✓ src/utils/cleanup.test.ts (4 tests) 3ms
 ✓ src/utils/startupWarnings.test.ts (4 tests) 3ms
 ↓ src/providers/logging/performance.test.ts (8 tests | 8 skipped)
 ✓ src/ui/components/OAuthCodeDialog.test.tsx (5 tests) 2ms

⎯⎯⎯⎯⎯⎯ Failed Tests 16 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  src/ui/components/Footer.responsive.test.tsx > Footer Responsive Behavior > NARROW width behavior (< 80 cols) > should truncate long branch names
AssertionError: expected '(test-branch*)[NORMAL]               …' to match /\.\.\./

[32m- Expected:[39m 
/\.\.\./

[31m+ Received:[39m 
"(test-branch*)[NORMAL]                                                      Mem: 6% | Ctx: 1.0k/100k
/test/path"

 ❯ src/ui/components/Footer.responsive.test.tsx:99:22
     97| 
     98|       // Should show truncated branch name
     99|       expect(output).toMatch(/\.\.\./);
       |                      ^
    100|       // Should NOT show full branch name
    101|       expect(output).not.toContain(

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/16]⎯

 FAIL  src/ui/components/Footer.responsive.test.tsx > Footer Responsive Behavior > STANDARD width behavior (80-120 cols) > should show model name at standard width
AssertionError: expected '(test-branch*)[NORMAL]               …' to contain 'gpt-4'

[32m- Expected[39m
[31m+ Received[39m

[32m- gpt-4[39m
[31m+ (test-branch*)[NORMAL]                                               Memory: 6% | Context: 1.0k/100k[39m
[31m+ /test/path  [no sandbox (see /docs)]                                                gemini-2.0-flash[39m

 ❯ src/ui/components/Footer.responsive.test.tsx:137:22
    135| 
    136|       // Should show model name
    137|       expect(output).toContain('gpt-4');
       |                      ^
    138|       // Model name shows without 'Model:' prefix now
    139|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/16]⎯

 FAIL  src/ui/components/Footer.responsive.test.tsx > Footer Responsive Behavior > WIDE width behavior (> 120 cols) > should show model name at wide width
AssertionError: expected '(test-branch*)[NORMAL]           Memo…' to contain 'gpt-4'

[32m- Expected[39m
[31m+ Received[39m

[32m- gpt-4[39m
[31m+ (test-branch*)[NORMAL]           Memory: 6% (0.3GB/4.8GB) | Context: 1,000/100,000 tokens | 23:19:55[39m
[31m+ /test/path  [no sandbox (see /docs)]                                                gemini-2.0-flash[39m

 ❯ src/ui/components/Footer.responsive.test.tsx:177:22
    175| 
    176|       // Should show model name
    177|       expect(output).toContain('gpt-4');
       |                      ^
    178|       // Model name shows without 'Model:' prefix now
    179|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/16]⎯

 FAIL  src/ui/components/Footer.responsive.test.tsx > Footer Responsive Behavior > WIDE width behavior (> 120 cols) > should show full branch name when space allows
AssertionError: expected '(test-branch*)[NORMAL]           Memo…' to match /-truncation\*/

[32m- Expected:[39m 
/-truncation\*/

[31m+ Received:[39m 
"(test-branch*)[NORMAL]           Memory: 6% (0.3GB/4.8GB) | Context: 1,000/100,000 tokens | 23:19:55
/test/path  [no sandbox (see /docs)]                                                gemini-2.0-flash"

 ❯ src/ui/components/Footer.responsive.test.tsx:194:22
    192| 
    193|       // Should show branch name at wide width (wrapped as "that-need"…
    194|       expect(output).toMatch(/-truncation\*/);
       |                      ^
    195|     });
    196|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/16]⎯

 FAIL  src/ui/components/Footer.responsive.test.tsx > Footer Responsive Behavior > Breakpoint edge cases > should handle exact breakpoint boundaries correctly
AssertionError: expected '(test-branch*)[NORMAL]               …' to contain 'gpt-4'

[32m- Expected[39m
[31m+ Received[39m

[32m- gpt-4[39m
[31m+ (test-branch*)[NORMAL]                                               Memory: 6% | Context: 1.0k/100k[39m
[31m+ /test/path  [no sandbox (see /docs)]                                                gemini-2.0-flash[39m

 ❯ src/ui/components/Footer.responsive.test.tsx:208:22
    206|       // At exactly 80, should be STANDARD behavior
    207|       expect(output).toMatch(/Memory:/); // Not abbreviated
    208|       expect(output).toContain('gpt-4'); // Model shown
       |                      ^
    209|       expect(output).not.toMatch(/\d{2}:\d{2}:\d{2}/); // No timestamp
    210|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/16]⎯

 FAIL  src/ui/components/Footer.responsive.test.tsx > Footer Responsive Behavior > Breakpoint edge cases > should transition properly at STANDARD threshold
AssertionError: expected '(test-branch*)[NORMAL]               …' to contain 'gpt-4'

[32m- Expected[39m
[31m+ Received[39m

[32m- gpt-4[39m
[31m+ (test-branch*)[NORMAL]                                               Memory: 6% | Context: 1.0k/100k[39m
[31m+ /test/path  [no sandbox (see /docs)]                                                gemini-2.0-flash[39m

 ❯ src/ui/components/Footer.responsive.test.tsx:221:22
    219|       // At exactly 120, should be STANDARD behavior (not WIDE)
    220|       expect(output).toMatch(/Memory:/);
    221|       expect(output).toContain('gpt-4');
       |                      ^
    222|       expect(output).not.toMatch(/\d{2}:\d{2}:\d{2}/); // Still no tim…
    223|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/16]⎯

 FAIL  src/ui/components/Footer.responsive.test.tsx > Footer Responsive Behavior > Information priority preservation > should show branch name at all widths (possibly truncated)
AssertionError: expected '(test-branch*)[NORMAL]               …' to match /(feature|\.\.\.)/

[32m- Expected:[39m 
/(feature|\.\.\.)/

[31m+ Received:[39m 
"(test-branch*)[NORMAL]                                                      Mem: 6% | Ctx: 1.0k/100k
/test/path"

 ❯ src/ui/components/Footer.responsive.test.tsx:250:24
    248| 
    249|         // Branch should always be visible (even if truncated)
    250|         expect(output).toMatch(/(feature|\.\.\.)/);
       |                        ^
    251|       });
    252|     });
 ❯ src/ui/components/Footer.responsive.test.tsx:244:14

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/16]⎯

 FAIL  src/ui/components/Footer.responsive.test.tsx > Footer Responsive Behavior > Two-line layout requirement > should organize content into logical 2-line structure
AssertionError: expected '(test-branch*)[NORMAL]               …' to match /(long-project-name|\/home\/user\…/home\

[32m- Expected:[39m 
/(long-project-name|\/home\/user\/pr|home\/user\/pr|\.\.\.)/

[31m+ Received:[39m 
"(test-branch*)[NORMAL]                                                      Mem: 6% | Ctx: 1.0k/100k
/test/path"

 ❯ src/ui/components/Footer.responsive.test.tsx:268:24
    266|         expect(output).toMatch(/(Ctx:|Context:)/);
    267|         // Path check - Windows may show truncated paths differently
    268|         expect(output).toMatch(
       |                        ^
    269|           /(long-project-name|\/home\/user\/pr|home\/user\/pr|\.\.\.)/,
    270|         ); // Path (may be truncated)
 ❯ src/ui/components/Footer.responsive.test.tsx:259:14

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/16]⎯

 FAIL  src/ui/components/Footer.responsive.test.tsx > Footer Responsive Behavior > Two-line layout requirement > should show Memory|Context|Time together when wide
AssertionError: expected '(test-branch*)[NORMAL]           Memo…' to contain '/home/user/projects'

[32m- Expected[39m
[31m+ Received[39m

[32m- /home/user/projects[39m
[31m+ (test-branch*)[NORMAL]           Memory: 6% (0.3GB/4.8GB) | Context: 1,000/100,000 tokens | 23:19:55[39m
[31m+ /test/path  [no sandbox (see /docs)]                                                gemini-2.0-flash[39m

 ❯ src/ui/components/Footer.responsive.test.tsx:289:22
    287| 
    288|       // Should also have path and model displayed
    289|       expect(output).toContain('/home/user/projects');
       |                      ^
    290|       expect(output).toContain('gpt-4');
    291|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/16]⎯

 FAIL  src/ui/components/Footer.responsive.test.tsx > Footer Responsive Behavior > Two-line layout requirement > should organize Path and Model information appropriately
AssertionError: expected '(test-branch*)[NORMAL]           Memo…' to contain '/home/user/projects'

[32m- Expected[39m
[31m+ Received[39m

[32m- /home/user/projects[39m
[31m+ (test-branch*)[NORMAL]           Memory: 6% (0.3GB/4.8GB) | Context: 1,000/100,000 tokens | 23:19:55[39m
[31m+ /test/path  [no sandbox (see /docs)]                                                gemini-2.0-flash[39m

 ❯ src/ui/components/Footer.responsive.test.tsx:300:22
    298| 
    299|       // Should contain path and model information
    300|       expect(output).toContain('/home/user/projects');
       |                      ^
    301|       expect(output).toContain('gpt-4');
    302|       expect(output).toContain('feature/'); // Branch name

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/16]⎯

 FAIL  src/ui/components/Footer.test.tsx > Footer > responsive layout > should adapt branch truncation length based on breakpoint
 FAIL  src/ui/components/Footer.test.tsx > Footer > responsive layout > should show different information based on breakpoint
TypeError: Cannot read properties of undefined (reading 'toLocaleString')
 ❯ ResponsiveContextDisplay src/ui/components/Footer.tsx:123:49
    121|   let displayText: string;
    122|   if (detailed) {
    123|     displayText = `Context: ${historyTokenCount.toLocaleString()}/${li…
       |                                                 ^
    124|   } else if (compact) {
    125|     displayText = `Ctx: ${(historyTokenCount / 1000).toFixed(1)}k/${(l…
 ❯ Object.react-stack-bottom-frame ../../node_modules/react-dom/cjs/react-dom-client.development.js:23863:20
 ❯ renderWithHooks ../../node_modules/react-dom/cjs/react-dom-client.development.js:5529:22
 ❯ updateFunctionComponent ../../node_modules/react-dom/cjs/react-dom-client.development.js:8897:19
 ❯ beginWork ../../node_modules/react-dom/cjs/react-dom-client.development.js:10522:18
 ❯ runWithFiberInDEV ../../node_modules/react-dom/cjs/react-dom-client.development.js:1522:13
 ❯ performUnitOfWork ../../node_modules/react-dom/cjs/react-dom-client.development.js:15140:22
 ❯ workLoopSync ../../node_modules/react-dom/cjs/react-dom-client.development.js:14956:41
 ❯ renderRootSync ../../node_modules/react-dom/cjs/react-dom-client.development.js:14936:11
 ❯ performWorkOnRoot ../../node_modules/react-dom/cjs/react-dom-client.development.js:14462:44

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/16]⎯

 FAIL  src/ui/hooks/useGeminiStream.test.tsx > useGeminiStream > should not flicker streaming state to Idle between tool completion and submission
AssertionError: expected "spy" to be called with arguments: [ …(3) ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[32m-   [[90m
[2m    {[22m
[2m      "text": "tool 1 final response",[22m
[2m    },[22m
[32m-   ],[90m
[32m-   Any<AbortSignal>,[90m
[31m+   AbortSignal {},[90m
[2m    "prompt-id-4",[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div />[39m
  [36m</body>[39m
[36m</html>[39m
 ❯ src/ui/hooks/useGeminiStream.test.tsx:830:37
    828|     // 5. Wait for submitQuery to be called
    829|     await waitFor(() => {
    830|       expect(mockSendMessageStream).toHaveBeenCalledWith(
       |                                     ^
    831|         toolCallResponseParts,
    832|         expect.any(AbortSignal),
 ❯ runWithExpensiveErrorDiagnosticsDisabled node_modules/@testing-library/dom/dist/config.js:47:12
 ❯ checkCallback node_modules/@testing-library/dom/dist/wait-for.js:124:77
 ❯ Timeout.checkRealTimersCallback node_modules/@testing-library/dom/dist/wait-for.js:118:16

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/16]⎯

 FAIL  src/ui/hooks/useToolScheduler.test.ts > useReactToolScheduler in YOLO Mode > should skip confirmation and execute tool directly when yoloMode is true
AssertionError: expected "spy" to be called with arguments: [ [ ObjectContaining{…} ] ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[2m    [[22m
[32m-     ObjectContaining {[90m
[31m+     {[90m
[31m+       "durationMs": 0,[90m
[31m+       "invocation": MockToolInvocation {[90m
[31m+         "params": {[90m
[31m+           "data": "any data",[90m
[31m+         },[90m
[31m+         "tool": MockTool {[90m
[31m+           "canUpdateOutput": false,[90m
[31m+           "description": "A mock tool for testing",[90m
[31m+           "displayName": "Mock Tool Requires Confirmation",[90m
[31m+           "execute": [Function spy],[90m
[31m+           "isOutputMarkdown": false,[90m
[31m+           "kind": "other",[90m
[31m+           "name": "mockToolRequiresConfirmation",[90m
[31m+           "parameterSchema": {},[90m
[31m+           "shouldConfirmExecute": [Function spy],[90m
[31m+         },[90m
[31m+       },[90m
[31m+       "outcome": "proceed_always",[90m
[2m        "request": {[22m
[2m          "args": {[22m
[2m            "data": "any data",[22m
[2m          },[22m
[2m          "callId": "yoloCall",[22m
[2m          "name": "mockToolRequiresConfirmation",[22m
[2m        },[22m
[32m-       "response": ObjectContaining {[90m
[32m-         "responseParts": {[90m
[31m+       "response": {[90m
[31m+         "callId": "yoloCall",[90m
[31m+         "error": undefined,[90m
[31m+         "errorType": undefined,[90m
[31m+         "responseParts": [[90m
[31m+           {[90m
[31m+             "functionCall": {[90m
[31m+               "args": {[90m
[31m+                 "data": "any data",[90m
[31m+               },[90m
[31m+               "id": "yoloCall",[90m
[31m+               "name": "mockToolRequiresConfirmation",[90m
[31m+             },[90m
[31m+           },[90m
[31m+           {[90m
[2m              "functionResponse": {[22m
[2m                "id": "yoloCall",[22m
[2m                "name": "mockToolRequiresConfirmation",[22m
[2m                "response": {[22m
[2m                  "output": "YOLO Confirmed output",[22m
[2m                },[22m
[2m              },[22m
[2m            },[22m
[31m+         ],[90m
[2m          "resultDisplay": "YOLO Formatted tool output",[22m
[2m        },[22m
[2m        "status": "success",[22m
[31m+       "tool": MockTool {[90m
[31m+         "canUpdateOutput": false,[90m
[31m+         "description": "A mock tool for testing",[90m
[31m+         "displayName": "Mock Tool Requires Confirmation",[90m
[31m+         "execute": [Function spy],[90m
[31m+         "isOutputMarkdown": false,[90m
[31m+         "kind": "other",[90m
[31m+         "name": "mockToolRequiresConfirmation",[90m
[31m+         "parameterSchema": {},[90m
[31m+         "shouldConfirmExecute": [Function spy],[90m
[31m+       },[90m
[2m      },[22m
[2m    ],[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ src/ui/hooks/useToolScheduler.test.ts:232:24
    230| 
    231|     // Check that onComplete was called with success
    232|     expect(onComplete).toHaveBeenCalledWith([
       |                        ^
    233|       expect.objectContaining({
    234|         status: 'success',

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/16]⎯

 FAIL  src/ui/hooks/useToolScheduler.test.ts > useReactToolScheduler > should schedule and execute a tool call successfully
AssertionError: expected "spy" to be called with arguments: [ [ ObjectContaining{…} ] ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[2m    [[22m
[32m-     ObjectContaining {[90m
[31m+     {[90m
[31m+       "durationMs": 0,[90m
[31m+       "invocation": MockToolInvocation {[90m
[31m+         "params": {[90m
[31m+           "param": "value",[90m
[31m+         },[90m
[31m+         "tool": MockTool {[90m
[31m+           "canUpdateOutput": false,[90m
[31m+           "description": "A mock tool for testing",[90m
[31m+           "displayName": "Mock Tool",[90m
[31m+           "execute": [Function spy],[90m
[31m+           "isOutputMarkdown": false,[90m
[31m+           "kind": "other",[90m
[31m+           "name": "mockTool",[90m
[31m+           "parameterSchema": {},[90m
[31m+           "shouldConfirmExecute": [Function spy],[90m
[31m+         },[90m
[31m+       },[90m
[31m+       "outcome": "proceed_always",[90m
[2m        "request": {[22m
[2m          "args": {[22m
[2m            "param": "value",[22m
[2m          },[22m
[2m          "callId": "call1",[22m
[2m          "name": "mockTool",[22m
[2m        },[22m
[32m-       "response": ObjectContaining {[90m
[32m-         "responseParts": {[90m
[31m+       "response": {[90m
[31m+         "callId": "call1",[90m
[31m+         "error": undefined,[90m
[31m+         "errorType": undefined,[90m
[31m+         "responseParts": [[90m
[31m+           {[90m
[31m+             "functionCall": {[90m
[31m+               "args": {[90m
[31m+                 "param": "value",[90m
[31m+               },[90m
[31m+               "id": "call1",[90m
[31m+               "name": "mockTool",[90m
[31m+             },[90m
[31m+           },[90m
[31m+           {[90m
[2m              "functionResponse": {[22m
[2m                "id": "call1",[22m
[2m                "name": "mockTool",[22m
[2m                "response": {[22m
[2m                  "output": "Tool output",[22m
[2m                },[22m
[2m              },[22m
[2m            },[22m
[31m+         ],[90m
[2m          "resultDisplay": "Formatted tool output",[22m
[2m        },[22m
[2m        "status": "success",[22m
[31m+       "tool": MockTool {[90m
[31m+         "canUpdateOutput": false,[90m
[31m+         "description": "A mock tool for testing",[90m
[31m+         "displayName": "Mock Tool",[90m
[31m+         "execute": [Function spy],[90m
[31m+         "isOutputMarkdown": false,[90m
[31m+         "kind": "other",[90m
[31m+         "name": "mockTool",[90m
[31m+         "parameterSchema": {},[90m
[31m+         "shouldConfirmExecute": [Function spy],[90m
[31m+       },[90m
[2m      },[22m
[2m    ],[22m
[2m  ][22m
[39m[90m

Number of calls: [1m1[22m
[39m
 ❯ src/ui/hooks/useToolScheduler.test.ts:382:24
    380|       undefined,
    381|     );
    382|     expect(onComplete).toHaveBeenCalledWith([
       |                        ^
    383|       expect.objectContaining({
    384|         status: 'success',

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[14/16]⎯

 FAIL  src/ui/hooks/useToolScheduler.test.ts > useReactToolScheduler > should schedule and execute multiple tool calls
AssertionError: expected { request: { …(3) }, …(6) } to match object { status: 'success', …(2) }
(20 matching properties omitted from actual)

[32m- Expected[39m
[31m+ Received[39m

[33m@@ -4,19 +4,33 @@[39m
[2m        "p": 1,[22m
[2m      },[22m
[2m      "callId": "multi1",[22m
[2m      "name": "tool1",[22m
[2m    },[22m
[32m-   "response": ObjectContaining {[39m
[32m-     "responseParts": {[39m
[31m+   "response": {[39m
[31m+     "callId": "multi1",[39m
[31m+     "error": undefined,[39m
[31m+     "errorType": undefined,[39m
[31m+     "responseParts": [[39m
[31m+       {[39m
[31m+         "functionCall": {[39m
[31m+           "args": {[39m
[31m+             "p": 1,[39m
[31m+           },[39m
[31m+           "id": "multi1",[39m
[31m+           "name": "tool1",[39m
[31m+         },[39m
[31m+       },[39m
[31m+       {[39m
[2m          "functionResponse": {[22m
[2m            "id": "multi1",[22m
[2m            "name": "tool1",[22m
[2m            "response": {[22m
[2m              "output": "Output 1",[22m
[2m            },[22m
[2m          },[22m
[2m        },[22m
[31m+     ],[39m
[2m      "resultDisplay": "Display 1",[22m
[2m    },[22m
[2m    "status": "success",[22m
[2m  }[22m

 ❯ src/ui/hooks/useToolScheduler.test.ts:768:25
    766|     );
    767| 
    768|     expect(call1Result).toMatchObject({
       |                         ^
    769|       status: 'success',
    770|       request: requests[0],

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[15/16]⎯


 Test Files  4 failed | 139 passed | 1 skipped (144)
      Tests  16 failed | 1946 passed | 20 skipped (1982)
   Start at  23:19:52
   Duration  22.11s (transform 4.54s, setup 1.81s, collect 105.99s, tests 29.37s, environment 45.25s, prepare 9.69s)

JUNIT report written to /Users/acoliver/projects/llxprt-code/packages/cli/junit.xml
npm error Lifecycle script `test` failed with error:
npm error code 1
npm error path /Users/acoliver/projects/llxprt-code/packages/cli
npm error workspace @vybestack/llxprt-code@0.1.23
npm error location /Users/acoliver/projects/llxprt-code/packages/cli
npm error command failed
npm error command sh -c vitest run


> @vybestack/llxprt-code-core@0.1.23 test
> vitest run


 RUN  v3.2.4 /Users/acoliver/projects/llxprt-code/packages/core
      Coverage enabled with v8

 ❯ src/services/history/findfiles-circular.test.ts (2 tests | 2 failed) 241ms
   × FindFiles Circular Reference Bug > getCuratedForProvider should handle FindFiles tool call with complex parameters 127ms
     → expected [] to have a length of 1 but got +0
   × FindFiles Circular Reference Bug > should handle tool calls with deeply nested circular references 113ms
     → expected [] to have a length of 1 but got +0
 ❯ src/integration/provider-switching-actual-flow.test.ts (3 tests | 2 failed) 181ms
   × Provider Switching - Actual Production Flow > traces tool call ID transformation through actual production flow 99ms
     → expected 'toolu_7e6a3cd4d' to be '7e6a3cd4d' // Object.is equality
   × Provider Switching - Actual Production Flow > traces where new IDs get generated in production flow 80ms
     → expected 'toolu_1757038815842_bcukg2afe' to match /^call_\d+_[a-z0-9]{9}$/
   ✓ Provider Switching - Actual Production Flow > simulates anthropic provider generating new response with new tool call 1ms
 ↓ src/integration/orphaned-tool-calls.behavioral.test.ts (3 tests | 3 skipped)
 ❯ src/integration/provider-switching-id-mismatch.behavioral.test.ts (6 tests | 1 failed) 131ms
   × Provider Switching ID Mismatch - Behavioral Test > reproduces ID mismatch when switching from OpenAI to Anthropic 127ms
     → j is not defined
   ✓ Provider Switching ID Mismatch - Behavioral Test > tests the actual provider switching scenario that reproduces the bug 1ms
   ✓ Provider Switching ID Mismatch - Behavioral Test > shows the exact transformation chain that causes the mismatch 0ms
   ✓ Provider Switching ID Mismatch - Behavioral Test > demonstrates the issue without MessageConverters normalization 0ms
   ✓ Provider Switching ID Mismatch - Behavioral Test > tries to reproduce the mysterious ID "c7be4a88a" scenario 1ms
   ✓ Provider Switching ID Mismatch - Behavioral Test > simulates ID regeneration scenario that could cause the mismatch 0ms
 ❯ src/services/history/circular-reference.test.ts (4 tests | 1 failed) 518ms
   ✓ Circular Reference Bug > should not create circular references when getCurated is called during tool execution 99ms
   ✓ Circular Reference Bug > should handle the exact sequence that causes the bug 141ms
   ✓ Circular Reference Bug > should not create synthetic responses when tool responses exist in full history 104ms
   × Circular Reference Bug > should handle complex nested parameters without circular references 172ms
     → expected false to be true // Object.is equality
 ❯ src/integration/provider-switching.test.ts (6 tests | 1 failed) 504ms
   ✓ Provider Switching Integration > should handle complete flow: OpenAI → History → Anthropic without 400 error 141ms
   ✓ Provider Switching Integration > should handle OpenAI → Gemini → Anthropic transitions 103ms
   ✓ Provider Switching Integration > should handle Anthropic → OpenAI transitions 101ms
   ✓ Provider Switching Integration > should maintain conversation continuity across multiple provider switches 147ms
   × Provider Switching Integration > ID Normalization Architecture - NEW FAILING TESTS > should use HistoryService callbacks throughout provider switching flow 10ms
     → expected 'hist_tool_original_123' to match /^hist_tool_[0-9a-f]{8}-[0-9a-f]{4}-4[…/
   ✓ Provider Switching Integration > ID Normalization Architecture - NEW FAILING TESTS > should verify NO internal ID generation in converters after refactor 0ms
 ❯ src/providers/__tests__/openai-responses-icontent-tool-call-flow.test.ts (1 test | 1 failed) 12ms
   × OpenAIResponsesProvider IContent Tool Call Flow > should handle tool call sequence correctly with IContent 11ms
     → expected 0 to be greater than 0
 ❯ src/core/geminiChat.behavioral.test.ts (16 tests | 14 failed) 113ms
   × GeminiChat - Behavioral Tests for HistoryService Migration > Basic Message Flow - Critical for HistoryService > should handle simple user message and AI response 8ms
     → No active provider configured
   × GeminiChat - Behavioral Tests for HistoryService Migration > Basic Message Flow - Critical for HistoryService > should handle conversation with multiple turns 0ms
     → No active provider configured
   × GeminiChat - Behavioral Tests for HistoryService Migration > Tool Call Flow - Critical for HistoryService > should handle tool calls and responses 0ms
     → No active provider configured
   × GeminiChat - Behavioral Tests for HistoryService Migration > Tool Call Flow - Critical for HistoryService > should handle multiple parallel tool calls correctly 0ms
     → No active provider configured
   × GeminiChat - Behavioral Tests for HistoryService Migration > Streaming - Critical for HistoryService > should handle streaming responses and accumulate history 1ms
     → No active provider configured
   × GeminiChat - Behavioral Tests for HistoryService Migration > Streaming - Critical for HistoryService > should handle streaming with tool calls 0ms
     → No active provider configured
   × GeminiChat - Behavioral Tests for HistoryService Migration > Streaming - Critical for HistoryService > should handle streaming errors and rollback history 3ms
     → expected 'No active provider configured' to be 'Stream error' // Object.is equality
   × GeminiChat - Behavioral Tests for HistoryService Migration > History Management - Core Functionality to Replace > should distinguish between curated and comprehensive history 0ms
     → No active provider configured
   ✓ GeminiChat - Behavioral Tests for HistoryService Migration > History Management - Core Functionality to Replace > should handle clearHistory 66ms
   ✓ GeminiChat - Behavioral Tests for HistoryService Migration > History Management - Core Functionality to Replace > should deep clone history on get 31ms
   × GeminiChat - Behavioral Tests for HistoryService Migration > System Instructions and Tools > should set system instruction 1ms
     → No active provider configured
   × GeminiChat - Behavioral Tests for HistoryService Migration > System Instructions and Tools > should set tools 0ms
     → No active provider configured
   × GeminiChat - Behavioral Tests for HistoryService Migration > Automatic Function Calling > should handle automatic function calling history 0ms
     → No active provider configured
   × GeminiChat - Behavioral Tests for HistoryService Migration > Thinking Blocks > should filter out thinking blocks from history 0ms
     → No active provider configured
   × GeminiChat - Behavioral Tests for HistoryService Migration > Edge Cases > should handle empty model responses 0ms
     → No active provider configured
   × GeminiChat - Behavioral Tests for HistoryService Migration > Edge Cases > should handle missing candidates in response 0ms
     → No active provider configured
 ❯ src/providers/__tests__/openai-icontent-tool-call-flow.test.ts (1 test | 1 failed) 13ms
   × OpenAIProvider IContent Tool Call Flow > should handle tool call sequence correctly with IContent 13ms
     → Failed to parse URL from undefined/chat/completions
 ❯ src/providers/__tests__/anthropic-icontent-hist-tool-id.test.ts (2 tests | 2 failed) 11ms
   × AnthropicProvider hist_tool ID conversion > should convert hist_tool_ IDs to toolu_ format when sending to Anthropic 9ms
     → Cannot read properties of undefined (reading 'map')
   × AnthropicProvider hist_tool ID conversion > should convert toolu_ IDs back to hist_tool_ format in responses 1ms
     → Cannot read properties of undefined (reading 'map')
 ❯ src/integration/provider-switching-real-flow.test.ts (4 tests | 1 failed) 464ms
   ✓ Provider Switching Real Flow - ID Mismatch Demonstration > demonstrates successful SAME-PROVIDER flow (OpenAI -> OpenAI) 129ms
   ✓ Provider Switching Real Flow - ID Mismatch Demonstration > demonstrates problematic CROSS-PROVIDER flow (OpenAI -> Anthropic) 108ms
   × Provider Switching Real Flow - ID Mismatch Demonstration > shows WHERE and WHY ID preservation works vs fails 131ms
     → expected 'toolu_openai_12345' to be 'call_openai_12345' // Object.is equality
   ✓ Provider Switching Real Flow - ID Mismatch Demonstration > demonstrates the actual production scenario that fails 95ms
 ❯ src/integration/wrapper-provider-switching.test.ts (3 tests | 2 failed) 11ms
   × GeminiCompatibleWrapper Provider Switching > 🔥 MUST convert Gemini format to Anthropic format when provider is Anthropic 7ms
     → expected 'tool' to be 'user' // Object.is equality
   ✓ GeminiCompatibleWrapper Provider Switching > 🔥 MUST convert Gemini format to OpenAI format when provider is OpenAI 1ms
   × GeminiCompatibleWrapper Provider Switching > 🔥 MUST handle orphaned tool responses correctly 0ms
     → expected 'tool' to be 'user' // Object.is equality
 ❯ src/providers/openai/buildResponsesRequest.stripToolCalls.test.ts (3 tests | 1 failed) 11ms
   × buildResponsesRequest - tool_calls stripping > should strip tool_calls from messages when building request 10ms
     → expected { role: 'assistant' } to deeply equal { role: 'assistant', content: '' }
   ✓ buildResponsesRequest - tool_calls stripping > should handle messages without tool_calls 0ms
   ✓ buildResponsesRequest - tool_calls stripping > should preserve usage data when stripping tool_calls 0ms
 ❯ src/providers/__tests__/openai-icontent-hist-tool-id.test.ts (2 tests | 2 failed) 11ms
   × OpenAIProvider hist_tool ID conversion > should convert hist_tool_ IDs to call_ format when sending to OpenAI 10ms
     → Cannot read properties of undefined (reading 'map')
   × OpenAIProvider hist_tool ID conversion > should convert call_ IDs back to hist_tool_ format in responses 1ms
     → Cannot read properties of undefined (reading 'map')
 ❯ src/services/HistoryService.test.ts (18 tests | 13 failed) 11ms
   × HistoryService - Tool ID Normalization > normalizing provider messages to history format > should generate history IDs for OpenAI tool calls 5ms
     → historyService.addMessage is not a function
   × HistoryService - Tool ID Normalization > normalizing provider messages to history format > should generate history IDs for Anthropic tool calls 0ms
     → historyService.addMessage is not a function
   × HistoryService - Tool ID Normalization > normalizing provider messages to history format > should generate history IDs for Gemini tool calls (no original ID) 0ms
     → historyService.addMessage is not a function
   × HistoryService - Tool ID Normalization > normalizing provider messages to history format > should match tool responses to tool calls using normalized IDs 0ms
     → historyService.addMessage is not a function
   × HistoryService - Tool ID Normalization > normalizing provider messages to history format > should handle multiple tool calls in single message 0ms
     → historyService.addMessage is not a function
   × HistoryService - Tool ID Normalization > converting history to provider format > should provide messages with history IDs for provider conversion 0ms
     → historyService.addMessage is not a function
   × HistoryService - Tool ID Normalization > converting history to provider format > should maintain tool call/response pairs with consistent IDs 0ms
     → historyService.addMessage is not a function
   × HistoryService - Tool ID Normalization > provider switching scenarios > should preserve ID relationships when switching providers mid-conversation 0ms
     → historyService.addMessage is not a function
   × HistoryService - Tool ID Normalization > Gemini position-based matching > should match Gemini responses by position when no IDs provided 0ms
     → historyService.addMessage is not a function
   ✓ HistoryService - Tool ID Normalization > Compression threshold and context limit settings > should respect ephemeral compression-threshold and context-limit settings 1ms
   ✓ HistoryService - Tool ID Normalization > Compression threshold and context limit settings > should use default compression threshold (85%) when not set 0ms
   ✓ HistoryService - Tool ID Normalization > Compression threshold and context limit settings > should handle different context limits correctly 1ms
   ✓ HistoryService - Tool ID Normalization > Compression threshold and context limit settings > should validate compression threshold is between 0 and 1 0ms
   ✓ HistoryService - Tool ID Normalization > Compression threshold and context limit settings > should validate context limit is positive integer 0ms
   × HistoryService - Tool ID Normalization > edge cases > should handle orphaned tool responses (no matching call) 0ms
     → historyService.addMessage is not a function
   × HistoryService - Tool ID Normalization > edge cases > should handle corrupted/missing IDs gracefully 0ms
     → historyService.addMessage is not a function
   × HistoryService - Tool ID Normalization > edge cases > should handle duplicate provider IDs correctly 0ms
     → historyService.addMessage is not a function
   × HistoryService - Tool ID Normalization > edge cases > should generate unique IDs even for duplicate tool names 0ms
     → historyService.addMessage is not a function
 ❯ src/providers/anthropic/AnthropicProvider.switching.test.ts (6 tests | 6 failed) 13ms
   × AnthropicProvider - Provider Switching > Real-world provider switching scenarios > should handle OpenAI/Qwen tool IDs when switching from OpenAI 6ms
     → provider.convertMessages is not a function
   × AnthropicProvider - Provider Switching > Real-world provider switching scenarios > should handle multiple tool calls with various ID formats 0ms
     → provider.convertMessages is not a function
   × AnthropicProvider - Provider Switching > Real-world provider switching scenarios > should handle Cerebras/Qwen specific ID formats 0ms
     → provider.convertMessages is not a function
   × AnthropicProvider - Provider Switching > Real-world provider switching scenarios > should not fail when tool_call_id is missing or empty 3ms
     → expected [Function] to not throw an error but 'TypeError: provider.convertMessages i…' was thrown
   × AnthropicProvider - Provider Switching > ID normalization requirements > should ensure all tool_use blocks have valid Anthropic IDs 0ms
     → provider.convertMessages is not a function
   × AnthropicProvider - Provider Switching > ID normalization requirements > should maintain ID consistency across tool call/response pairs 0ms
     → provider.convertMessages is not a function
 ❯ src/integration/gemini-provider-switching.test.ts (6 tests | 2 failed) 9ms
   ✓ Gemini Provider Switching - MUST FAIL FIRST > 🔥 MUST normalize Gemini tool call IDs to history format 2ms
   × Gemini Provider Switching - MUST FAIL FIRST > 🎯 MUST handle Gemini → OpenAI provider switch without 400 5ms
     → expected 'call_gemini_12345' not to contain 'gemini'
   ✓ Gemini Provider Switching - MUST FAIL FIRST > 💥 MUST handle Gemini → Anthropic provider switch 0ms
   ✓ Gemini Provider Switching - MUST FAIL FIRST > 💣 MUST handle OpenAI/Qwen SHORT ID format tool calls and responses 0ms
   ✓ Gemini Provider Switching - MUST FAIL FIRST > 🚨 MUST convert tool RESPONSES correctly when switching providers 0ms
   × Gemini Provider Switching - MUST FAIL FIRST > ⚠️ MUST handle orphaned tool responses after provider switch 0ms
     → historyService.addMessage is not a function
 ❯ src/integration/orphaned-tool-response.test.ts (2 tests | 2 failed) 4ms
   × REAL BUG: Orphaned Tool Response > 🔥 MUST handle orphaned tool response when switching providers 3ms
     → historyService.addMessage is not a function
   × REAL BUG: Orphaned Tool Response > 🔥 MUST filter out orphaned tool responses when no matching call exists 0ms
     → historyService.addMessage is not a function
 ❯ src/integration/production-bug-simulation.test.ts (2 tests | 2 failed) 4ms
   × PRODUCTION BUG: Provider Switching with Tool Calls > 🔥 MUST handle real production scenario: Qwen -> Anthropic switch with orphaned tool response 3ms
     → historyService.addMessage is not a function
   × PRODUCTION BUG: Provider Switching with Tool Calls > 🔥 MUST NOT send Gemini format (functionResponse) to Anthropic 0ms
     → historyService.addMessage is not a function
 ❯ src/core/geminiChat.test.ts (27 tests | 8 failed) 1022ms
   × GeminiChat > sendMessage > should call generateContent with the correct parameters 8ms
     → this.config.getEphemeralSetting is not a function
   × GeminiChat > sendMessageStream > should call generateContentStream with the correct parameters 0ms
     → this.config.getEphemeralSetting is not a function
   ✓ GeminiChat > recordHistory > should add user input and a single model output to history 58ms
   ✓ GeminiChat > recordHistory > should consolidate adjacent model outputs 31ms
   ✓ GeminiChat > recordHistory > should handle a mix of user and model roles in outputContents (though unusual) 36ms
   ✓ GeminiChat > recordHistory > should consolidate multiple adjacent model outputs correctly 33ms
   ✓ GeminiChat > recordHistory > should not consolidate if roles are different between model outputs 39ms
   ✓ GeminiChat > recordHistory > should merge with last history entry if it is also a model output 90ms
   ✓ GeminiChat > recordHistory > should correctly merge consolidated new output with existing model history 45ms
   ✓ GeminiChat > recordHistory > should handle empty modelOutput array 56ms
   ✓ GeminiChat > recordHistory > should handle aggregating modelOutput 47ms
   ✓ GeminiChat > recordHistory > should handle modelOutput with parts being undefined or empty (if they pass initial every check) 45ms
   ✓ GeminiChat > recordHistory > should correctly handle automaticFunctionCallingHistory 48ms
   ✓ GeminiChat > recordHistory > should add userInput if AFC history is present but empty 55ms
   ✓ GeminiChat > recordHistory > should skip "thought" content from modelOutput 39ms
   ✓ GeminiChat > recordHistory > should skip "thought" content even if it is the only content 44ms
   ✓ GeminiChat > recordHistory > should correctly consolidate text parts when a thought part is in between 40ms
   ✓ GeminiChat > recordHistory > should handle multiple thought parts correctly 47ms
   ✓ GeminiChat > recordHistory > should handle thought part at the end of outputContents 103ms
   ✓ GeminiChat > addHistory > should add a new content item to the history 52ms
   ✓ GeminiChat > addHistory > should add multiple items correctly 63ms
   × GeminiChat > sendMessageStream with retries > should retry on invalid content and succeed on the second attempt 1ms
     → this.config.getEphemeralSetting is not a function
   × GeminiChat > sendMessageStream with retries > should fail after all retries on persistent invalid content 2ms
     → expected error to be instance of EmptyStreamError
   × GeminiChat > should correctly retry and append to an existing history mid-conversation 37ms
     → this.config.getEphemeralSetting is not a function
   × GeminiChat > concurrency control > should queue a subsequent sendMessage call until the first one completes 1ms
     → expected "spy" to be called 1 times, but got 0 times
   × GeminiChat > should retry if the model returns a completely empty stream (no chunks) 0ms
     → this.config.getEphemeralSetting is not a function
   × GeminiChat > should queue a subsequent sendMessageStream call until the first stream is fully consumed 0ms
     → this.config.getEphemeralSetting is not a function
 ❯ src/core/client.test.ts (48 tests | 1 failed | 7 skipped) 65ms
   ✓ findIndexAfterFraction > should throw an error for non-positive numbers 2ms
   ✓ findIndexAfterFraction > should throw an error for a fraction greater than or equal to 1 0ms
   ✓ findIndexAfterFraction > should handle a fraction in the middle 0ms
   ✓ findIndexAfterFraction > should handle a fraction that results in the last index 0ms
   ✓ findIndexAfterFraction > should handle an empty history 0ms
   ✓ findIndexAfterFraction > should handle a history with only one item 0ms
   ✓ findIndexAfterFraction > should handle history with weird parts 0ms
   ✓ Gemini Client (client.ts) > generateEmbedding > should call embedContent and return embeddings for valid input 4ms
   ✓ Gemini Client (client.ts) > generateEmbedding > should return an empty array if an empty array is passed 1ms
   ✓ Gemini Client (client.ts) > generateEmbedding > should throw an error if API response has no embeddings array 1ms
   ✓ Gemini Client (client.ts) > generateEmbedding > should throw an error if API response has an empty embeddings array 1ms
   ✓ Gemini Client (client.ts) > generateEmbedding > should throw an error if API returns a mismatched number of embeddings 1ms
   ✓ Gemini Client (client.ts) > generateEmbedding > should throw an error if any embedding has nullish values 1ms
   ✓ Gemini Client (client.ts) > generateEmbedding > should throw an error if any embedding has an empty values array 1ms
   ✓ Gemini Client (client.ts) > generateEmbedding > should propagate errors from the API call 1ms
   ✓ Gemini Client (client.ts) > generateJson > should call generateContent with the correct parameters 2ms
   ✓ Gemini Client (client.ts) > generateJson > should allow overriding model and config 1ms
   × Gemini Client (client.ts) > resetChat > should create a new chat session, clearing the old history 9ms
     → this.chat.getHistoryService is not a function
   ✓ Gemini Client (client.ts) > sendMessageStream > should include editor context when ideMode is enabled 2ms
   ✓ Gemini Client (client.ts) > sendMessageStream > should not add context if ideMode is enabled but no open files 1ms
   ✓ Gemini Client (client.ts) > sendMessageStream > should add context if ideMode is enabled and there is one active file 1ms
   ✓ Gemini Client (client.ts) > sendMessageStream > should add context if ideMode is enabled and there are open files but no active file 1ms
   ✓ Gemini Client (client.ts) > sendMessageStream > should return the turn instance after the stream is complete 1ms
   ↓ Gemini Client (client.ts) > sendMessageStream > should stop infinite loop after MAX_TURNS when nextSpeaker always returns model
   ✓ Gemini Client (client.ts) > sendMessageStream > should yield MaxSessionTurns and stop when session turn limit is reached 1ms
   ↓ Gemini Client (client.ts) > sendMessageStream > should respect MAX_TURNS limit even when turns parameter is set to a large value
   ✓ Gemini Client (client.ts) > sendMessageStream > Editor context delta > 'sends delta when active file changes' 1ms
   ✓ Gemini Client (client.ts) > sendMessageStream > Editor context delta > 'sends delta when cursor line changes' 1ms
   ✓ Gemini Client (client.ts) > sendMessageStream > Editor context delta > 'sends delta when cursor character cha…' 4ms
   ✓ Gemini Client (client.ts) > sendMessageStream > Editor context delta > 'sends delta when selected text changes' 1ms
   ✓ Gemini Client (client.ts) > sendMessageStream > Editor context delta > 'sends delta when selected text is add…' 2ms
   ✓ Gemini Client (client.ts) > sendMessageStream > Editor context delta > 'sends delta when selected text is rem…' 1ms
   ✓ Gemini Client (client.ts) > sendMessageStream > Editor context delta > 'does not send context when nothing ch…' 2ms
   ✓ Gemini Client (client.ts) > sendMessageStream > Editor context delta > sends full context when history is cleared, even if editor state is unchanged 2ms
   ✓ Gemini Client (client.ts) > sendMessageStream > IDE context with pending tool calls > should NOT add IDE context when a tool call is pending 1ms
   ✓ Gemini Client (client.ts) > sendMessageStream > IDE context with pending tool calls > should add IDE context when no tool call is pending 1ms
   ✓ Gemini Client (client.ts) > sendMessageStream > IDE context with pending tool calls > should send the latest IDE context on the next message after a skipped context 1ms
   ✓ Gemini Client (client.ts) > sendMessageStream > IDE context with pending tool calls > should send a context DELTA on the next message after a skipped context 1ms
   ↓ Gemini Client (client.ts) > updateModel > should update model in config and reinitialize chat
   ↓ Gemini Client (client.ts) > listAvailableModels > should fetch models from API for GEMINI auth type
   ↓ Gemini Client (client.ts) > listAvailableModels > should return OAuth marker for OAuth auth types
   ↓ Gemini Client (client.ts) > listAvailableModels > should return empty array when API call fails
   ↓ Gemini Client (client.ts) > listAvailableModels > should return empty array for unsupported auth type
   ✓ Gemini Client (client.ts) > setHistory > should strip thought signatures when stripThoughts is true 2ms
   ✓ Gemini Client (client.ts) > setHistory > should not strip thought signatures when stripThoughts is false 3ms
   ✓ Gemini Client (client.ts) > setHistory > should store history for later use when chat is not initialized 2ms
   ✓ Gemini Client (client.ts) > setHistory > should update chat immediately when chat is initialized 2ms
   ✓ Gemini Client (client.ts) > setHistory > should reset IDE context tracking when history changes 1ms
 ✓ src/integration/compression-duplicate-ids.test.ts (2 tests) 440ms
 ✓ src/providers/openai/OpenAIProvider.stateful.integration.test.ts (2 tests | 1 skipped) 1081ms
   ✓ OpenAIProvider Stateful Integration > should not break stateless models by correctly passing full message history  1079ms
 ✓ src/prompt-config/prompt-service.test.ts (43 tests) 1483ms
 ❯ src/providers/__tests__/gemini-icontent-hist-tool-id.test.ts (2 tests | 2 failed) 9ms
   × GeminiProvider hist_tool ID preservation > should preserve hist_tool_ IDs without modification 7ms
     → Web search requires Gemini authentication, but no API key is set and OAuth is disabled
   × GeminiProvider hist_tool ID preservation > should preserve hist_tool_ IDs in responses without modification 0ms
     → Web search requires Gemini authentication, but no API key is set and OAuth is disabled
 ❯ src/providers/__tests__/gemini-icontent-tool-call-flow.test.ts (2 tests | 2 failed) 10ms
   × GeminiProvider IContent Tool Call Flow > should handle tool call sequence correctly with IContent 9ms
     → Web search requires Gemini authentication, but no API key is set and OAuth is disabled
   × GeminiProvider IContent Tool Call Flow > should correctly serialize/deserialize Gemini tool call responses 0ms
     → Web search requires Gemini authentication, but no API key is set and OAuth is disabled
 ✓ src/prompt-config/prompt-loader.test.ts (44 tests) 812ms
   ✓ PromptLoader > watchFiles > should notify on file changes  304ms
 ✓ src/tools/glob.test.ts (32 tests) 1642ms
 ✓ src/services/history/compression-locking.test.ts (4 tests) 512ms
 ✓ src/tools/read-many-files.test.ts (38 tests) 651ms
 ✓ src/prompt-config/prompt-installer.test.ts (47 tests) 276ms
 ✓ src/core/logger.test.ts (38 tests) 262ms
 ❯ src/providers/openai-responses/OpenAIResponsesProvider.icontent.test.ts (5 tests | 5 failed) 3559ms
   × OpenAIResponsesProvider IContent Integration > generateChatCompletionIContent > should convert IContent to IMessage format correctly 977ms
     → Incorrect API key provided: test-api-key. You can find your API key at https://platform.openai.com/account/api-keys.
   × OpenAIResponsesProvider IContent Integration > generateChatCompletionIContent > should handle tool calls correctly with hist_tool_ prefix conversion 729ms
     → Incorrect API key provided: test-api-key. You can find your API key at https://platform.openai.com/account/api-keys.
   × OpenAIResponsesProvider IContent Integration > generateChatCompletionIContent > should handle streaming text correctly 604ms
     → Incorrect API key provided: test-api-key. You can find your API key at https://platform.openai.com/account/api-keys.
   × OpenAIResponsesProvider IContent Integration > generateChatCompletionIContent > should convert tool responses with hist_tool_ prefix back to call_ 625ms
     → Incorrect API key provided: test-api-key. You can find your API key at https://platform.openai.com/account/api-keys.
   × OpenAIResponsesProvider IContent Integration > generateChatCompletionIContent > should accumulate tool calls during streaming 622ms
     → Incorrect API key provided: test-api-key. You can find your API key at https://platform.openai.com/account/api-keys.
 ❯ src/services/history/HistoryService.test.ts (20 tests | 1 failed) 1649ms
   ✓ HistoryService - Behavioral Tests > Realistic Conversation Flow > should handle a complete tool-use conversation flow 100ms
   ✓ HistoryService - Behavioral Tests > Realistic Conversation Flow > should handle multiple tool calls in sequence 78ms
   ✓ HistoryService - Behavioral Tests > Realistic Conversation Flow > should handle parallel tool calls 66ms
   ✓ HistoryService - Behavioral Tests > Realistic Conversation Flow > should handle failed tool calls 102ms
   ✓ HistoryService - Behavioral Tests > Realistic Conversation Flow > should handle mixed content types 87ms
   ✓ HistoryService - Behavioral Tests > History Management > should return curated history without empty or invalid content 86ms
   ✓ HistoryService - Behavioral Tests > History Management > should track conversation statistics 109ms
   ✓ HistoryService - Behavioral Tests > History Management > should handle recordTurn for complete conversation turns 191ms
   × HistoryService - Behavioral Tests > History Management > should validate and fix unmatched tool calls 82ms
     → expected [] to have a length of 1 but got +0
   ✓ HistoryService - Behavioral Tests > Token Management > should return history within token limits 79ms
   ✓ HistoryService - Behavioral Tests > Token Management > should handle history summarization for old messages 99ms
   ✓ HistoryService - Behavioral Tests > Import/Export > should export and import history via JSON 193ms
   ✓ HistoryService - Behavioral Tests > Edge Cases > should handle empty history operations 2ms
   ✓ HistoryService - Behavioral Tests > Edge Cases > should handle thinking blocks appropriately 87ms
   ✓ HistoryService - Behavioral Tests > Edge Cases > should handle media blocks 277ms
   ✓ HistoryService - Behavioral Tests > ID Normalization Architecture - NEW FAILING TESTS > HistoryService as ONLY ID generator > should be the ONLY source of ID generation with generateHistoryId method 2ms
   ✓ HistoryService - Behavioral Tests > ID Normalization Architecture - NEW FAILING TESTS > HistoryService as ONLY ID generator > should provide ID generation callback to converters 0ms
   ✓ HistoryService - Behavioral Tests > ID Normalization Architecture - NEW FAILING TESTS > Converter integration with HistoryService callbacks > should pass ID generation callbacks to MessageConverters.toIContent 1ms
   ✓ HistoryService - Behavioral Tests > ID Normalization Architecture - NEW FAILING TESTS > No internal ID generation in converters > should NOT generate IDs internally in MessageConverters 0ms
   ✓ HistoryService - Behavioral Tests > ID Normalization Architecture - NEW FAILING TESTS > No internal ID generation in converters > should NOT generate IDs internally in ContentConverters 0ms
 ✓ src/tools/grep.test.ts (23 tests) 467ms
 ✓ src/prompt-config/prompt-resolver.test.ts (56 tests) 315ms
 ✓ src/utils/filesearch/fileSearch.test.ts (24 tests) 407ms
 ✓ src/utils/bfsFileSearch.test.ts (11 tests) 293ms
 ✓ src/services/history/orphaned-tools-comprehensive.test.ts (9 tests | 4 skipped) 719ms
 ✓ src/services/gitService.test.ts (14 tests) 202ms
 ✓ src/utils/filesearch/crawler.test.ts (18 tests) 143ms
 ❯ src/debug/DebugLogger.test.ts (36 tests | 1 failed | 1 skipped) 291ms
   ✓ DebugLogger > should create logger with namespace @plan:PLAN-20250120-DEBUGLOGGING.P04 5ms
   ✓ DebugLogger > should not evaluate function when disabled @plan:PLAN-20250120-DEBUGLOGGING.P04 1ms
   ✓ DebugLogger > should evaluate function when enabled @plan:PLAN-20250120-DEBUGLOGGING.P04 2ms
   ✓ DebugLogger > should match wildcard namespaces @plan:PLAN-20250120-DEBUGLOGGING.P04 0ms
   ✓ DebugLogger > should have zero overhead when disabled @plan:PLAN-20250120-DEBUGLOGGING.P04 0ms
   ✓ DebugLogger > should redact sensitive data @plan:PLAN-20250120-DEBUGLOGGING.P04 0ms
   ✓ DebugLogger > should filter messages based on log level @plan:PLAN-20250120-DEBUGLOGGING.P04 0ms
   ✓ DebugLogger > should log error messages with proper format @plan:PLAN-20250120-DEBUGLOGGING.P04 0ms
   ✓ DebugLogger > should handle multiple log arguments @plan:PLAN-20250120-DEBUGLOGGING.P04 1ms
   ✓ DebugLogger > should match complex namespace patterns @plan:PLAN-20250120-DEBUGLOGGING.P04 0ms
   ✓ DebugLogger > should match exact namespace patterns @plan:PLAN-20250120-DEBUGLOGGING.P04 0ms
   ✓ DebugLogger > should match multiple namespace patterns @plan:PLAN-20250120-DEBUGLOGGING.P04 0ms
   ✓ DebugLogger > should log string messages @plan:PLAN-20250120-DEBUGLOGGING.P04 0ms
   ✓ DebugLogger > should include ISO timestamp in log entries @plan:PLAN-20250120-DEBUGLOGGING.P04 0ms
   ✓ DebugLogger > should maintain reasonable performance when enabled @plan:PLAN-20250120-DEBUGLOGGING.P04 0ms
   ✓ DebugLogger > should integrate with config manager @plan:PLAN-20250120-DEBUGLOGGING.P04 0ms
   ✓ DebugLogger > should integrate with file output @plan:PLAN-20250120-DEBUGLOGGING.P04 0ms
   ✓ DebugLogger > should not match unrelated namespace patterns @plan:PLAN-20250120-DEBUGLOGGING.P04 0ms
   ✓ DebugLogger > should log debug messages at debug level @plan:PLAN-20250120-DEBUGLOGGING.P04 0ms
   ✓ DebugLogger > should handle function evaluation with additional arguments @plan:PLAN-20250120-DEBUGLOGGING.P04 0ms
   ✓ DebugLogger > should not accumulate memory when disabled @plan:PLAN-20250120-DEBUGLOGGING.P04 0ms
   ✓ DebugLogger > should handle any namespace string @plan:PLAN-20250120-DEBUGLOGGING.P04 6ms
   ✓ DebugLogger > should handle any message type when disabled @plan:PLAN-20250120-DEBUGLOGGING.P04 20ms
   ✓ DebugLogger > should handle any string message when enabled @plan:PLAN-20250120-DEBUGLOGGING.P04 12ms
   ✓ DebugLogger > should consistently match namespace patterns @plan:PLAN-20250120-DEBUGLOGGING.P04 25ms
   ↓ DebugLogger > should maintain consistent performance across different message types @plan:PLAN-20250120-DEBUGLOGGING.P04
   ✓ DebugLogger > should handle any combination of arguments @plan:PLAN-20250120-DEBUGLOGGING.P04 32ms
   ✓ DebugLogger > should handle multiple namespace patterns correctly @plan:PLAN-20250120-DEBUGLOGGING.P04 33ms
   ✓ DebugLogger > should handle log levels consistently @plan:PLAN-20250120-DEBUGLOGGING.P04 5ms
   × DebugLogger > should maintain stable memory usage when disabled @plan:PLAN-20250120-DEBUGLOGGING.P04 68ms
     → Property failed after 63 tests
{ seed: -2113306138, path: "62", endOnFailure: true }
Counterexample: [["1-JXgU/7KC","_",".,=F3c","w=9m",">0!@","","ZTj.im","#!","$!aV","lk:-HKq*6^","","__proto__","e","s,+R","Epr",",qi,H[YHu",")JM","7)T4b)","~rO+|@'B","pro"]]
Shrunk 0 time(s)

Hint: Enable verbose mode in order to have the list of all failing values encountered during the run
   ✓ DebugLogger > should handle function evaluation consistently @plan:PLAN-20250120-DEBUGLOGGING.P04 35ms
   ✓ DebugLogger > enhanced pattern matching > should match wildcards in middle of pattern 1ms
   ✓ DebugLogger > enhanced pattern matching > should match multiple wildcards in pattern 1ms
   ✓ DebugLogger > enhanced pattern matching > should match wildcard at start of pattern 1ms
   ✓ DebugLogger > enhanced pattern matching > should not match partial namespace without wildcard 0ms
   ✓ DebugLogger > enhanced pattern matching > should correctly filter with mixed wildcard patterns 33ms
 ✓ src/tools/read-file.test.ts (24 tests) 198ms
 ✓ src/auth/token-store.spec.ts (20 tests) 173ms
 ✓ src/utils/memoryDiscovery.test.ts (12 tests) 276ms
 ✓ src/services/loopDetectionService.test.ts (33 tests) 525ms
 ✓ src/mcp/oauth-provider.test.ts (19 tests) 144ms
 ✓ src/filters/EmojiFilter.property.test.ts (30 tests) 169ms
 ✓ src/core/prompts-async.test.ts (9 tests | 1 skipped) 58ms
 ✓ src/core/contentGenerator.test.ts (7 tests) 5ms
 ✓ src/tools/mcp-tool.test.ts (32 tests) 79ms
 ✓ src/tools/shell.test.ts (20 tests) 94ms
 ✓ src/utils/getFolderStructure.test.ts (15 tests) 166ms
 ✓ src/utils/memoryImportProcessor.test.ts (27 tests) 36ms
 ✓ src/utils/fileUtils.test.ts (40 tests) 64ms
 ✓ src/utils/flashFallback.integration.test.ts (4 tests) 152ms
 ✓ src/utils/gitIgnoreParser.test.ts (18 tests) 79ms
 ✓ src/tools/todo-store.test.ts (12 tests) 28ms
 ✓ src/services/fileDiscoveryService.test.ts (13 tests) 109ms
 ✓ src/tools/edit.test.ts (42 tests) 122ms
 ✓ src/core/prompts.test.ts (6 tests) 89ms
 ✓ src/core/geminiChat.icontent.test.ts (11 tests) 159ms
 ✓ src/tools/ls.test.ts (22 tests) 60ms
 ✓ src/tools/write-file.test.ts (28 tests) 104ms
 ✓ src/tools/memoryTool.test.ts (19 tests) 33ms
 ✓ src/tools/modifiable-tool.test.ts (11 tests) 30ms
 ✓ src/utils/user_account.test.ts (23 tests) 33ms
 ✓ src/services/shellExecutionService.test.ts (30 tests) 90ms
 ✓ src/utils/schemaValidator.test.ts (7 tests) 28ms
 ✓ src/utils/workspaceContext.test.ts (34 tests) 39ms
 ✓ src/utils/filesearch/ignore.test.ts (12 tests) 38ms
 ✓ src/tools/web-search.test.ts (13 tests) 46ms
 ✓ src/utils/retry.test.ts (13 tests) 37ms
 ✓ src/tools/shell.multibyte.test.ts (1 test) 23ms
 ✓ src/telemetry/metrics.test.ts (11 tests) 56ms
 ✓ src/utils/errorReporting.test.ts (6 tests) 37ms
 ✓ src/tools/web-fetch.test.ts (4 tests) 19ms
 ✓ src/services/ClipboardService.test.ts (7 tests) 18ms
 ✓ src/utils/environmentContext.test.ts (8 tests) 29ms
 ✓ src/auth/oauth-errors.spec.ts (38 tests | 2 skipped) 45ms
 ✓ src/utils/editor.test.ts (108 tests) 18ms
 ✓ src/tools/todo-schemas.test.ts (26 tests) 7ms
 ✓ src/tools/web-fetch.integration.test.ts (22 tests) 61ms
 ✓ src/telemetry/uiTelemetry.test.ts (19 tests) 38ms
 ✓ src/config/profileManager.test.ts (17 tests) 10ms
 ✓ src/utils/editCorrector.test.ts (40 tests) 12ms
 ✓ src/parsers/TextToolCallParser.test.ts (15 tests) 10ms
 ✓ src/utils/systemEncoding.test.ts (38 tests) 10ms
 ✓ src/prompt-config/prompt-cache.test.ts (42 tests) 13ms
 ✓ src/providers/adapters/GeminiCompatibleWrapper.test.ts (4 tests) 9ms
 ✓ src/utils/summarizer.test.ts (8 tests) 15ms
 ✓ src/integration/provider-switching-anthropic-api.test.ts (3 tests) 12ms
 ✓ src/tools/tool-registry.test.ts (10 tests) 18ms
 ✓ src/debug/ConfigurationManager.test.ts (25 tests) 11ms
 ✓ src/code_assist/server.test.ts (7 tests) 10ms
 ✓ src/filters/EmojiFilter.test.ts (64 tests) 9ms
 ✓ src/config/config.test.ts (36 tests) 15ms
 ✓ src/providers/__tests__/gemini-tool-call-flow.test.ts (1 test) 51ms
 ✓ src/tools/mcp-client.test.ts (37 tests) 36ms
 ✓ src/core/coreToolScheduler.test.ts (22 tests | 5 skipped) 34ms
 ✓ src/core/subagent.test.ts (19 tests) 32ms
 ✓ src/utils/secure-browser-launcher.test.ts (14 tests) 10ms
 ✓ src/providers/openai/parseResponsesStream.responsesToolCalls.test.ts (7 tests) 9ms
 ✓ src/debug/FileOutput.test.ts (15 tests) 10ms
 ✓ src/auth/auth-integration.spec.ts (11 tests) 10ms
 ✓ src/tools/ToolFormatter.test.ts (18 tests) 8ms
 ✓ src/providers/anthropic/AnthropicProvider.test.ts (11 tests) 10ms
 ✓ src/utils/paths.test.ts (55 tests) 4ms
 ✓ src/tools/todo-write.test.ts (19 tests) 10ms
 ✓ src/mcp/oauth-token-storage.test.ts (21 tests) 8ms
 ✓ src/providers/openai/openai-oauth.spec.ts (24 tests) 9ms
 ✓ src/utils/shell-utils.test.ts (49 tests) 9ms
 ✓ src/tools/todo-read.test.ts (13 tests) 8ms
 ✓ src/code_assist/setup.test.ts (7 tests) 11ms
 ✓ src/providers/openai/buildResponsesRequest.test.ts (22 tests) 7ms
 ✓ src/utils/generateContentResponseUtilities.test.ts (36 tests) 4ms
 ✓ src/tools/diffOptions.test.ts (9 tests) 4ms
 ✓ src/services/shellExecutionService.windows.multibyte.test.ts (5 tests | 1 skipped) 6ms
 ✓ src/providers/anthropic/AnthropicProvider.oauth.test.ts (10 tests) 8ms
 ✓ src/config/config.alwaysAllow.test.ts (9 tests) 5ms
 ✓ src/integration-tests/settings-remediation.test.ts (14 tests) 12ms
 ✓ src/telemetry/telemetry.test.ts (2 tests) 7ms
 ✓ src/providers/BaseProvider.test.ts (20 tests) 7ms
 ✓ src/providers/openai/OpenAIProvider.switch.test.ts (5 tests | 2 skipped) 8ms
 ✓ src/config/endpoints.test.ts (26 tests) 4ms
 ✓ src/providers/__tests__/anthropic-tool-call-flow.test.ts (1 test) 5ms
 ✓ src/services/history/ContentConverters.test.ts (30 tests) 8ms
 ✓ src/utils/filesearch/crawlCache.test.ts (9 tests) 8ms
 ✓ src/providers/ProviderManager.test.ts (23 tests) 6ms
 ✓ src/mcp/oauth-utils.test.ts (19 tests) 6ms
 ✓ src/core/turn.test.ts (12 tests) 7ms
 ✓ test/settings/SettingsService.spec.ts (31 tests) 7ms
 ✓ src/ide/ideContext.test.ts (16 tests) 5ms
 ✓ src/prompt-config/TemplateEngine.test.ts (29 tests) 6ms
 ✓ src/providers/__tests__/openai-tool-call-flow.test.ts (1 test) 6ms
 ✓ src/providers/gemini/GeminiProvider.integration.test.ts (3 tests) 5ms
 ✓ src/tools/tools.test.ts (11 tests) 4ms
 ✓ src/mcp/google-auth-provider.test.ts (4 tests) 7ms
 ✓ src/services/shellExecutionService.multibyte.test.ts (2 tests) 4ms
 ❯ src/core/nonInteractiveToolExecutor.test.ts (6 tests | 6 failed) 14ms
   × executeToolCall > should execute a tool successfully 8ms
     → expected [ { functionCall: { …(3) } }, …(1) ] to deeply equal { functionResponse: { …(3) } }
   × executeToolCall > should return an error if tool is not found 1ms
     → expected [ { functionCall: { …(3) } }, …(1) ] to deeply equal { functionResponse: { …(3) } }
   × executeToolCall > should return an error if tool validation fails 2ms
     → expected { callId: 'call3', …(4) } to strictly equal { callId: 'call3', …(4) }
   × executeToolCall > should return an error if tool execution fails 1ms
     → expected { callId: 'call4', …(4) } to strictly equal { callId: 'call4', …(4) }
   × executeToolCall > should return an unhandled exception error if execution throws 1ms
     → expected [ { functionCall: { …(3) } }, …(1) ] to deeply equal { functionResponse: { …(3) } }
   × executeToolCall > should correctly format llmContent with inlineData 1ms
     → expected [ { functionCall: { …(3) } }, …(1) ] to deeply equal { functionResponse: { …(3) } }
 ✓ src/code_assist/converter.test.ts (17 tests) 3ms
 ✓ src/integration-tests/profile-integration.test.ts (4 tests) 7ms
 ✓ src/utils/toolOutputLimiter.test.ts (14 tests) 6ms
 ✓ src/providers/openai/estimateRemoteTokens.test.ts (10 tests) 3ms
 ✓ src/providers/openai/parseResponsesStream.test.ts (11 tests | 5 skipped) 2ms
 ✓ src/telemetry/loggers.test.ts (13 tests) 8ms
 ✓ src/integration-tests/provider-settings-integration.spec.ts (4 tests) 4ms
 ✓ src/tools/ToolFormatter.toResponsesTool.test.ts (6 tests) 3ms
 ✓ src/providers/__tests__/anthropic-icontent-tool-call-flow.test.ts (1 test) 9ms
 ✓ src/auth/precedence.test.ts (19 tests) 6ms
 ✓ src/utils/unicodeUtils.test.ts (15 tests) 3ms
 ✓ src/tools/todo-pause.spec.ts (21 tests) 3ms
 ✓ src/core/googleGenAIWrapper.test.ts (3 tests) 22ms
 ✓ src/utils/partUtils.test.ts (23 tests) 3ms
 ✓ src/utils/shell-utils.shellReplacement.test.ts (14 tests) 7ms
 ✓ src/providers/anthropic/AnthropicProvider.modelParams.test.ts (6 tests) 4ms
 ✓ src/services/fileSystemService.test.ts (3 tests) 4ms
 ✓ src/utils/errorParsing.test.ts (21 tests) 4ms
 ✓ src/core/tokenLimits.test.ts (15 tests) 2ms
 ✓ src/ide/ide-client.test.ts (7 tests | 1 skipped) 4ms
 ✓ src/parsers/TextToolCallParser.multibyte.test.ts (1 test) 7ms
 ✓ src/services/tool-call-tracker-service.test.ts (5 tests) 4ms
 ✓ test/settings/model-diagnostics.test.ts (5 tests) 3ms
 ✓ src/ide/ide-installer.test.ts (2 tests) 4ms
 ✓ src/code_assist/oauth2.e2e.test.ts (1 test) 3ms
 ✓ src/providers/openai/__tests__/formatArrayResponse.test.ts (13 tests) 2ms
 ✓ src/integration-tests/todo-system.test.ts (1 test) 3ms
 ✓ src/utils/sanitization.test.ts (14 tests) 7ms
 ✓ src/utils/filesearch/result-cache.test.ts (3 tests) 2ms
 ✓ src/code_assist/oauth2.test.ts (3 tests) 2ms
 ✓ src/utils/safeJsonStringify.test.ts (8 tests) 2ms
 ✓ src/providers/openai/buildResponsesRequest.undefined.test.ts (3 tests) 2ms
 ✓ src/utils/user_id.test.ts (1 test) 2ms
 ✓ src/providers/openai/ConversationCache.accumTokens.test.ts (9 tests) 2ms
 ✓ src/ide/detect-ide.test.ts (11 tests) 2ms
 ✓ src/hooks/tool-render-suppression-hook.test.ts (2 tests) 2ms
 ✓ src/providers/gemini/GeminiProvider.test.ts (7 tests) 2ms
 ✓ src/index.test.ts (1 test) 1ms
 ✓ src/config/config.ephemeral.test.ts (9 tests) 4ms
 ✓ src/providers/gemini/GeminiProvider.e2e.test.ts (3 tests) 2ms
 ✓ src/providers/ProviderManager.gemini-switch.test.ts (3 tests) 4ms
 ✓ src/providers/integration/multi-provider.integration.test.ts (11 tests | 1 skipped) 4ms
 ↓ src/services/shellExecutionService.windows.test.ts (3 tests | 3 skipped)
 ↓ src/providers/openai/OpenAIProvider.callResponses.stateless.test.ts (5 tests | 5 skipped)
 ↓ src/providers/openai/OpenAIProvider.integration.test.ts (3 tests | 3 skipped)
 ✓ src/config/flashFallback.test.ts (6 tests) 3ms
 ↓ src/providers/openai/OpenAIProvider.responsesIntegration.test.ts (6 tests | 6 skipped)
 ↓ src/providers/openai/ResponsesContextTrim.integration.test.ts (4 tests | 4 skipped)
 ✓ src/tools/mcp-client-manager.test.ts (1 test) 2ms
 ✓ src/core/__tests__/compression.test.ts (1 test) 2ms
 ✓ src/core/__tests__/compression-logic.test.ts (1 test) 2ms
 ↓ src/utils/nextSpeakerChecker.test.ts (10 tests | 10 skipped)
 ↓ src/services/history/orphaned-tools.test.ts (6 tests | 6 skipped)
 ✓ src/auth/qwen-device-flow.spec.ts (24 tests) 41454ms
   ✓ QwenDeviceFlow - Behavioral Tests > Device Flow Initiation > should use correct Qwen authorization endpoint  1291ms
   ✓ QwenDeviceFlow - Behavioral Tests > Token Polling > should poll for token until authorization completes  10012ms
   ✓ QwenDeviceFlow - Behavioral Tests > Token Polling > should use correct Qwen token endpoint  1303ms
   ✓ QwenDeviceFlow - Behavioral Tests > Token Polling > should respect server-specified polling interval  10011ms
   ✓ QwenDeviceFlow - Behavioral Tests > Error Handling > should handle network failures with retry logic  18763ms

⎯⎯⎯⎯⎯⎯ Failed Suites 2 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  src/core/atomic-compression.test.ts [ src/core/atomic-compression.test.ts ]
Error: Cannot find module '../config/index.js' imported from '/Users/acoliver/projects/llxprt-code/packages/core/src/core/atomic-compression.test.ts'
 ❯ src/core/atomic-compression.test.ts:7:1
      5| import { describe, it, expect, beforeEach, vi } from 'vitest';
      6| import { GeminiClient } from './client.js';
      7| import { Config } from '../config/index.js';
       | ^
      8| 
      9| describe('Atomic Compression', () => {

Caused by: Error: Failed to load url ../config/index.js (resolved id: ../config/index.js) in /Users/acoliver/projects/llxprt-code/packages/core/src/core/atomic-compression.test.ts. Does the file exist?
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26427:33

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/84]⎯

 FAIL  tests/integration/provider-switching-tool-ids.integration.test.ts [ tests/integration/provider-switching-tool-ids.integration.test.ts ]
Error: Cannot find module '../../src/gemini/GeminiChat' imported from '/Users/acoliver/projects/llxprt-code/packages/core/tests/integration/provider-switching-tool-ids.integration.test.ts'
 ❯ tests/integration/provider-switching-tool-ids.integration.test.ts:3:1
      1| import { describe, it, expect, beforeEach, afterEach } from 'vitest';
      2| import nock from 'nock';
      3| import { GeminiChat } from '../../src/gemini/GeminiChat';
       | ^
      4| import { HistoryService } from '../../src/services/history/HistoryServ…
      5| import type { Config } from '../../src/config';

Caused by: Error: Failed to load url ../../src/gemini/GeminiChat (resolved id: ../../src/gemini/GeminiChat) in /Users/acoliver/projects/llxprt-code/packages/core/tests/integration/provider-switching-tool-ids.integration.test.ts. Does the file exist?
 ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-Bsx9IwL8.js:26427:33

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/84]⎯


⎯⎯⎯⎯⎯⎯ Failed Tests 82 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  src/debug/DebugLogger.test.ts > DebugLogger > should maintain stable memory usage when disabled @plan:PLAN-20250120-DEBUGLOGGING.P04
Error: Property failed after 63 tests
{ seed: -2113306138, path: "62", endOnFailure: true }
Counterexample: [["1-JXgU/7KC","_",".,=F3c","w=9m",">0!@","","ZTj.im","#!","$!aV","lk:-HKq*6^","","__proto__","e","s,+R","Epr",",qi,H[YHu",")JM","7)T4b)","~rO+|@'B","pro"]]
Shrunk 0 time(s)

Hint: Enable verbose mode in order to have the list of all failing values encountered during the run
 ❯ buildError ../../node_modules/fast-check/lib/check/runner/utils/RunDetailsFormatter.js:156:19
 ❯ throwIfFailed ../../node_modules/fast-check/lib/check/runner/utils/RunDetailsFormatter.js:165:11
 ❯ reportRunDetails ../../node_modules/fast-check/lib/check/runner/utils/RunDetailsFormatter.js:178:16
 ❯ Proxy.assert ../../node_modules/fast-check/lib/check/runner/Runner.js:61:9
 ❯ src/debug/DebugLogger.test.ts:625:8
    623|    */
    624|   it('should maintain stable memory usage when disabled @plan:PLAN-202…
    625|     fc.assert(
       |        ^
    626|       fc.property(
    627|         fc.array(fc.string(), { minLength: 10, maxLength: 100 }),

Caused by: AssertionError: expected 15216320 to be less than 10485760
 ❯ src/debug/DebugLogger.test.ts:646:31
 ❯ Property.predicate ../../node_modules/fast-check/lib/check/property/Property.js:14:54
 ❯ Property.run ../../node_modules/fast-check/lib/check/property/Property.generic.js:43:33
 ❯ runIt ../../node_modules/fast-check/lib/check/runner/Runner.js:14:30
 ❯ check ../../node_modules/fast-check/lib/check/runner/Runner.js:54:11
 ❯ Proxy.assert ../../node_modules/fast-check/lib/check/runner/Runner.js:57:17
 ❯ src/debug/DebugLogger.test.ts:625:8

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/84]⎯

 FAIL  src/core/client.test.ts > Gemini Client (client.ts) > resetChat > should create a new chat session, clearing the old history
TypeError: this.chat.getHistoryService is not a function
 ❯ GeminiClient.resetChat src/core/client.ts:303:40
    301|     // If chat exists, clear its history service
    302|     if (this.chat) {
    303|       const historyService = this.chat.getHistoryService();
       |                                        ^
    304|       if (historyService) {
    305|         // Clear the history service directly
 ❯ src/core/client.test.ts:586:20

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/84]⎯

 FAIL  src/core/geminiChat.behavioral.test.ts > GeminiChat - Behavioral Tests for HistoryService Migration > Basic Message Flow - Critical for HistoryService > should handle simple user message and AI response
Error: No active provider configured
 ❯ GeminiChat.sendMessage src/core/geminiChat.ts:487:13
    485|     const provider = this.getActiveProvider();
    486|     if (!provider) {
    487|       throw new Error('No active provider configured');
       |             ^
    488|     }
    489| 
 ❯ src/core/geminiChat.behavioral.test.ts:118:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/84]⎯

 FAIL  src/core/geminiChat.behavioral.test.ts > GeminiChat - Behavioral Tests for HistoryService Migration > Basic Message Flow - Critical for HistoryService > should handle conversation with multiple turns
Error: No active provider configured
 ❯ GeminiChat.sendMessage src/core/geminiChat.ts:487:13
    485|     const provider = this.getActiveProvider();
    486|     if (!provider) {
    487|       throw new Error('No active provider configured');
       |             ^
    488|     }
    489| 
 ❯ src/core/geminiChat.behavioral.test.ts:169:7

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/84]⎯

 FAIL  src/core/geminiChat.behavioral.test.ts > GeminiChat - Behavioral Tests for HistoryService Migration > Tool Call Flow - Critical for HistoryService > should handle tool calls and responses
Error: No active provider configured
 ❯ GeminiChat.sendMessage src/core/geminiChat.ts:487:13
    485|     const provider = this.getActiveProvider();
    486|     if (!provider) {
    487|       throw new Error('No active provider configured');
       |             ^
    488|     }
    489| 
 ❯ src/core/geminiChat.behavioral.test.ts:235:7

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/84]⎯

 FAIL  src/core/geminiChat.behavioral.test.ts > GeminiChat - Behavioral Tests for HistoryService Migration > Tool Call Flow - Critical for HistoryService > should handle multiple parallel tool calls correctly
Error: No active provider configured
 ❯ GeminiChat.sendMessage src/core/geminiChat.ts:487:13
    485|     const provider = this.getActiveProvider();
    486|     if (!provider) {
    487|       throw new Error('No active provider configured');
       |             ^
    488|     }
    489| 
 ❯ src/core/geminiChat.behavioral.test.ts:330:7

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/84]⎯

 FAIL  src/core/geminiChat.behavioral.test.ts > GeminiChat - Behavioral Tests for HistoryService Migration > Streaming - Critical for HistoryService > should handle streaming responses and accumulate history
Error: No active provider configured
 ❯ GeminiChat.makeApiCallAndProcessStream src/core/geminiChat.ts:848:13
    846|     const provider = this.getActiveProvider();
    847|     if (!provider) {
    848|       throw new Error('No active provider configured');
       |             ^
    849|     }
    850| 
 ❯ src/core/geminiChat.ts:796:43
 ❯ src/core/geminiChat.behavioral.test.ts:440:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/84]⎯

 FAIL  src/core/geminiChat.behavioral.test.ts > GeminiChat - Behavioral Tests for HistoryService Migration > Streaming - Critical for HistoryService > should handle streaming with tool calls
Error: No active provider configured
 ❯ GeminiChat.makeApiCallAndProcessStream src/core/geminiChat.ts:848:13
    846|     const provider = this.getActiveProvider();
    847|     if (!provider) {
    848|       throw new Error('No active provider configured');
       |             ^
    849|     }
    850| 
 ❯ src/core/geminiChat.ts:796:43
 ❯ src/core/geminiChat.behavioral.test.ts:509:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/84]⎯

 FAIL  src/core/geminiChat.behavioral.test.ts > GeminiChat - Behavioral Tests for HistoryService Migration > Streaming - Critical for HistoryService > should handle streaming errors and rollback history
AssertionError: expected 'No active provider configured' to be 'Stream error' // Object.is equality

Expected: [32m"Stream error"[39m
Received: [31m"No active provider configured"[39m

 ❯ src/core/geminiChat.behavioral.test.ts:558:42
    556|         }
    557|       } catch (error) {
    558|         expect((error as Error).message).toBe('Stream error');
       |                                          ^
    559|       }
    560| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/84]⎯

 FAIL  src/core/geminiChat.behavioral.test.ts > GeminiChat - Behavioral Tests for HistoryService Migration > History Management - Core Functionality to Replace > should distinguish between curated and comprehensive history
Error: No active provider configured
 ❯ GeminiChat.sendMessage src/core/geminiChat.ts:487:13
    485|     const provider = this.getActiveProvider();
    486|     if (!provider) {
    487|       throw new Error('No active provider configured');
       |             ^
    488|     }
    489| 
 ❯ src/core/geminiChat.behavioral.test.ts:585:7

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/84]⎯

 FAIL  src/core/geminiChat.behavioral.test.ts > GeminiChat - Behavioral Tests for HistoryService Migration > System Instructions and Tools > should set system instruction
Error: No active provider configured
 ❯ GeminiChat.sendMessage src/core/geminiChat.ts:487:13
    485|     const provider = this.getActiveProvider();
    486|     if (!provider) {
    487|       throw new Error('No active provider configured');
       |             ^
    488|     }
    489| 
 ❯ src/core/geminiChat.behavioral.test.ts:683:7

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/84]⎯

 FAIL  src/core/geminiChat.behavioral.test.ts > GeminiChat - Behavioral Tests for HistoryService Migration > System Instructions and Tools > should set tools
Error: No active provider configured
 ❯ GeminiChat.sendMessage src/core/geminiChat.ts:487:13
    485|     const provider = this.getActiveProvider();
    486|     if (!provider) {
    487|       throw new Error('No active provider configured');
       |             ^
    488|     }
    489| 
 ❯ src/core/geminiChat.behavioral.test.ts:721:7

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[14/84]⎯

 FAIL  src/core/geminiChat.behavioral.test.ts > GeminiChat - Behavioral Tests for HistoryService Migration > Automatic Function Calling > should handle automatic function calling history
Error: No active provider configured
 ❯ GeminiChat.sendMessage src/core/geminiChat.ts:487:13
    485|     const provider = this.getActiveProvider();
    486|     if (!provider) {
    487|       throw new Error('No active provider configured');
       |             ^
    488|     }
    489| 
 ❯ src/core/geminiChat.behavioral.test.ts:786:7

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[15/84]⎯

 FAIL  src/core/geminiChat.behavioral.test.ts > GeminiChat - Behavioral Tests for HistoryService Migration > Thinking Blocks > should filter out thinking blocks from history
Error: No active provider configured
 ❯ GeminiChat.sendMessage src/core/geminiChat.ts:487:13
    485|     const provider = this.getActiveProvider();
    486|     if (!provider) {
    487|       throw new Error('No active provider configured');
       |             ^
    488|     }
    489| 
 ❯ src/core/geminiChat.behavioral.test.ts:827:7

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[16/84]⎯

 FAIL  src/core/geminiChat.behavioral.test.ts > GeminiChat - Behavioral Tests for HistoryService Migration > Edge Cases > should handle empty model responses
Error: No active provider configured
 ❯ GeminiChat.sendMessage src/core/geminiChat.ts:487:13
    485|     const provider = this.getActiveProvider();
    486|     if (!provider) {
    487|       throw new Error('No active provider configured');
       |             ^
    488|     }
    489| 
 ❯ src/core/geminiChat.behavioral.test.ts:861:7

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[17/84]⎯

 FAIL  src/core/geminiChat.behavioral.test.ts > GeminiChat - Behavioral Tests for HistoryService Migration > Edge Cases > should handle missing candidates in response
Error: No active provider configured
 ❯ GeminiChat.sendMessage src/core/geminiChat.ts:487:13
    485|     const provider = this.getActiveProvider();
    486|     if (!provider) {
    487|       throw new Error('No active provider configured');
       |             ^
    488|     }
    489| 
 ❯ src/core/geminiChat.behavioral.test.ts:878:7

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[18/84]⎯

 FAIL  src/core/geminiChat.test.ts > GeminiChat > sendMessage > should call generateContent with the correct parameters
TypeError: this.config.getEphemeralSetting is not a function
 ❯ GeminiChat.shouldCompress src/core/geminiChat.ts:1024:22
    1022|     if (this.cachedCompressionThreshold === null) {
    1023|       const threshold =
    1024|         (this.config.getEphemeralSetting('compression-threshold') as
       |                      ^
    1025|           | number
    1026|           | undefined) ?? COMPRESSION_TOKEN_THRESHOLD;
 ❯ GeminiChat.sendMessage src/core/geminiChat.ts:470:21
 ❯ src/core/geminiChat.test.ts:82:7

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[19/84]⎯

 FAIL  src/core/geminiChat.test.ts > GeminiChat > sendMessageStream > should call generateContentStream with the correct parameters
TypeError: this.config.getEphemeralSetting is not a function
 ❯ GeminiChat.shouldCompress src/core/geminiChat.ts:1024:22
    1022|     if (this.cachedCompressionThreshold === null) {
    1023|       const threshold =
    1024|         (this.config.getEphemeralSetting('compression-threshold') as
       |                      ^
    1025|           | number
    1026|           | undefined) ?? COMPRESSION_TOKEN_THRESHOLD;
 ❯ GeminiChat.sendMessageStream src/core/geminiChat.ts:734:21
 ❯ src/core/geminiChat.test.ts:117:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[20/84]⎯

 FAIL  src/core/geminiChat.test.ts > GeminiChat > sendMessageStream with retries > should retry on invalid content and succeed on the second attempt
TypeError: this.config.getEphemeralSetting is not a function
 ❯ GeminiChat.shouldCompress src/core/geminiChat.ts:1024:22
    1022|     if (this.cachedCompressionThreshold === null) {
    1023|       const threshold =
    1024|         (this.config.getEphemeralSetting('compression-threshold') as
       |                      ^
    1025|           | number
    1026|           | undefined) ?? COMPRESSION_TOKEN_THRESHOLD;
 ❯ GeminiChat.sendMessageStream src/core/geminiChat.ts:734:21
 ❯ src/core/geminiChat.test.ts:512:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[21/84]⎯

 FAIL  src/core/geminiChat.test.ts > GeminiChat > sendMessageStream with retries > should fail after all retries on persistent invalid content
AssertionError: expected error to be instance of EmptyStreamError

[32m- Expected:[39m 
[Function EmptyStreamError]

[31m+ Received:[39m 
TypeError {
  "message": "this.config.getEphemeralSetting is not a function",
}

 ❯ src/core/geminiChat.test.ts:572:7
    570|       }
    571| 
    572|       await expect(consumeStreamAndExpectError()).rejects.toThrow(
       |       ^
    573|         EmptyStreamError,
    574|       );

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[22/84]⎯

 FAIL  src/core/geminiChat.test.ts > GeminiChat > should correctly retry and append to an existing history mid-conversation
TypeError: this.config.getEphemeralSetting is not a function
 ❯ GeminiChat.shouldCompress src/core/geminiChat.ts:1024:22
    1022|     if (this.cachedCompressionThreshold === null) {
    1023|       const threshold =
    1024|         (this.config.getEphemeralSetting('compression-threshold') as
       |                      ^
    1025|           | number
    1026|           | undefined) ?? COMPRESSION_TOKEN_THRESHOLD;
 ❯ GeminiChat.sendMessageStream src/core/geminiChat.ts:734:21
 ❯ src/core/geminiChat.test.ts:610:20

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[23/84]⎯

 FAIL  src/core/geminiChat.test.ts > GeminiChat > concurrency control > should queue a subsequent sendMessage call until the first one completes
AssertionError: expected "spy" to be called 1 times, but got 0 times
 ❯ src/core/geminiChat.test.ts:700:48
    698|       // 5. CRUCIAL CHECK: At this point, only the first API call shou…
    699|       // The second call should be waiting on `sendPromise`.
    700|       expect(mockModelsModule.generateContent).toHaveBeenCalledTimes(1…
       |                                                ^
    701|       expect(mockModelsModule.generateContent).toHaveBeenCalledWith(
    702|         expect.objectContaining({

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[24/84]⎯

 FAIL  src/core/geminiChat.test.ts > GeminiChat > should retry if the model returns a completely empty stream (no chunks)
TypeError: this.config.getEphemeralSetting is not a function
 ❯ GeminiChat.shouldCompress src/core/geminiChat.ts:1024:22
    1022|     if (this.cachedCompressionThreshold === null) {
    1023|       const threshold =
    1024|         (this.config.getEphemeralSetting('compression-threshold') as
       |                      ^
    1025|           | number
    1026|           | undefined) ?? COMPRESSION_TOKEN_THRESHOLD;
 ❯ GeminiChat.sendMessageStream src/core/geminiChat.ts:734:21
 ❯ src/core/geminiChat.test.ts:757:20

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[25/84]⎯

 FAIL  src/core/geminiChat.test.ts > GeminiChat > should queue a subsequent sendMessageStream call until the first stream is fully consumed
TypeError: this.config.getEphemeralSetting is not a function
 ❯ GeminiChat.shouldCompress src/core/geminiChat.ts:1024:22
    1022|     if (this.cachedCompressionThreshold === null) {
    1023|       const threshold =
    1024|         (this.config.getEphemeralSetting('compression-threshold') as
       |                      ^
    1025|           | number
    1026|           | undefined) ?? COMPRESSION_TOKEN_THRESHOLD;
 ❯ GeminiChat.sendMessageStream src/core/geminiChat.ts:734:21
 ❯ src/core/geminiChat.test.ts:825:25

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[26/84]⎯

 FAIL  src/core/nonInteractiveToolExecutor.test.ts > executeToolCall > should execute a tool successfully
AssertionError: expected [ { functionCall: { …(3) } }, …(1) ] to deeply equal { functionResponse: { …(3) } }

[32m- Expected:[39m 
{
  "functionResponse": {
    "id": "call1",
    "name": "testTool",
    "response": {
      "output": "Tool executed successfully",
    },
  },
}

[31m+ Received:[39m 
[
  {
    "functionCall": {
      "args": {
        "param1": "value1",
      },
      "id": "call1",
      "name": "testTool",
    },
  },
  {
    "functionResponse": {
      "id": "call1",
      "name": "testTool",
      "response": {
        "output": "Tool executed successfully",
      },
    },
  },
]

 ❯ src/core/nonInteractiveToolExecutor.test.ts:77:36
     75|     expect(response.error).toBeUndefined();
     76|     expect(response.resultDisplay).toBe('Success!');
     77|     expect(response.responseParts).toEqual({
       |                                    ^
     78|       functionResponse: {
     79|         name: 'testTool',

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[27/84]⎯

 FAIL  src/core/nonInteractiveToolExecutor.test.ts > executeToolCall > should return an error if tool is not found
AssertionError: expected [ { functionCall: { …(3) } }, …(1) ] to deeply equal { functionResponse: { …(3) } }

[32m- Expected:[39m 
{
  "functionResponse": {
    "id": "call2",
    "name": "nonexistentTool",
    "response": {
      "error": "Tool \"nonexistentTool\" not found in registry.",
    },
  },
}

[31m+ Received:[39m 
[
  {
    "functionCall": {
      "args": {},
      "id": "call2",
      "name": "nonexistentTool",
    },
  },
  {
    "functionResponse": {
      "id": "call2",
      "name": "nonexistentTool",
      "response": {
        "error": "Tool \"nonexistentTool\" not found in registry.",
      },
    },
  },
]

 ❯ src/core/nonInteractiveToolExecutor.test.ts:111:36
    109|       'Tool "nonexistentTool" not found in registry.',
    110|     );
    111|     expect(response.responseParts).toEqual({
       |                                    ^
    112|       functionResponse: {
    113|         name: 'nonexistentTool',

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[28/84]⎯

 FAIL  src/core/nonInteractiveToolExecutor.test.ts > executeToolCall > should return an error if tool validation fails
AssertionError: expected { callId: 'call3', …(4) } to strictly equal { callId: 'call3', …(4) }

[32m- Expected[39m
[31m+ Received[39m

[33m@@ -2,16 +2,27 @@[39m
[2m    "callId": "call3",[22m
[2m    "error": Error {[22m
[2m      "message": "Invalid parameters",[22m
[2m    },[22m
[2m    "errorType": "invalid_tool_params",[22m
[32m-   "responseParts": {[39m
[31m+   "responseParts": [[39m
[31m+     {[39m
[31m+       "functionCall": {[39m
[31m+         "args": {[39m
[31m+           "param1": "invalid",[39m
[31m+         },[39m
[31m+         "id": "call3",[39m
[31m+         "name": "testTool",[39m
[31m+       },[39m
[31m+     },[39m
[31m+     {[39m
[2m        "functionResponse": {[22m
[2m          "id": "call3",[22m
[2m          "name": "testTool",[22m
[2m          "response": {[22m
[2m            "output": "Error: Invalid parameters",[22m
[2m          },[22m
[2m        },[22m
[2m      },[22m
[31m+   ],[39m
[2m    "resultDisplay": "Invalid parameters",[22m
[2m  }[22m

 ❯ src/core/nonInteractiveToolExecutor.test.ts:144:22
    142|       abortController.signal,
    143|     );
    144|     expect(response).toStrictEqual({
       |                      ^
    145|       callId: 'call3',
    146|       error: new Error('Invalid parameters'),

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[29/84]⎯

 FAIL  src/core/nonInteractiveToolExecutor.test.ts > executeToolCall > should return an error if tool execution fails
AssertionError: expected { callId: 'call4', …(4) } to strictly equal { callId: 'call4', …(4) }

[32m- Expected[39m
[31m+ Received[39m

[33m@@ -2,16 +2,27 @@[39m
[2m    "callId": "call4",[22m
[2m    "error": Error {[22m
[2m      "message": "Execution failed",[22m
[2m    },[22m
[2m    "errorType": "execution_failed",[22m
[32m-   "responseParts": {[39m
[31m+   "responseParts": [[39m
[31m+     {[39m
[31m+       "functionCall": {[39m
[31m+         "args": {[39m
[31m+           "param1": "value1",[39m
[31m+         },[39m
[31m+         "id": "call4",[39m
[31m+         "name": "testTool",[39m
[31m+       },[39m
[31m+     },[39m
[31m+     {[39m
[2m        "functionResponse": {[22m
[2m          "id": "call4",[22m
[2m          "name": "testTool",[22m
[2m          "response": {[22m
[2m            "output": "Error: Execution failed",[22m
[2m          },[22m
[2m        },[22m
[2m      },[22m
[31m+   ],[39m
[2m    "resultDisplay": "Execution failed",[22m
[2m  }[22m

 ❯ src/core/nonInteractiveToolExecutor.test.ts:185:22
    183|       abortController.signal,
    184|     );
    185|     expect(response).toStrictEqual({
       |                      ^
    186|       callId: 'call4',
    187|       error: new Error('Execution failed'),

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[30/84]⎯

 FAIL  src/core/nonInteractiveToolExecutor.test.ts > executeToolCall > should return an unhandled exception error if execution throws
AssertionError: expected [ { functionCall: { …(3) } }, …(1) ] to deeply equal { functionResponse: { …(3) } }

[32m- Expected:[39m 
{
  "functionResponse": {
    "id": "call5",
    "name": "testTool",
    "response": {
      "error": "Something went very wrong",
    },
  },
}

[31m+ Received:[39m 
[
  {
    "functionCall": {
      "args": {
        "param1": "value1",
      },
      "id": "call5",
      "name": "testTool",
    },
  },
  {
    "functionResponse": {
      "id": "call5",
      "name": "testTool",
      "response": {
        "error": "Something went very wrong",
      },
    },
  },
]

 ❯ src/core/nonInteractiveToolExecutor.test.ts:224:36
    222|     expect(response.errorType).toBe(ToolErrorType.UNHANDLED_EXCEPTION);
    223|     expect(response.resultDisplay).toBe('Something went very wrong');
    224|     expect(response.responseParts).toEqual({
       |                                    ^
    225|       functionResponse: {
    226|         name: 'testTool',

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[31/84]⎯

 FAIL  src/core/nonInteractiveToolExecutor.test.ts > executeToolCall > should correctly format llmContent with inlineData
AssertionError: expected [ { functionCall: { …(3) } }, …(1) ] to deeply equal { functionResponse: { …(3) } }

[32m- Expected:[39m 
{
  "functionResponse": {
    "id": "call6",
    "name": "testTool",
    "response": {
      "binaryContent": {
        "inlineData": {
          "data": "base64data",
          "mimeType": "image/png",
        },
      },
      "output": "Binary content of type image/png was processed.",
    },
  },
}

[31m+ Received:[39m 
[
  {
    "functionCall": {
      "args": {},
      "id": "call6",
      "name": "testTool",
    },
  },
  {
    "functionResponse": {
      "id": "call6",
      "name": "testTool",
      "response": {
        "binaryContent": {
          "inlineData": {
            "data": "base64data",
            "mimeType": "image/png",
          },
        },
        "output": "Binary content of type image/png was processed.",
      },
    },
  },
]

 ❯ src/core/nonInteractiveToolExecutor.test.ts:258:36
    256| 
    257|     expect(response.resultDisplay).toBe('Image processed');
    258|     expect(response.responseParts).toEqual({
       |                                    ^
    259|       functionResponse: {
    260|         name: 'testTool',

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[32/84]⎯

 FAIL  src/integration/gemini-provider-switching.test.ts > Gemini Provider Switching - MUST FAIL FIRST > 🎯 MUST handle Gemini → OpenAI provider switch without 400
AssertionError: expected 'call_gemini_12345' not to contain 'gemini'

Expected: [32m"gemini"[39m
Received: [31m"[7mcall_[27mgemini[7m_12345[27m"[39m

 ❯ src/integration/gemini-provider-switching.test.ts:100:39
     98|     expect(openAIToolCalls.length).toBeGreaterThan(0);
     99|     expect(openAIToolCalls[0].id).toMatch(/^call_/);
    100|     expect(openAIToolCalls[0].id).not.toContain('gemini');
       |                                       ^
    101| 
    102|     const openAIResponse = MessageConverters.toOpenAIMessage(toolRespo…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[33/84]⎯

 FAIL  src/integration/gemini-provider-switching.test.ts > Gemini Provider Switching - MUST FAIL FIRST > ⚠️ MUST handle orphaned tool responses after provider switch
TypeError: historyService.addMessage is not a function
 ❯ src/integration/gemini-provider-switching.test.ts:257:20
    255|     };
    256| 
    257|     historyService.addMessage(openAICall, 'openai');
       |                    ^
    258| 
    259|     const toolResponse: IMessage = {

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[34/84]⎯

 FAIL  src/integration/orphaned-tool-response.test.ts > REAL BUG: Orphaned Tool Response > 🔥 MUST handle orphaned tool response when switching providers
TypeError: historyService.addMessage is not a function
 ❯ src/integration/orphaned-tool-response.test.ts:22:20
     20| 
     21|     // Add the orphaned response to history
     22|     historyService.addMessage(orphanedResponse, 'openai');
       |                    ^
     23| 
     24|     // Now there's some AI response

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[35/84]⎯

 FAIL  src/integration/orphaned-tool-response.test.ts > REAL BUG: Orphaned Tool Response > 🔥 MUST filter out orphaned tool responses when no matching call exists
TypeError: historyService.addMessage is not a function
 ❯ src/integration/orphaned-tool-response.test.ts:115:20
    113|       content: 'error response',
    114|     };
    115|     historyService.addMessage(orphanedResponse, 'openai');
       |                    ^
    116| 
    117|     // Get history for Anthropic

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[36/84]⎯

 FAIL  src/integration/production-bug-simulation.test.ts > PRODUCTION BUG: Provider Switching with Tool Calls > 🔥 MUST handle real production scenario: Qwen -> Anthropic switch with orphaned tool response
TypeError: historyService.addMessage is not a function
 ❯ src/integration/production-bug-simulation.test.ts:29:20
     27| 
     28|     // Add to history (this should normalize to hist_tool_ad9c11ef9)
     29|     historyService.addMessage(qwenToolCall, 'openai'); // Qwen uses Op…
       |                    ^
     30| 
     31|     // Step 2: Tool response with error (SHORT ID)

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[37/84]⎯

 FAIL  src/integration/production-bug-simulation.test.ts > PRODUCTION BUG: Provider Switching with Tool Calls > 🔥 MUST NOT send Gemini format (functionResponse) to Anthropic
TypeError: historyService.addMessage is not a function
 ❯ src/integration/production-bug-simulation.test.ts:167:20
    165| 
    166|     // Add a tool call and response
    167|     historyService.addMessage(
       |                    ^
    168|       {
    169|         role: 'assistant',

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[38/84]⎯

 FAIL  src/integration/provider-switching-actual-flow.test.ts > Provider Switching - Actual Production Flow > traces tool call ID transformation through actual production flow
AssertionError: expected 'toolu_7e6a3cd4d' to be '7e6a3cd4d' // Object.is equality

Expected: [32m"7e6a3cd4d"[39m
Received: [31m"[7mtoolu_[27m7e6a3cd4d"[39m

 ❯ src/integration/provider-switching-actual-flow.test.ts:284:47
    282|     expect(geminiToolCall?.functionCall?.id).toBe(openaiToolCallId);
    283|     expect(geminiToolResponse?.functionResponse?.id).toBe(openaiToolCa…
    284|     expect(assistantMsg?.tool_calls?.[0]?.id).toBe(openaiToolCallId);
       |                                               ^
    285|     expect(toolMsg?.tool_call_id).toBe(openaiToolCallId);
    286| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[39/84]⎯

 FAIL  src/integration/provider-switching-actual-flow.test.ts > Provider Switching - Actual Production Flow > traces where new IDs get generated in production flow
AssertionError: expected 'toolu_1757038815842_bcukg2afe' to match /^call_\d+_[a-z0-9]{9}$/

[32m- Expected:[39m 
/^call_\d+_[a-z0-9]{9}$/

[31m+ Received:[39m 
"toolu_1757038815842_bcukg2afe"

 ❯ src/integration/provider-switching-actual-flow.test.ts:345:47
    343| 
    344|     // Verify that ID generation happens in GeminiCompatibleWrapper
    345|     expect(assistantMsg?.tool_calls?.[0]?.id).toMatch(/^call_\d+_[a-z0…
       |                                               ^
    346|     console.log(
    347|       '✅ New ID generated correctly in GeminiCompatibleWrapper when or…

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[40/84]⎯

 FAIL  src/integration/provider-switching-id-mismatch.behavioral.test.ts > Provider Switching ID Mismatch - Behavioral Test > reproduces ID mismatch when switching from OpenAI to Anthropic
ReferenceError: j is not defined
 ❯ src/integration/provider-switching-id-mismatch.behavioral.test.ts:244:45
    242|       content.blocks.forEach((block, _j) => {
    243|         if (block.type === 'tool_call') {
    244|           logger.debug(`  Tool call block ${j + 1}: id="${block.id}"`);
       |                                             ^
    245|         } else if (block.type === 'tool_response') {
    246|           logger.debug(
 ❯ src/integration/provider-switching-id-mismatch.behavioral.test.ts:242:22
 ❯ src/integration/provider-switching-id-mismatch.behavioral.test.ts:240:21

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[41/84]⎯

 FAIL  src/integration/provider-switching-real-flow.test.ts > Provider Switching Real Flow - ID Mismatch Demonstration > shows WHERE and WHY ID preservation works vs fails
AssertionError: expected 'toolu_openai_12345' to be 'call_openai_12345' // Object.is equality

Expected: [32m"[7mcall[27m_openai_12345"[39m
Received: [31m"[7mtoolu[27m_openai_12345"[39m

 ❯ src/integration/provider-switching-real-flow.test.ts:492:23
    490|     expect(curatedId).toBe(originalId);
    491|     expect(geminiId).toBe(originalId);
    492|     expect(messageId).toBe(originalId);
       |                       ^
    493| 
    494|     console.log('\n✅ All conversion steps preserve IDs correctly');

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[42/84]⎯

 FAIL  src/integration/provider-switching.test.ts > Provider Switching Integration > ID Normalization Architecture - NEW FAILING TESTS > should use HistoryService callbacks throughout provider switching flow
AssertionError: expected 'hist_tool_original_123' to match /^hist_tool_[0-9a-f]{8}-[0-9a-f]{4}-4[…/

[32m- Expected:[39m 
/^hist_tool_[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/

[31m+ Received:[39m 
"hist_tool_original_123"

 ❯ src/integration/provider-switching.test.ts:519:27
    517|       // Should use callback-generated IDs
    518|       const toolCall = iContent.blocks[1] as ToolCallBlock;
    519|       expect(toolCall.id).toMatch(
       |                           ^
    520|         /^hist_tool_[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f…
    521|       );

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[43/84]⎯

 FAIL  src/integration/wrapper-provider-switching.test.ts > GeminiCompatibleWrapper Provider Switching > 🔥 MUST convert Gemini format to Anthropic format when provider is Anthropic
AssertionError: expected 'tool' to be 'user' // Object.is equality

Expected: [32m"user"[39m
Received: [31m"tool"[39m

 ❯ src/integration/wrapper-provider-switching.test.ts:67:30
     65|     // First message should be tool response in Anthropic format
     66|     const toolMessage = messages[0];
     67|     expect(toolMessage.role).toBe('user'); // Anthropic uses 'user' fo…
       |                              ^
     68|     expect(toolMessage.content).toBeInstanceOf(Array);
     69| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[44/84]⎯

 FAIL  src/integration/wrapper-provider-switching.test.ts > GeminiCompatibleWrapper Provider Switching > 🔥 MUST handle orphaned tool responses correctly
AssertionError: expected 'tool' to be 'user' // Object.is equality

Expected: [32m"user"[39m
Received: [31m"tool"[39m

 ❯ src/integration/wrapper-provider-switching.test.ts:226:30
    224| 
    225|     const toolMessage = messages[0];
    226|     expect(toolMessage.role).toBe('user');
       |                              ^
    227|     expect(toolMessage.content).toBeInstanceOf(Array);
    228| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[45/84]⎯

 FAIL  src/services/HistoryService.test.ts > HistoryService - Tool ID Normalization > normalizing provider messages to history format > should generate history IDs for OpenAI tool calls
TypeError: historyService.addMessage is not a function
 ❯ src/services/HistoryService.test.ts:31:38
     29| 
     30|       // When: Message is added to history
     31|       const content = historyService.addMessage(openAIMessage, 'openai…
       |                                      ^
     32| 
     33|       // Then: History ID is generated for tool call

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[46/84]⎯

 FAIL  src/services/HistoryService.test.ts > HistoryService - Tool ID Normalization > normalizing provider messages to history format > should generate history IDs for Anthropic tool calls
TypeError: historyService.addMessage is not a function
 ❯ src/services/HistoryService.test.ts:57:38
     55| 
     56|       // When: Message is added to history
     57|       const content = historyService.addMessage(anthropicMessage, 'ant…
       |                                      ^
     58| 
     59|       // Then: History ID is generated

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[47/84]⎯

 FAIL  src/services/HistoryService.test.ts > HistoryService - Tool ID Normalization > normalizing provider messages to history format > should generate history IDs for Gemini tool calls (no original ID)
TypeError: historyService.addMessage is not a function
 ❯ src/services/HistoryService.test.ts:83:38
     81| 
     82|       // When: Message is added to history
     83|       const content = historyService.addMessage(geminiMessage, 'gemini…
       |                                      ^
     84| 
     85|       // Then: History ID is generated anyway

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[48/84]⎯

 FAIL  src/services/HistoryService.test.ts > HistoryService - Tool ID Normalization > normalizing provider messages to history format > should match tool responses to tool calls using normalized IDs
TypeError: historyService.addMessage is not a function
 ❯ src/services/HistoryService.test.ts:102:42
    100|         ],
    101|       };
    102|       const callContent = historyService.addMessage(toolCall, 'openai'…
       |                                          ^
    103|       const historyId = callContent.blocks[0].toolId;
    104| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[49/84]⎯

 FAIL  src/services/HistoryService.test.ts > HistoryService - Tool ID Normalization > normalizing provider messages to history format > should handle multiple tool calls in single message
TypeError: historyService.addMessage is not a function
 ❯ src/services/HistoryService.test.ts:142:38
    140| 
    141|       // When: Added to history
    142|       const content = historyService.addMessage(message, 'openai');
       |                                      ^
    143| 
    144|       // Then: Each gets unique history ID

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[50/84]⎯

 FAIL  src/services/HistoryService.test.ts > HistoryService - Tool ID Normalization > converting history to provider format > should provide messages with history IDs for provider conversion
TypeError: historyService.addMessage is not a function
 ❯ src/services/HistoryService.test.ts:157:22
    155|     it('should provide messages with history IDs for provider conversi…
    156|       // Given: History with normalized IDs
    157|       historyService.addMessage(
       |                      ^
    158|         {
    159|           role: 'assistant',

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[51/84]⎯

 FAIL  src/services/HistoryService.test.ts > HistoryService - Tool ID Normalization > converting history to provider format > should maintain tool call/response pairs with consistent IDs
TypeError: historyService.addMessage is not a function
 ❯ src/services/HistoryService.test.ts:199:22
    197| 
    198|       // When: Both added to history
    199|       historyService.addMessage(call, 'openai');
       |                      ^
    200|       historyService.addMessage(response, 'openai');
    201| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[52/84]⎯

 FAIL  src/services/HistoryService.test.ts > HistoryService - Tool ID Normalization > provider switching scenarios > should preserve ID relationships when switching providers mid-conversation
TypeError: historyService.addMessage is not a function
 ❯ src/services/HistoryService.test.ts:230:22
    228|       };
    229| 
    230|       historyService.addMessage(openAICall, 'openai');
       |                      ^
    231|       historyService.addMessage(openAIResponse, 'openai');
    232| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[53/84]⎯

 FAIL  src/services/HistoryService.test.ts > HistoryService - Tool ID Normalization > Gemini position-based matching > should match Gemini responses by position when no IDs provided
TypeError: historyService.addMessage is not a function
 ❯ src/services/HistoryService.test.ts:269:42
    267| 
    268|       // When: Added to history
    269|       const callContent = historyService.addMessage(geminiCalls, 'gemi…
       |                                          ^
    270| 
    271|       // Then: Each gets unique history ID despite empty provider IDs

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[54/84]⎯

 FAIL  src/services/HistoryService.test.ts > HistoryService - Tool ID Normalization > edge cases > should handle orphaned tool responses (no matching call)
TypeError: historyService.addMessage is not a function
 ❯ src/services/HistoryService.test.ts:410:38
    408| 
    409|       // When: Added to history
    410|       const content = historyService.addMessage(orphanResponse, 'opena…
       |                                      ^
    411| 
    412|       // Then: Still gets history ID

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[55/84]⎯

 FAIL  src/services/HistoryService.test.ts > HistoryService - Tool ID Normalization > edge cases > should handle corrupted/missing IDs gracefully
TypeError: historyService.addMessage is not a function
 ❯ src/services/HistoryService.test.ts:454:40
    452|       // When: Each added to history
    453|       messagesWithIssues.forEach((msg) => {
    454|         const content = historyService.addMessage(msg as IMessage, 'op…
       |                                        ^
    455| 
    456|         // Then: All get valid history IDs
 ❯ src/services/HistoryService.test.ts:453:26

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[56/84]⎯

 FAIL  src/services/HistoryService.test.ts > HistoryService - Tool ID Normalization > edge cases > should handle duplicate provider IDs correctly
TypeError: historyService.addMessage is not a function
 ❯ src/services/HistoryService.test.ts:486:39
    484| 
    485|       // When: Both added to history
    486|       const content1 = historyService.addMessage(call1, 'openai');
       |                                       ^
    487|       const content2 = historyService.addMessage(call2, 'openai');
    488| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[57/84]⎯

 FAIL  src/services/HistoryService.test.ts > HistoryService - Tool ID Normalization > edge cases > should generate unique IDs even for duplicate tool names
TypeError: historyService.addMessage is not a function
 ❯ src/services/HistoryService.test.ts:527:24
    525|       // When: All added to history
    526|       const contents = calls.map((call) =>
    527|         historyService.addMessage(call, 'openai'),
       |                        ^
    528|       );
    529| 
 ❯ src/services/HistoryService.test.ts:526:30

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[58/84]⎯

 FAIL  src/providers/__tests__/anthropic-icontent-hist-tool-id.test.ts > AnthropicProvider hist_tool ID conversion > should convert hist_tool_ IDs to toolu_ format when sending to Anthropic
TypeError: Cannot read properties of undefined (reading 'map')
 ❯ src/providers/anthropic/AnthropicProvider.ts:1081:65
    1079|       ? (() => {
    1080|           // First convert to ITool format
    1081|           const iTools: ITool[] = tools[0].functionDeclarations.map((d…
       |                                                                 ^
    1082|             type: 'function' as const,
    1083|             function: {
 ❯ AnthropicProvider.generateChatCompletionIContent src/providers/anthropic/AnthropicProvider.ts:1101:9
 ❯ src/providers/__tests__/anthropic-icontent-hist-tool-id.test.ts:134:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[59/84]⎯

 FAIL  src/providers/__tests__/anthropic-icontent-hist-tool-id.test.ts > AnthropicProvider hist_tool ID conversion > should convert toolu_ IDs back to hist_tool_ format in responses
TypeError: Cannot read properties of undefined (reading 'map')
 ❯ src/providers/anthropic/AnthropicProvider.ts:1081:65
    1079|       ? (() => {
    1080|           // First convert to ITool format
    1081|           const iTools: ITool[] = tools[0].functionDeclarations.map((d…
       |                                                                 ^
    1082|             type: 'function' as const,
    1083|             function: {
 ❯ AnthropicProvider.generateChatCompletionIContent src/providers/anthropic/AnthropicProvider.ts:1101:9
 ❯ src/providers/__tests__/anthropic-icontent-hist-tool-id.test.ts:238:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[60/84]⎯

 FAIL  src/providers/__tests__/gemini-icontent-hist-tool-id.test.ts > GeminiProvider hist_tool ID preservation > should preserve hist_tool_ IDs without modification
AuthenticationRequiredError: Web search requires Gemini authentication, but no API key is set and OAuth is disabled
 ❯ GeminiProvider.determineBestAuth src/providers/gemini/GeminiProvider.ts:217:17
    215|         } else {
    216|           // OAuth is disabled and no other auth method available
    217|           throw new AuthenticationRequiredError(
       |                 ^
    218|             'Web search requires Gemini authentication, but no API key…
    219|             'none',
 ❯ GeminiProvider.generateChatCompletionIContent src/providers/gemini/GeminiProvider.ts:1515:23
 ❯ src/providers/__tests__/gemini-icontent-hist-tool-id.test.ts:88:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[61/84]⎯

 FAIL  src/providers/__tests__/gemini-icontent-hist-tool-id.test.ts > GeminiProvider hist_tool ID preservation > should preserve hist_tool_ IDs in responses without modification
AuthenticationRequiredError: Web search requires Gemini authentication, but no API key is set and OAuth is disabled
 ❯ GeminiProvider.determineBestAuth src/providers/gemini/GeminiProvider.ts:217:17
    215|         } else {
    216|           // OAuth is disabled and no other auth method available
    217|           throw new AuthenticationRequiredError(
       |                 ^
    218|             'Web search requires Gemini authentication, but no API key…
    219|             'none',
 ❯ GeminiProvider.generateChatCompletionIContent src/providers/gemini/GeminiProvider.ts:1515:23
 ❯ src/providers/__tests__/gemini-icontent-hist-tool-id.test.ts:168:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[62/84]⎯

 FAIL  src/providers/__tests__/gemini-icontent-tool-call-flow.test.ts > GeminiProvider IContent Tool Call Flow > should handle tool call sequence correctly with IContent
AuthenticationRequiredError: Web search requires Gemini authentication, but no API key is set and OAuth is disabled
 ❯ GeminiProvider.determineBestAuth src/providers/gemini/GeminiProvider.ts:217:17
    215|         } else {
    216|           // OAuth is disabled and no other auth method available
    217|           throw new AuthenticationRequiredError(
       |                 ^
    218|             'Web search requires Gemini authentication, but no API key…
    219|             'none',
 ❯ GeminiProvider.generateChatCompletionIContent src/providers/gemini/GeminiProvider.ts:1515:23
 ❯ src/providers/__tests__/gemini-icontent-tool-call-flow.test.ts:270:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[63/84]⎯

 FAIL  src/providers/__tests__/gemini-icontent-tool-call-flow.test.ts > GeminiProvider IContent Tool Call Flow > should correctly serialize/deserialize Gemini tool call responses
AuthenticationRequiredError: Web search requires Gemini authentication, but no API key is set and OAuth is disabled
 ❯ GeminiProvider.determineBestAuth src/providers/gemini/GeminiProvider.ts:217:17
    215|         } else {
    216|           // OAuth is disabled and no other auth method available
    217|           throw new AuthenticationRequiredError(
       |                 ^
    218|             'Web search requires Gemini authentication, but no API key…
    219|             'none',
 ❯ GeminiProvider.generateChatCompletionIContent src/providers/gemini/GeminiProvider.ts:1515:23
 ❯ src/providers/__tests__/gemini-icontent-tool-call-flow.test.ts:484:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[64/84]⎯

 FAIL  src/providers/__tests__/openai-icontent-hist-tool-id.test.ts > OpenAIProvider hist_tool ID conversion > should convert hist_tool_ IDs to call_ format when sending to OpenAI
TypeError: Cannot read properties of undefined (reading 'map')
 ❯ OpenAIProvider.generateChatCompletionIContent src/providers/openai/OpenAIProvider.ts:1003:39
    1001|     // Handle both legacy 'parameters' and new 'parametersJsonSchema' …
    1002|     const apiTools = tools
    1003|       ? tools[0].functionDeclarations.map((decl) => {
       |                                       ^
    1004|           // Support both old 'parameters' and new 'parametersJsonSche…
    1005|           // DeclarativeTool uses parametersJsonSchema, while legacy t…
 ❯ src/providers/__tests__/openai-icontent-hist-tool-id.test.ts:139:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[65/84]⎯

 FAIL  src/providers/__tests__/openai-icontent-hist-tool-id.test.ts > OpenAIProvider hist_tool ID conversion > should convert call_ IDs back to hist_tool_ format in responses
TypeError: Cannot read properties of undefined (reading 'map')
 ❯ OpenAIProvider.generateChatCompletionIContent src/providers/openai/OpenAIProvider.ts:1003:39
    1001|     // Handle both legacy 'parameters' and new 'parametersJsonSchema' …
    1002|     const apiTools = tools
    1003|       ? tools[0].functionDeclarations.map((decl) => {
       |                                       ^
    1004|           // Support both old 'parameters' and new 'parametersJsonSche…
    1005|           // DeclarativeTool uses parametersJsonSchema, while legacy t…
 ❯ src/providers/__tests__/openai-icontent-hist-tool-id.test.ts:251:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[66/84]⎯

 FAIL  src/providers/__tests__/openai-icontent-tool-call-flow.test.ts > OpenAIProvider IContent Tool Call Flow > should handle tool call sequence correctly with IContent
TypeError: Failed to parse URL from undefined/chat/completions
 ❯ makeApiCall src/providers/openai/OpenAIProvider.ts:1040:24
    1038|     // Wrap the API call with retry logic
    1039|     const makeApiCall = async () => {
    1040|       const response = await fetch(`${this.baseURL}/chat/completions`,…
       |                        ^
    1041|         method: 'POST',
    1042|         headers: {
 ❯ retryWithBackoff src/utils/retry.ts:96:14
 ❯ OpenAIProvider.generateChatCompletionIContent src/providers/openai/OpenAIProvider.ts:1078:22
 ❯ src/providers/__tests__/openai-icontent-tool-call-flow.test.ts:345:22

Caused by: TypeError: Invalid URL
 ❯ makeApiCall src/providers/openai/OpenAIProvider.ts:1040:30
 ❯ retryWithBackoff src/utils/retry.ts:96:20
 ❯ OpenAIProvider.generateChatCompletionIContent src/providers/openai/OpenAIProvider.ts:1078:28
 ❯ src/providers/__tests__/openai-icontent-tool-call-flow.test.ts:345:22

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯
Serialized Error: { code: 'ERR_INVALID_URL', input: 'undefined/chat/completions' }
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[67/84]⎯

 FAIL  src/providers/__tests__/openai-responses-icontent-tool-call-flow.test.ts > OpenAIResponsesProvider IContent Tool Call Flow > should handle tool call sequence correctly with IContent
AssertionError: expected 0 to be greater than 0
 ❯ src/providers/__tests__/openai-responses-icontent-tool-call-flow.test.ts:440:30
    438| 
    439|     // Verify that we got some responses without errors
    440|     expect(response1.length).toBeGreaterThan(0);
       |                              ^
    441|     expect(response2.length).toBeGreaterThan(0);
    442|     expect(response3.length).toBeGreaterThan(0);

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[68/84]⎯

 FAIL  src/providers/anthropic/AnthropicProvider.switching.test.ts > AnthropicProvider - Provider Switching > Real-world provider switching scenarios > should handle OpenAI/Qwen tool IDs when switching from OpenAI
TypeError: provider.convertMessages is not a function
 ❯ src/providers/anthropic/AnthropicProvider.switching.test.ts:51:59
     49|       // 1. Map these IDs to Anthropic format (toolu_xxx)
     50|       // 2. Or use a normalization layer
     51|       const anthropicMessages = provider['convertMessages'](messages);
       |                                                           ^
     52| 
     53|       // Find the tool_use block

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[69/84]⎯

 FAIL  src/providers/anthropic/AnthropicProvider.switching.test.ts > AnthropicProvider - Provider Switching > Real-world provider switching scenarios > should handle multiple tool calls with various ID formats
TypeError: provider.convertMessages is not a function
 ❯ src/providers/anthropic/AnthropicProvider.switching.test.ts:131:59
    129|       ];
    130| 
    131|       const anthropicMessages = provider['convertMessages'](messages);
       |                                                           ^
    132| 
    133|       // Extract all tool_use IDs

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[70/84]⎯

 FAIL  src/providers/anthropic/AnthropicProvider.switching.test.ts > AnthropicProvider - Provider Switching > Real-world provider switching scenarios > should handle Cerebras/Qwen specific ID formats
TypeError: provider.convertMessages is not a function
 ❯ src/providers/anthropic/AnthropicProvider.switching.test.ts:203:59
    201|       ];
    202| 
    203|       const anthropicMessages = provider['convertMessages'](messages);
       |                                                           ^
    204| 
    205|       // Should not throw and should maintain ID relationships

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[71/84]⎯

 FAIL  src/providers/anthropic/AnthropicProvider.switching.test.ts > AnthropicProvider - Provider Switching > Real-world provider switching scenarios > should not fail when tool_call_id is missing or empty
AssertionError: expected [Function] to not throw an error but 'TypeError: provider.convertMessages i…' was thrown

[32m- Expected:[39m 
undefined

[31m+ Received:[39m 
"TypeError: provider.convertMessages is not a function"

 ❯ src/providers/anthropic/AnthropicProvider.switching.test.ts:233:14
    231|       expect(() => {
    232|         provider['convertMessages'](messages);
    233|       }).not.toThrow();
       |              ^
    234|     });
    235|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[72/84]⎯

 FAIL  src/providers/anthropic/AnthropicProvider.switching.test.ts > AnthropicProvider - Provider Switching > ID normalization requirements > should ensure all tool_use blocks have valid Anthropic IDs
TypeError: provider.convertMessages is not a function
 ❯ src/providers/anthropic/AnthropicProvider.switching.test.ts:252:59
    250|       ];
    251| 
    252|       const anthropicMessages = provider['convertMessages'](messages);
       |                                                           ^
    253|       const assistantMsg = anthropicMessages.find(
    254|         (m) => m.role === 'assistant',

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[73/84]⎯

 FAIL  src/providers/anthropic/AnthropicProvider.switching.test.ts > AnthropicProvider - Provider Switching > ID normalization requirements > should maintain ID consistency across tool call/response pairs
TypeError: provider.convertMessages is not a function
 ❯ src/providers/anthropic/AnthropicProvider.switching.test.ts:294:59
    292|       ];
    293| 
    294|       const anthropicMessages = provider['convertMessages'](messages);
       |                                                           ^
    295| 
    296|       // Extract the IDs

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[74/84]⎯

 FAIL  src/providers/openai/buildResponsesRequest.stripToolCalls.test.ts > buildResponsesRequest - tool_calls stripping > should strip tool_calls from messages when building request
AssertionError: expected { role: 'assistant' } to deeply equal { role: 'assistant', content: '' }

[32m- Expected[39m
[31m+ Received[39m

[2m  {[22m
[32m-   "content": "",[39m
[2m    "role": "assistant",[22m
[2m  }[22m

 ❯ src/providers/openai/buildResponsesRequest.stripToolCalls.test.ts:50:32
     48| 
     49|     // Second message should have tool_calls stripped
     50|     expect(request.input?.[1]).toEqual({
       |                                ^
     51|       role: ContentGeneratorRole.ASSISTANT,
     52|       content: '',

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[75/84]⎯

 FAIL  src/providers/openai-responses/OpenAIResponsesProvider.icontent.test.ts > OpenAIResponsesProvider IContent Integration > generateChatCompletionIContent > should convert IContent to IMessage format correctly
Error: Incorrect API key provided: test-api-key. You can find your API key at https://platform.openai.com/account/api-keys.
 ❯ parseErrorResponse src/providers/openai/parseResponsesStream.ts:562:21
    560|     } else {
    561|       // For unknown status codes, just return the message without pre…
    562|       const error = new Error(message);
       |                     ^
    563|       (error as { status?: number }).status = status;
    564|       (error as { code?: string }).code =
 ❯ OpenAIResponsesProvider.generateChatCompletionIContent src/providers/openai-responses/OpenAIResponsesProvider.ts:921:13
 ❯ src/providers/openai-responses/OpenAIResponsesProvider.icontent.test.ts:54:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[76/84]⎯

 FAIL  src/providers/openai-responses/OpenAIResponsesProvider.icontent.test.ts > OpenAIResponsesProvider IContent Integration > generateChatCompletionIContent > should handle tool calls correctly with hist_tool_ prefix conversion
Error: Incorrect API key provided: test-api-key. You can find your API key at https://platform.openai.com/account/api-keys.
 ❯ parseErrorResponse src/providers/openai/parseResponsesStream.ts:562:21
    560|     } else {
    561|       // For unknown status codes, just return the message without pre…
    562|       const error = new Error(message);
       |                     ^
    563|       (error as { status?: number }).status = status;
    564|       (error as { code?: string }).code =
 ❯ OpenAIResponsesProvider.generateChatCompletionIContent src/providers/openai-responses/OpenAIResponsesProvider.ts:921:13
 ❯ src/providers/openai-responses/OpenAIResponsesProvider.icontent.test.ts:117:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[77/84]⎯

 FAIL  src/providers/openai-responses/OpenAIResponsesProvider.icontent.test.ts > OpenAIResponsesProvider IContent Integration > generateChatCompletionIContent > should handle streaming text correctly
Error: Incorrect API key provided: test-api-key. You can find your API key at https://platform.openai.com/account/api-keys.
 ❯ parseErrorResponse src/providers/openai/parseResponsesStream.ts:562:21
    560|     } else {
    561|       // For unknown status codes, just return the message without pre…
    562|       const error = new Error(message);
       |                     ^
    563|       (error as { status?: number }).status = status;
    564|       (error as { code?: string }).code =
 ❯ OpenAIResponsesProvider.generateChatCompletionIContent src/providers/openai-responses/OpenAIResponsesProvider.ts:921:13
 ❯ src/providers/openai-responses/OpenAIResponsesProvider.icontent.test.ts:158:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[78/84]⎯

 FAIL  src/providers/openai-responses/OpenAIResponsesProvider.icontent.test.ts > OpenAIResponsesProvider IContent Integration > generateChatCompletionIContent > should convert tool responses with hist_tool_ prefix back to call_
Error: Incorrect API key provided: test-api-key. You can find your API key at https://platform.openai.com/account/api-keys.
 ❯ parseErrorResponse src/providers/openai/parseResponsesStream.ts:562:21
    560|     } else {
    561|       // For unknown status codes, just return the message without pre…
    562|       const error = new Error(message);
       |                     ^
    563|       (error as { status?: number }).status = status;
    564|       (error as { code?: string }).code =
 ❯ OpenAIResponsesProvider.generateChatCompletionIContent src/providers/openai-responses/OpenAIResponsesProvider.ts:921:13
 ❯ src/providers/openai-responses/OpenAIResponsesProvider.icontent.test.ts:229:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[79/84]⎯

 FAIL  src/providers/openai-responses/OpenAIResponsesProvider.icontent.test.ts > OpenAIResponsesProvider IContent Integration > generateChatCompletionIContent > should accumulate tool calls during streaming
Error: Incorrect API key provided: test-api-key. You can find your API key at https://platform.openai.com/account/api-keys.
 ❯ parseErrorResponse src/providers/openai/parseResponsesStream.ts:562:21
    560|     } else {
    561|       // For unknown status codes, just return the message without pre…
    562|       const error = new Error(message);
       |                     ^
    563|       (error as { status?: number }).status = status;
    564|       (error as { code?: string }).code =
 ❯ OpenAIResponsesProvider.generateChatCompletionIContent src/providers/openai-responses/OpenAIResponsesProvider.ts:921:13
 ❯ src/providers/openai-responses/OpenAIResponsesProvider.icontent.test.ts:302:24

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[80/84]⎯

 FAIL  src/services/history/HistoryService.test.ts > HistoryService - Behavioral Tests > History Management > should validate and fix unmatched tool calls
AssertionError: expected [] to have a length of 1 but got +0

[32m- Expected[39m
[31m+ Received[39m

[32m- 1[39m
[31m+ 0[39m

 ❯ src/services/history/HistoryService.test.ts:500:25
    498|       // Before fix, should have unmatched tool calls
    499|       const unmatched = service.findUnmatchedToolCalls();
    500|       expect(unmatched).toHaveLength(1);
       |                         ^
    501|       expect(unmatched[0].id).toBe('orphan1');
    502| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[81/84]⎯

 FAIL  src/services/history/circular-reference.test.ts > Circular Reference Bug > should handle complex nested parameters without circular references
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ src/services/history/circular-reference.test.ts:279:33
    277|         c.blocks.some((b) => (b as ToolResponseBlock).callId === toolC…
    278|     );
    279|     expect(hasOrphanInProvider).toBe(true);
       |                                 ^
    280| 
    281|     // Should be able to stringify the curated-for-provider version

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[82/84]⎯

 FAIL  src/services/history/findfiles-circular.test.ts > FindFiles Circular Reference Bug > getCuratedForProvider should handle FindFiles tool call with complex parameters
AssertionError: expected [] to have a length of 1 but got +0

[32m- Expected[39m
[31m+ Received[39m

[32m- 1[39m
[31m+ 0[39m

 ❯ src/services/history/findfiles-circular.test.ts:95:7
     93|     expect(
     94|       curatedForProvider!.filter((c) => c.speaker === 'tool'),
     95|     ).toHaveLength(1);
       |       ^
     96| 
     97|     // Step 4: Add the real tool response

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[83/84]⎯

 FAIL  src/services/history/findfiles-circular.test.ts > FindFiles Circular Reference Bug > should handle tool calls with deeply nested circular references
AssertionError: expected [] to have a length of 1 but got +0

[32m- Expected[39m
[31m+ Received[39m

[32m- 1[39m
[31m+ 0[39m

 ❯ src/services/history/findfiles-circular.test.ts:182:38
    180|       (c) => c.speaker === 'tool',
    181|     );
    182|     expect(toolResponsesForProvider).toHaveLength(1);
       |                                      ^
    183| 
    184|     // The synthetic response itself should be serializable

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[84/84]⎯

⎯⎯⎯⎯⎯⎯ Unhandled Errors ⎯⎯⎯⎯⎯⎯

Vitest caught 2 unhandled errors during the test run.
This might cause false positive tests. Resolve unhandled errors to make sure your tests are not affected.

⎯⎯⎯⎯ Unhandled Rejection ⎯⎯⎯⎯⎯
TypeError: this.config.getEphemeralSetting is not a function
 ❯ GeminiChat.shouldCompress src/core/geminiChat.ts:1024:22
    1022|     if (this.cachedCompressionThreshold === null) {
    1023|       const threshold =
    1024|         (this.config.getEphemeralSetting('compression-threshold') as
       |                      ^
    1025|           | number
    1026|           | undefined) ?? COMPRESSION_TOKEN_THRESHOLD;
 ❯ GeminiChat.sendMessage src/core/geminiChat.ts:470:21
 ❯ processTicksAndRejections node:internal/process/task_queues:105:5

This error originated in "src/core/geminiChat.test.ts" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.

⎯⎯⎯⎯ Unhandled Rejection ⎯⎯⎯⎯⎯
TypeError: this.config.getEphemeralSetting is not a function
 ❯ GeminiChat.shouldCompress src/core/geminiChat.ts:1024:22
    1022|     if (this.cachedCompressionThreshold === null) {
    1023|       const threshold =
    1024|         (this.config.getEphemeralSetting('compression-threshold') as
       |                      ^
    1025|           | number
    1026|           | undefined) ?? COMPRESSION_TOKEN_THRESHOLD;
 ❯ GeminiChat.sendMessage src/core/geminiChat.ts:470:21
 ❯ processTicksAndRejections node:internal/process/task_queues:105:5

This error originated in "src/core/geminiChat.test.ts" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯


 Test Files  28 failed | 160 passed | 8 skipped (196)
      Tests  82 failed | 2758 passed | 71 skipped (2911)
     Errors  2 errors
   Start at  23:20:15
   Duration  44.57s (transform 5.00s, setup 832ms, collect 53.19s, tests 64.42s, environment 23ms, prepare 13.31s)

JUNIT report written to /Users/acoliver/projects/llxprt-code/packages/core/junit.xml
npm error Lifecycle script `test` failed with error:
npm error code 1
npm error path /Users/acoliver/projects/llxprt-code/packages/core
npm error workspace @vybestack/llxprt-code-core@0.1.23
npm error location /Users/acoliver/projects/llxprt-code/packages/core
npm error command failed
npm error command sh -c vitest run


> llxprt-code-vscode-ide-companion@0.1.23 test
> vitest run


 RUN  v3.2.4 /Users/acoliver/projects/llxprt-code/packages/vscode-ide-companion

 ✓ src/open-files-manager.test.ts (17 tests) 15ms
stderr | src/extension.test.ts > activate > should show the info message on first activation
updateWorkspace called with  {
  subscriptions: [],
  environmentVariableCollection: {
    replace: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  globalState: {
    get: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    },
    update: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  extensionUri: { fsPath: [32m'/path/to/extension'[39m }
}

stderr | src/extension-multi-folder.test.ts > activate with multiple folders > should set a single folder path
updateWorkspace called with  {
  subscriptions: [],
  environmentVariableCollection: {
    replace: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  globalState: {
    get: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    },
    update: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  extensionUri: { fsPath: [32m'/path/to/extension'[39m }
}

stderr | src/extension.test.ts > activate > should not show the info message on subsequent activations
updateWorkspace called with  {
  subscriptions: [],
  environmentVariableCollection: {
    replace: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  globalState: {
    get: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    },
    update: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  extensionUri: { fsPath: [32m'/path/to/extension'[39m }
}

stderr | src/extension-multi-folder.test.ts > activate with multiple folders > should set multiple folder paths, separated by OS-specific path delimiter
updateWorkspace called with  {
  subscriptions: [],
  environmentVariableCollection: {
    replace: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  globalState: {
    get: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    },
    update: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  extensionUri: { fsPath: [32m'/path/to/extension'[39m }
}

stderr | src/extension.test.ts > activate > should launch the LLxprt Code when the user clicks the button
updateWorkspace called with  {
  subscriptions: [],
  environmentVariableCollection: {
    replace: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  globalState: {
    get: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    },
    update: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  extensionUri: { fsPath: [32m'/path/to/extension'[39m }
}

stderr | src/extension-multi-folder.test.ts > activate with multiple folders > should set an empty string if no folders are open
updateWorkspace called with  {
  subscriptions: [],
  environmentVariableCollection: {
    replace: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  globalState: {
    get: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    },
    update: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  extensionUri: { fsPath: [32m'/path/to/extension'[39m }
}

 ✓ src/extension.test.ts (3 tests) 7ms
stderr | src/extension-multi-folder.test.ts > activate with multiple folders > should update the path when workspace folders change
updateWorkspace called with  {
  subscriptions: [],
  environmentVariableCollection: {
    replace: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  globalState: {
    get: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    },
    update: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  extensionUri: { fsPath: [32m'/path/to/extension'[39m }
}

stderr | src/extension-multi-folder.test.ts > activate with multiple folders > should update the path when workspace folders change
updateWorkspace called with  {
  subscriptions: [
    [90mundefined[39m,
    [90mundefined[39m,
    [90mundefined[39m,
    [90mundefined[39m,
    { dispose: [36m[Function][39m },
    [90mundefined[39m,
    [90mundefined[39m
  ],
  environmentVariableCollection: {
    replace: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  globalState: {
    get: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    },
    update: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  extensionUri: { fsPath: [32m'/path/to/extension'[39m }
}
updateWorkspace called with  {
  subscriptions: [
    [90mundefined[39m,
    [90mundefined[39m,
    [90mundefined[39m,
    [90mundefined[39m,
    { dispose: [36m[Function][39m },
    [90mundefined[39m,
    [90mundefined[39m
  ],
  environmentVariableCollection: {
    replace: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  globalState: {
    get: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    },
    update: [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [32mSymbol(Symbol.dispose)[39m: [36m[Function (anonymous)][39m
    }
  },
  extensionUri: { fsPath: [32m'/path/to/extension'[39m }
}

 ✓ src/extension-multi-folder.test.ts (5 tests | 1 skipped) 8ms

 Test Files  3 passed (3)
      Tests  24 passed | 1 skipped (25)
   Start at  23:21:00
   Duration  474ms (transform 147ms, setup 0ms, collect 440ms, tests 30ms, environment 0ms, prepare 329ms)

